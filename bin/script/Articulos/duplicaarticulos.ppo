#line 38 "C:\fw195\Gestool\bin\include\FiveWin.Ch"
      static bError
#line 203 "C:\fw195\Gestool\bin\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 79 "C:\fw195\Gestool\bin\include\FiveWin.Ch"
         EXTERNAL FW_GT











extern errorsys
#line 8 "C:\fw195\Gestool\bin\Script\Articulos\duplicaarticulos.prg"
Function DuplicaArticulos( nView )

   local oDuplicaArticulos    := TDuplicaArticulos():New( nView )

   oDuplicaArticulos:Run()

Return nil



_HB_CLASS TDuplicaArticulos ; function TDuplicaArticulos ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TDuplicaArticulos", iif( .F., { }, { @HBObject() } ), @TDuplicaArticulos() ) ) ;

; _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )
; _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

; _HB_MEMBER { oSemanaOrigen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSemanaOrigen"}, .F. )
; _HB_MEMBER { cSemanaOrigen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSemanaOrigen"}, .F. )

; _HB_MEMBER { oSemanaDestino } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSemanaDestino"}, .F. )
; _HB_MEMBER { cSemanaDestino } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSemanaDestino"}, .F. )

; _HB_MEMBER { oBmpSemanaOrigen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBmpSemanaOrigen"}, .F. )
; _HB_MEMBER { oBmpSemanaDestino } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBmpSemanaDestino"}, .F. )

; _HB_MEMBER { cNewCodigo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cNewCodigo"}, .F. )

; _HB_MEMBER { selectArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"selectArticulo"}, .F. )
; _HB_MEMBER { selectPropiedades } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"selectPropiedades"}, .F. )

; _HB_MEMBER { cCodigoTipoArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodigoTipoArticulo"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TDuplicaArticulos_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Run(); oClass:AddMethod( "Run", @TDuplicaArticulos_Run(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SetResources(); oClass:AddInline( "SetResources", {|Self | ( ( Self ) ), ( SetResources( fullcurdir() + "Script\Articulos\DuplicaArticulos.dll" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER FreeResources(); oClass:AddInline( "FreeResources", {|Self | ( ( Self ) ), ( FreeResources() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @TDuplicaArticulos_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Process(); oClass:AddMethod( "Process", @TDuplicaArticulos_Process(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lValidProcess(); oClass:AddMethod( "lValidProcess", @TDuplicaArticulos_lValidProcess(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombreNuevoArticulo(); oClass:AddMethod( "getNombreNuevoArticulo", @TDuplicaArticulos_getNombreNuevoArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER duplicaPropiedades(); oClass:AddMethod( "duplicaPropiedades", @TDuplicaArticulos_duplicaPropiedades(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TDuplicaArticulos ;



static FUNCTION TDuplicaArticulos_New( nView ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos

   ::nView                    := nView

   ::cCodigoTipoArticulo      := "1   "

   ::selectArticulo           := "selectArticulo"
   ::selectPropiedades        := "selectPropiedades"

Return ( Self )



static FUNCTION TDuplicaArticulos_Run( ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos

   ::SetResources()

   ::Resource()

   ::FreeResources()

Return ( .T. )



static FUNCTION TDuplicaArticulos_Resource( ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos

   ::oDialog = TDialog():New(,,,,, "DUPLICAARTICULOS",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog" )






   ::oSemanaOrigen := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::cSemanaOrigen, ::cSemanaOrigen:= u ) }, ::oDialog,,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "LUPA",, 110 )

      ::oSemanaOrigen:bHelp   := {|| brwTemporada( ::oSemanaOrigen, ::oSemanaOrigen:oHelpText, ::oBmpSemanaDestino, .F. ) }
      ::oSemanaOrigen:bValid  := {|| cTemporada( ::oSemanaOrigen, D():Temporadas( ::nView ), ::oSemanaOrigen:oHelpText, ::oBmpSemanaDestino ) }




   ::oBmpSemanaOrigen := TBitmap():ReDefine( 120,,, ::oDialog,,, .F., .F.,,, .F.,,, .T. )






   ::oSemanaDestino := TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::cSemanaDestino, ::cSemanaDestino:= u ) }, ::oDialog,,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "LUPA",, 140 )

      ::oSemanaDestino:bHelp   := {|| brwTemporada( ::oSemanaDestino, ::oSemanaDestino:oHelpText, ::oBmpSemanaDestino, .F. ) }
      ::oSemanaDestino:bValid  := {|| cTemporada( ::oSemanaDestino, D():Temporadas( ::nView ), ::oSemanaDestino:oHelpText, ::oBmpSemanaDestino ) }




   ::oBmpSemanaDestino := TBitmap():ReDefine( 150,,, ::oDialog,,, .F., .F.,,, .F.,,, .T. )




   TButton():ReDefine( 1, {||( if( ::lValidProcess(), ::Process(), ) )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 2, {||( ::oDialog:End( 2 ) )}, ::oDialog,,, .F.,,,, .F. )

   ::oDialog:AddFastKey( 116, {|| if( ::lValidProcess(), ::Process(), ) } )

   ::oDialog:bStart := {|| ::oSemanaOrigen:SetFocus() }

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

   ::oBmpSemanaOrigen:End()
   ::oBmpSemanaDestino:End()

Return ( .T. )



static FUNCTION TDuplicaArticulos_lValidProcess( ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos

   if Empty( ::cSemanaOrigen )
      MsgStop( "La semana origen no puede estar vacía" )
      ::oSemanaOrigen:SetFocus()
      Return .F.
   end

   if Empty( ::cSemanaDestino )
      MsgStop( "La semana destino no puede estar vacía" )
      ::oSemanaDestino:SetFocus()
      Return .F.
   end

   if AllTrim( ::cSemanaOrigen ) == AllTrim( ::cSemanaDestino )
      MsgStop( "La semana origen no puede ser igual a la semana a crear" )
      ::oSemanaDestino:SetFocus()
      Return .F.
   end

Return ( .T. )



static FUNCTION TDuplicaArticulos_Process( ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos

   local cArticulos

   local cSql     := "SELECT * FROM " + cPatEmp() + "Articulo" +  " WHERE cCodTemp = " + quoted( ::cSemanaOrigen ) + " AND cCodTip = " + quoted( ::cCodigoTipoArticulo )

   ADSBaseModel():ExecuteSqlStatement( cSql, @::selectArticulo )

   ( ::selectArticulo )->( dbGoTop() )

   while !( ::selectArticulo )->( Eof() )

      MsgWait( "Duplicando:" + AllTrim( ( ::selectArticulo )->Codigo ) + " - " + AllTrim( ( ::selectArticulo )->Nombre ), "", 0.5 )

      ::cNewCodigo  := NextKey( dbLast( D():Articulos( ::nView ) ), D():Articulos( ::nView ) )



      appendRegisterByHash( ::selectArticulo, D():Articulos( ::nView ), {  "Codigo" => ::cNewCodigo , "Nombre" => ::getNombreNuevoArticulo() , "cCodTemp" => ::cSemanaDestino } )

      ::duplicaPropiedades()

      ( ::selectArticulo )->( dbSkip() )

   end

   ::oDialog:End( 1 )

Return ( .T. )



static FUNCTION TDuplicaArticulos_getNombreNuevoArticulo( ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos

   local cFufijo  := ""
   local cNombre  := ""

   cFufijo        := right( AllTrim( ::oSemanaDestino:oHelpText:VarGet() ), 2 )
   cNombre        := SubStr( AllTrim( ( ::selectArticulo )->Nombre ), 1, Len( AllTrim( ( ::selectArticulo )->Nombre ) ) - 2 )
   cNombre        += cFufijo

Return ( cNombre )



static FUNCTION TDuplicaArticulos_duplicaPropiedades( ) ; local Self AS CLASS TDuplicaArticulos := QSelf() AS CLASS TDuplicaArticulos


   local cSql     := "SELECT * FROM " + cPatEmp() + "ArtDiv" +  " WHERE cCodArt = " + quoted( ( ::selectArticulo )->Codigo )

   ADSBaseModel():ExecuteSqlStatement( cSql, @::selectPropiedades )

   ( ::selectPropiedades )->( dbGoTop() )

   while !( ::selectPropiedades )->( Eof() )

      appendRegisterByHash( ::selectPropiedades, D():ArticuloPrecioPropiedades( ::nView ), { "cCodArt" => ::cNewCodigo } )

      ( ::selectPropiedades )->( dbSkip() )

   end

Return ( .T. )
