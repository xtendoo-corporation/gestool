#line 3 "C:\fw195\Gestool\bin\Script\Articulos\eliminaobras.prg"
static nView
static dbfTmpObr



function InicioHRB( nVista )

   nView       := nVista

   Msginfo( "Voy a crear la temporal" )

   Creotemporal()

   Msginfo( "Paso los registros válidos" )
   pasoRegistros()

   CierroTemporal()

   Msginfo( "Proceso realizado con éxito" )

return .T.



Static Function CreoTemporal()

   local cTmpObr           := cGetNewFileName( "c:\ficheros\TmpObr" )

   if file( cTmpObr + ".dbf" ) .OR. file( cTmpObr + ".cdx" )
      dbfErase( cTmpObr )
   end

   dbCreate( cTmpObr, aSqlStruct( aItmObr() ), cLocalDriver() )
   dbUseArea( .T., cLocalDriver(), cTmpObr, cCheckArea( "TmpObr", @dbfTmpObr ), .F. )

   ( dbfTmpObr )->( ordCondSet( "!Deleted()", {||!Deleted()}  ) )
   ( dbfTmpObr )->( OrdCreate( cTmpObr, "cCliObr", "CCODCLI + CCODOBR", {|| Field->CCODCLI + Field->CCODOBR } ) )

   ( dbfTmpObr )->( OrdSetFocus( "cCliObr" ) )

Return .T.



Static Function CierroTemporal()

   if !Empty( dbfTmpObr ) .AND. ( dbfTmpObr )->( Used() )
      ( dbfTmpObr )->( dbCloseArea() )
   end

Return .T.



Static Function pasoRegistros()

   local nScan
   local n := 1

   ( D():ClientesDirecciones( nView ) )->( dbGoTop() )

   while !( D():ClientesDirecciones( nView ) )->( eof() )

      MsgWait( Str( n ) + Space( 1 ) + ( D():ClientesDirecciones( nView ) )->cCodCli + ( D():ClientesDirecciones( nView ) )->cCodObr, "Tit", 0,1 )

      if !( dbfTmpObr )->( dbSeek( ( D():ClientesDirecciones( nView ) )->CCODCLI + ( D():ClientesDirecciones( nView ) )->CCODOBR ) )
          dbPass( D():ClientesDirecciones( nView ), dbfTmpObr, .T. )
      end

      n++

      ( D():ClientesDirecciones( nView ) )->( dbSkip() )

   end

Return .T.
