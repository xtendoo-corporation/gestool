#line 38 "C:\fwh1801\Gestool\bin\include\FiveWin.Ch"
      static bError
#line 203 "C:\fwh1801\Gestool\bin\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 79 "C:\fwh1801\Gestool\bin\include\FiveWin.Ch"
         EXTERNAL FW_GT











extern errorsys
#line 8 "C:\fwh1801\Gestool\bin\Script\Articulos\pruebastock.prg"
Function PruebaStock( nView )

   local oPruebaStock    := TPruebaStock():New( nView )

   oPruebaStock:Run()

Return nil



_HB_CLASS TPruebaStock ; function TPruebaStock ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TPruebaStock", iif( .F., { }, { @HBObject() } ), @TPruebaStock() ) ) ;

; _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )
; _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

; _HB_MEMBER { oArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oArticulo"}, .F. )
; _HB_MEMBER { cArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cArticulo"}, .F. )

; _HB_MEMBER { oAlmacen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAlmacen"}, .F. )
; _HB_MEMBER { cAlmacen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cAlmacen"}, .F. )

; _HB_MEMBER { oLote } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oLote"}, .F. )
; _HB_MEMBER { cLote } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cLote"}, .F. )

; _HB_MEMBER { oSayStock } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayStock"}, .F. )
; _HB_MEMBER { cSayStock } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSayStock"}, .F. )

; _HB_MEMBER { oSayTime } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayTime"}, .F. )
; _HB_MEMBER { cSayTime } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSayTime"}, .F. )

; _HB_MEMBER { oSayTotStock } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayTotStock"}, .F. )
; _HB_MEMBER { cSayTotStock } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSayTotStock"}, .F. )

; _HB_MEMBER { oSayTotTime } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayTotTime"}, .F. )
; _HB_MEMBER { cSayTotTime } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSayTotTime"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TPruebaStock_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Run(); oClass:AddMethod( "Run", @TPruebaStock_Run(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SetResources(); oClass:AddInline( "SetResources", {|Self | ( ( Self ) ), ( SetResources( fullcurdir() + "Script\Articulos\pruebastock.dll" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER FreeResources(); oClass:AddInline( "FreeResources", {|Self | ( ( Self ) ), ( FreeResources() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @TPruebaStock_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Process(); oClass:AddMethod( "Process", @TPruebaStock_Process(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TPruebaStock ;



static FUNCTION TPruebaStock_New( nView ) ; local Self AS CLASS TPruebaStock := QSelf() AS CLASS TPruebaStock

   ::nView                    := nView

   ::cArticulo                := Space( 18 )
   ::cAlmacen                 := Space( 16 )
   ::cLote                    := Space( 14 )
   ::cSayStock                := Space( 1 )
   ::cSayTime                 := Space( 1 )

Return ( Self )



static FUNCTION TPruebaStock_Run( ) ; local Self AS CLASS TPruebaStock := QSelf() AS CLASS TPruebaStock

   ::SetResources()

   ::Resource()

   ::FreeResources()

Return ( .T. )



static FUNCTION TPruebaStock_Resource( ) ; local Self AS CLASS TPruebaStock := QSelf() AS CLASS TPruebaStock

   ::oDialog = TDialog():New(,,,,, "PRUEBASTOCKS",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog" )




   ::oArticulo := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::cArticulo, ::cArticulo:= u ) }, ::oDialog,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )




   ::oAlmacen := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::cAlmacen, ::cAlmacen:= u ) }, ::oDialog,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )




   ::oLote := TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::cLote, ::cLote:= u ) }, ::oDialog,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )




   ::oSayStock := TSay():ReDefine( 140, {||      ::cSayStock}, ::oDialog,,,, .F.,, .F., .F. )




   ::oSayTime := TSay():ReDefine( 150, {||      ::cSayTime}, ::oDialog,,,, .F.,, .F., .F. )




   ::oSayTotStock := TSay():ReDefine( 160, {||      ::cSayTotStock}, ::oDialog,,,, .F.,, .F., .F. )




   ::oSayTotTime := TSay():ReDefine( 170, {||      ::cSayTotTime}, ::oDialog,,,, .F.,, .F., .F. )




   TButton():ReDefine( 1, {||( ::Process() )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 2, {||( ::oDialog:End( 2 ) )}, ::oDialog,,, .F.,,,, .F. )

   ::oDialog:AddFastKey( 116, {|| ::Process() } )

   ::oDialog:bStart := {|| ::oArticulo:SetFocus() }

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

Return ( .T. )



static FUNCTION TPruebaStock_Process( ) ; local Self AS CLASS TPruebaStock := QSelf() AS CLASS TPruebaStock

   local nSec
   local nResult
   local nTime

   ::cArticulo                := Padr( ::cArticulo , 18 )
   ::cAlmacen                 := Padr( ::cAlmacen , 18 )
   ::cLote                    := Padr( ::cLote , 18 )

   nSec     := seconds()
   nRetult  := StocksModel():nSQLStockActual( ::cArticulo, ::cAlmacen, , , , , ::cLote )
   nSec     := seconds() - nSec

   ::oSayStock:SetText( "Stock por lote: " + Trans( nRetult, "@E 999,999.999" ) )
   ::oSayTime:SetText( "Tiempo: " + Str( nSec ) )

   SysRefresh()

   nSec     := seconds()
   nRetult  := StocksModel():nSQLGlobalStockActual( ::cArticulo, ::cAlmacen )
   nSec     := seconds() - nSec

   ::oSayTotStock:SetText( "Stock del almacén: " + Trans( nRetult, "@E 999,999.999" ) )
   ::oSayTotTime:SetText( "Tiempo: " + Str( nSec ) )

   SysRefresh()

Return ( .T. )
