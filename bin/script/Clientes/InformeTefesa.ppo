#line 38 "C:\fwh1801\Gestool\bin\include\FiveWin.Ch"
      static bError
#line 203 "C:\fwh1801\Gestool\bin\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 79 "C:\fwh1801\Gestool\bin\include\FiveWin.Ch"
         EXTERNAL FW_GT











extern errorsys
#line 5 "C:\fwh1801\Gestool\bin\Script\Clientes\InformeTefesa.prg"
memvar cNombreTarifa
memvar cNombreCliente



Function InformeTefesa( nView )

   local oInforme    := TInformeTefesa():New( nView )

   oInforme:Run()

Return nil



_HB_CLASS TInformeTefesa ; function TInformeTefesa ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TInformeTefesa", iif( .F., { }, { @HBObject() } ), @TInformeTefesa() ) ) ;

; _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )
; _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

; _HB_MEMBER { cNameFr } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cNameFr"}, .F. )

; _HB_MEMBER { oFastReport } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFastReport"}, .F. )

; _HB_MEMBER { cCodCliente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodCliente"}, .F. )
; _HB_MEMBER { cNomCliente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cNomCliente"}, .F. )
; _HB_MEMBER { oCliente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCliente"}, .F. )
; _HB_MEMBER { cCliente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCliente"}, .F. )

; _HB_MEMBER { cCodTarifa } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodTarifa"}, .F. )
; _HB_MEMBER { cNomTarifa } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cNomTarifa"}, .F. )
; _HB_MEMBER { oTarifa } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTarifa"}, .F. )
; _HB_MEMBER { cTarifa } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTarifa"}, .F. )

; _HB_MEMBER { cDirectorio } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cDirectorio"}, .F. )
; _HB_MEMBER { oDirectorio } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDirectorio"}, .F. )

; _HB_MEMBER { oBrowseArticulos } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBrowseArticulos"}, .F. )
; _HB_MEMBER { aArticulos } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aArticulos"}, .F. )

; _HB_MEMBER { cTmpLin } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTmpLin"}, .F. )
; _HB_MEMBER { dbfTmpLin } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"dbfTmpLin"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TInformeTefesa_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Run(); oClass:AddMethod( "Run", @TInformeTefesa_Run(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SetResources(); oClass:AddInline( "SetResources", {|Self | ( ( Self ) ), ( SetResources( fullcurdir() + "Script\Clientes\InformeTefesa.dll" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER FreeResources(); oClass:AddInline( "FreeResources", {|Self | ( ( Self ) ), ( FreeResources() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @TInformeTefesa_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Process(); oClass:AddMethod( "Process", @TInformeTefesa_Process(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER LoadArticulos(); oClass:AddMethod( "LoadArticulos", @TInformeTefesa_LoadArticulos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER printReport(); oClass:AddMethod( "printReport", @TInformeTefesa_printReport(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER createReport(); oClass:AddMethod( "createReport", @TInformeTefesa_createReport(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER designReport(); oClass:AddMethod( "designReport", @TInformeTefesa_designReport(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER DataReport(); oClass:AddMethod( "DataReport", @TInformeTefesa_DataReport(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER VariableReport(); oClass:AddMethod( "VariableReport", @TInformeTefesa_VariableReport(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Sel(); oClass:AddMethod( "Sel", @TInformeTefesa_Sel(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SelAll( lSel); oClass:AddMethod( "SelAll", @TInformeTefesa_SelAll(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SaveConfig(); oClass:AddMethod( "SaveConfig", @TInformeTefesa_SaveConfig(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TInformeTefesa ;



static FUNCTION TInformeTefesa_New( nView ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   ::nView                 := nView

   ::cCodCliente           := ( D():Clientes( nView ) )->Cod
   ::cNomCliente           := ( D():Clientes( nView ) )->Titulo
   ::cCliente              := AllTrim( ::cCodCliente ) + " - " + AllTrim( ::cNomCliente )
   ::cCodTarifa            := ( D():Clientes( nView ) )->cCodTar
   ::cNomTarifa            := TarifasModel():getName( ( D():Clientes( nView ) )->cCodTar )
   ::cTarifa               := AllTrim( ::cCodTarifa ) + " - " + AllTrim( ::cNomTarifa )

   ::aArticulos            := {}

   ::cNameFr               := fullcurdir() + "Script\Clientes\InformeTefesa.fr3"

   ::cDirectorio           := fullcurdir() + "Script\Clientes\PDF\"

Return ( Self )



static FUNCTION TInformeTefesa_Run( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   local cDbfLin  := "TemporalScript"

   if Empty( ::cCodCliente )
      MsgStop( "Tiene que seleccionar un cliente." )
      Return .T.
   end

   if Empty( ::cCodTarifa )
      MsgStop( "El cliente seleccionado no tiene tarifa aplicada." )
      Return .T.
   end



   ::cTmpLin        := cGetNewFileName( cPatTmp() + cDbfLin )

   dbCreate( ::cTmpLin, aSqlStruct( aItmTemporal() ), cLocalDriver() )
   dbUseArea( .T., cLocalDriver(), ::cTmpLin, cCheckArea( cDbfLin, @::dbfTmpLin ), .F. )

   if !NetErr() .AND. ( ::dbfTmpLin )->( Used() )
      ( ::dbfTmpLin )->( OrdCondSet( "!Deleted()", {|| !Deleted() } ) )
      ( ::dbfTmpLin )->( OrdCreate( ::cTmpLin, "nPosPrint", "nPosPrint", {|| Field->nPosPrint } ) )
   end

   ::LoadArticulos()

   if ( ::dbfTmpLin )->( RecCount() ) <= 0
      MsgStop( "La tarifa seleccionada no tiene articulos incluidos." )
      Return .T.
   end

   ::SetResources()

   ::Resource()

   ::FreeResources()



   if !empty( ::dbfTmpLin ) .AND. ( ::dbfTmpLin )->( Used() )
      ( ::dbfTmpLin )->( dbCloseArea() )
   end

   ::dbfTmpLin      := nil

   dbfErase( ::cTmpLin )

Return ( .T. )



static FUNCTION TInformeTefesa_LoadArticulos( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   local nOrdAnt  := ( D():TarifaPreciosLineas( ::nView ) )->( OrdSetFocus( "CCODTAR" ) )
   local aImages  := {}
   local cImagen1 := ""
   local cImagen2 := ""
   local cImagen3 := ""
   local cImagen4 := ""
   local cImagen5 := ""
   local nDtoAtp  := 0
   local nCount   := 1

   ::aArticulos   := {}

   ( D():TarifaPreciosLineas( ::nView ) )->( dbGoTop() )

   if ( D():TarifaPreciosLineas( ::nView ) )->( dbSeek( ::cCodTarifa ) )

      while ( D():TarifaPreciosLineas( ::nView ) )->cCodTar == ::cCodTarifa .AND. !( D():TarifaPreciosLineas( ::nView ) )->( Eof() )



         aImages      := ArticulosImagenesModel():getList( ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )

         if len( aImages ) > 0

            for n := 1 to len( aImages )

               do case
                  case n == 1
                     cImagen1 := AllTrim( hGet( aImages[n], "CIMGART" ) )
                  case n == 2
                     cImagen2 := AllTrim( hGet( aImages[n], "CIMGART" ) )
                  case n == 3
                     cImagen3 := AllTrim( hGet( aImages[n], "CIMGART" ) )
                  case n == 4
                     cImagen4 := AllTrim( hGet( aImages[n], "CIMGART" ) )
                  case n == 5
                     cImagen5 := AllTrim( hGet( aImages[n], "CIMGART" ) )
               end

            next

         end



         nDtoAtp := AtipicasModel():getDtoFromClienteArticulo( ::cCodCliente, ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )



         if ( ::dbfTmpLin )->( Used() )

            ( ::dbfTmpLin )->( dbAppend() )

            if ( D():TarifaPreciosLineas( ::nView ) )->nPosPrint == 0
               ( ::dbfTmpLin )->nPosPrint := nCount
            else
               ( ::dbfTmpLin )->nPosPrint := ( D():TarifaPreciosLineas( ::nView ) )->nPosPrint
            end

            ( ::dbfTmpLin )->lSel      := ( D():TarifaPreciosLineas( ::nView ) )->lSel
            ( ::dbfTmpLin )->cCodArt   := ( D():TarifaPreciosLineas( ::nView ) )->cCodArt
            ( ::dbfTmpLin )->cNomArt   := ( D():TarifaPreciosLineas( ::nView ) )->cNomArt
            ( ::dbfTmpLin )->nPrcTar1  := ( D():TarifaPreciosLineas( ::nView ) )->nPrcTar1
            ( ::dbfTmpLin )->nPrcTar2  := ( D():TarifaPreciosLineas( ::nView ) )->nPrcTar2
            ( ::dbfTmpLin )->cCodFam   := ArticulosModel():getField( "Familia", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->cNomFam   := FamiliasModel():getField( "cNomFam", "cCodFam", ArticulosModel():getField( "Familia", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt ) )
            ( ::dbfTmpLin )->cCodFab   := ArticulosModel():getField( "cCodFab", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->cNomFab   := FabricantesModel():getField( "cNomFab", "cCodFab", ArticulosModel():getField( "cCodFab", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt ) )
            ( ::dbfTmpLin )->nPesoKg   := ArticulosModel():getField( "nPesoKg", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->cUnidad   := ArticulosModel():getField( "cUnidad", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->nIncPrc1  := ArticulosModel():getField( "nIncPrc1", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->nIncPrc2  := ArticulosModel():getField( "nIncPrc2", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->nIncPrc3  := ArticulosModel():getField( "nIncPrc3", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->nUndPal   := ArticulosModel():getField( "nUndPal", "Codigo", ( D():TarifaPreciosLineas( ::nView ) )->cCodArt )
            ( ::dbfTmpLin )->cImagen1  := cImagen1
            ( ::dbfTmpLin )->cImagen2  := cImagen2
            ( ::dbfTmpLin )->cImagen3  := cImagen3
            ( ::dbfTmpLin )->cImagen4  := cImagen4
            ( ::dbfTmpLin )->cImagen5  := cImagen5
            ( ::dbfTmpLin )->nDtoAtp   := nDtoAtp

         end

         cImagen1 := ""
         cImagen2 := ""
         cImagen3 := ""
         cImagen4 := ""
         cImagen5 := ""
         nCount++

         ( D():TarifaPreciosLineas( ::nView ) )->( dbSkip() )

      end

   end

   ( D():TarifaPreciosLineas( ::nView ) )->( OrdSetFocus( nOrdAnt ) )

   ( ::dbfTmpLin )->( dbGoTop() )

Return ( .T. )



static FUNCTION TInformeTefesa_Resource( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   ::oDialog = TDialog():New(,,,,, "INFORME",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog" )




   ::oCliente := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::cCliente, ::cCliente:= u ) }, ::oDialog,,,,,,,,, .F., {||     ( .F. )},, .F., .F.,,,,,, nil,,, )




   ::oTarifa := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::cTarifa, ::cTarifa:= u ) }, ::oDialog,,,,,,,,, .F., {||     ( .F. )},, .F., .F.,,,,,, nil,,, )




   ::oDirectorio := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::cDirectorio, ::cDirectorio:= u ) }, ::oDialog,,,,,,,,, .F., {||     ( .F. )},, .F., .F.,,,,,, nil,,, )

   ::oBrowseArticulos                        := IXBrowse():New( ::oDialog )

   ::oBrowseArticulos:bClrSel                := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
   ::oBrowseArticulos:bClrSelFocus           := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }



   ::oBrowseArticulos:cAlias                 := ::dbfTmpLin

   ::oBrowseArticulos:nMarqueeStyle          := 5
   ::oBrowseArticulos:lRecordSelector        := .F.
   ::oBrowseArticulos:lHScroll               := .F.

   ::oBrowseArticulos:bLDblClick             := {|| ::Sel() }

   ::oBrowseArticulos:CreateFromResource( 200 )

   with object ( ::oBrowseArticulos:AddCol() )
      :cHeader          := "S."
      :bEditValue       := {|| ( ::dbfTmpLin )->lSel }
      :nWidth           := 20
      :SetCheck( { "Sel16", "Nil16" } )
   end

   with object ( ::oBrowseArticulos:AddCol() )
      :cHeader          := "Pos"
      :bEditValue       := {|| ( ::dbfTmpLin )->nPosPrint }
      :nWidth           := 40
   end

   with object ( ::oBrowseArticulos:AddCol() )
      :cHeader          := "Codigo"
      :bEditValue       := {|| ( ::dbfTmpLin )->cCodArt }
      :nWidth           := 150
   end

   with object ( ::oBrowseArticulos:AddCol() )
      :cHeader          := "Articulo"
      :bEditValue       := {|| ( ::dbfTmpLin )->cNomArt }
      :nWidth           := 250
   end

   with object ( ::oBrowseArticulos:AddCol() )
      :cHeader          := "Fabrica"
      :bEditValue       := {|| ( ::dbfTmpLin )->nPrcTar1 }
      :cEditPicture     := cPouDiv()
      :nWidth           := 80
   end

   with object ( ::oBrowseArticulos:AddCol() )
      :cHeader          := "Destino"
      :bEditValue       := {|| ( ::dbfTmpLin )->nPrcTar2 }
      :cEditPicture     := cPouDiv()
      :nWidth           := 80
   end




   TButton():ReDefine( 500, {||( ::designReport() )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 510, {||( ::SelAll( .T. ) )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 520, {||( ::SelAll( .F. ) )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 530, {||( ::SaveConfig(), MsgInfo( "Configuracion guardada con exito" ) )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 540, {||( lineUp( ::dbfTmpLin, ::oBrowseArticulos ) )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 550, {||( LineDown( ::dbfTmpLin, ::oBrowseArticulos ) )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 1, {||( ::Process(), ::SaveConfig() )}, ::oDialog,,, .F.,,,, .F. )




   TButton():ReDefine( 2, {||( ::SaveConfig(), ::oDialog:End( 2 ) )}, ::oDialog,,, .F.,,,, .F. )

   ::oDialog:AddFastKey( 116, {|| ::Process() } )

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

Return ( .T. )



static FUNCTION TInformeTefesa_Sel( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   if dbLock( ::dbfTmpLin )
      ( ::dbfTmpLin )->lSel := !( ::dbfTmpLin )->lSel
      ( ::dbfTmpLin )->( dbUnLock() )
   end

   ::oBrowseArticulos:Refresh()

Return ( .T. )



static FUNCTION TInformeTefesa_SelAll( lSel ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   If( lSel == nil, lSel := .T., ) ;

   nRec           := ( ::dbfTmpLin )->( Recno() )

   ( ::dbfTmpLin )->( dbGoTop() )

   while !( ::dbfTmpLin )->( Eof() )

      if dbLock( ::dbfTmpLin )
         ( ::dbfTmpLin )->lSel := lSel
         ( ::dbfTmpLin )->( dbUnLock() )
      end

      ( ::dbfTmpLin )->( dbSkip() )

   end

   ( ::dbfTmpLin )->( dbGoTo( nRec ) )

   ::oBrowseArticulos:Refresh()

Return ( .T. )



static FUNCTION TInformeTefesa_Process( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa



   ::printReport()

   ::oDialog:End( 1 )

Return ( .T. )



static FUNCTION TInformeTefesa_printReport( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   ::oFastReport := frReportManager():New()

   ::oFastReport:ClearDataSets()

   ::oFastReport:LoadLangRes( "Spanish.Xml" )

   ::oFastReport:SetProperty( "Designer.DefaultFont", "Name", "Verdana")

   ::oFastReport:SetProperty( "Designer.DefaultFont", "Size", 10)

   ::oFastReport:SetIcon( 1 )

   ::VariableReport()

   ::oFastReport:SetTitle( "Diseñador de documentos" )

   ::DataReport()

   ::oFastReport:loadFromFile( ::cNameFr )

   ::oFastReport:PrepareReport()

   ::oFastReport:SetProperty(  "PDFExport", "ShowDialog",       .F. )
   ::oFastReport:SetProperty(  "PDFExport", "DefaultPath",      AllTrim( ::cDirectorio ) )
   ::oFastReport:SetProperty(  "PDFExport", "FileName",         "TARIFA " + AllTrim( ::cCodCliente ) + " - " + AllTrim( ::cNomCliente ) + trimedSeconds() + ".pdf" )
   ::oFastReport:SetProperty(  "PDFExport", "EmbeddedFonts",    .T. )
   ::oFastReport:SetProperty(  "PDFExport", "PrintOptimized",   .T. )
   ::oFastReport:SetProperty(  "PDFExport", "Outline",          .T. )
   ::oFastReport:SetProperty(  "PDFExport", "OpenAfterExport",  .F. )
   ::oFastReport:DoExport(     "PDFExport" )

   ::oFastReport:destroyFr()

   ::oFastReport := nil

   shellExecute( 0, "open", ( AllTrim( ::cDirectorio ) ), , , 1 )

Return ( .T. )



static FUNCTION TInformeTefesa_designReport( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   ::oFastReport := frReportManager():New()

   ::oFastReport:ClearDataSets()

   ::oFastReport:LoadLangRes( "Spanish.Xml" )

   ::oFastReport:SetProperty( "Designer.DefaultFont", "Name", "Verdana")

   ::oFastReport:SetProperty( "Designer.DefaultFont", "Size", 10)

   ::oFastReport:SetIcon( 1 )

   ::VariableReport()

   ::oFastReport:SetTitle( "Diseñador de documentos" )

   ::DataReport()

   ::oFastReport:loadFromFile( ::cNameFr )

   ::oFastReport:DesignReport()

   ::oFastReport:destroyFr()

   ::oFastReport := nil

Return ( .T. )



static FUNCTION TInformeTefesa_createReport( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   ::oFastReport := frReportManager():New()

   ::oFastReport:ClearDataSets()

   ::oFastReport:LoadLangRes( "Spanish.Xml" )

   ::oFastReport:SetProperty( "Designer.DefaultFont", "Name", "Verdana")

   ::oFastReport:SetProperty( "Designer.DefaultFont", "Size", 10)

   ::oFastReport:SetIcon( 1 )

   ::oFastReport:SetTitle( "Diseñador de documentos" )

   ::oFastReport:SetProperty(     "Report",            "ScriptLanguage",   "PascalScript" )

   ::oFastReport:AddPage(         "MainPage" )

   ::oFastReport:AddBand(         "CabeceraDocumento", "MainPage",         2 )
   ::oFastReport:SetProperty(     "CabeceraDocumento", "Top",              0 )
   ::oFastReport:SetProperty(     "CabeceraDocumento", "Height",           100 )

   ::oFastReport:AddBand(         "MasterData",        "MainPage",         6 )
   ::oFastReport:SetProperty(     "MasterData",        "Top",              100 )
   ::oFastReport:SetProperty(     "MasterData",        "Height",           100 )
   ::oFastReport:SetProperty(     "MasterData",        "StartNewPage",     .T. )

   ::oFastReport:AddBand(         "DetalleColumnas",   "MainPage",         7  )
   ::oFastReport:SetProperty(     "DetalleColumnas",   "Top",              230 )
   ::oFastReport:SetProperty(     "DetalleColumnas",   "Height",           28 )
   ::oFastReport:SetProperty(     "DetalleColumnas",   "OnMasterDetail",   "DetalleOnMasterDetail" )

   ::oFastReport:AddBand(         "PieDocumento",      "MainPage",         3 )
   ::oFastReport:SetProperty(     "PieDocumento",      "Top",              930 )
   ::oFastReport:SetProperty(     "PieDocumento",      "Height",           100 )

   ::oFastReport:SaveToFile( ::cNameFr )

   ::oFastReport:destroyFr()

   ::oFastReport := nil

Return ( .T. )



static FUNCTION TInformeTefesa_DataReport( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   local np

   ::oFastReport:SetWorkArea(     "Informe", ( ::dbfTmpLin )->( Select() ) )
   ::oFastReport:SetFieldAliases( "Informe", cItemsToReport( aItmTemporal() ) )









Return ( .T. )



static FUNCTION TInformeTefesa_VariableReport( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   public cNombreCliente                := ::cNomCliente
   public cNombreTarifa                 := ::cNomTarifa

   ::oFastReport:AddVariable(     "Informe", "Nombre tarifa",                "GetHbVar('cNombreTarifa')" )
   ::oFastReport:AddVariable(     "Informe", "Nombre cliente",               "GetHbVar('cNombreCliente')" )

Return ( .T. )



static FUNCTION TInformeTefesa_SaveConfig( ) ; local Self AS CLASS TInformeTefesa := QSelf() AS CLASS TInformeTefesa

   local nRec           := ( ::dbfTmpLin )->( Recno() )

   ( ::dbfTmpLin )->( dbGoTop() )

   while !( ::dbfTmpLin )->( Eof() )

      TarifasLineasModel():SaveSelTar( ::cCodTarifa, ( ::dbfTmpLin )->cCodArt, ( ::dbfTmpLin )->lSel, ( ::dbfTmpLin )->nPosPrint )

      ( ::dbfTmpLin )->( dbSkip() )

   end

   ( ::dbfTmpLin )->( dbGoTo( nRec ) )


Return ( .T. )



function aItmTemporal()

   local aItmTemporal  := {}

   aAdd( aItmTemporal, {"nPosPrint"    ,"N", 16, 6, "Posición impresion" ,    "", "( cDbf )" } )
   aAdd( aItmTemporal, {"lSel"         ,"L",  1, 0, "Selecionado" ,           "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cCodArt"      ,"C", 18, 0, "Código articulo" ,       "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cNomArt"      ,"C",150, 0, "Nombre articulo" ,       "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nPrcTar1"     ,"N", 16, 6, "Precio 1" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nPrcTar2"     ,"N", 16, 6, "Precio 2" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cCodFam"      ,"C", 10, 0, "Codigo familia" ,        "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cNomFam"      ,"C",150, 0, "Nombre familia" ,        "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cCodFab"      ,"C", 10, 0, "Codigo fabricante" ,     "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cNomFab"      ,"C",150, 0, "Nombre fabricante" ,     "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nPesoKg"      ,"N", 16, 6, "Peso" ,                  "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cUnidad"      ,"C",  1, 0, "Unidad" ,                "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nIncPrc1"     ,"N", 16, 6, "Incremento 1" ,          "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nIncPrc2"     ,"N", 16, 6, "Incremento 2" ,          "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nIncPrc3"     ,"N", 16, 6, "Incremento 3" ,          "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nUndPal"      ,"N", 16, 6, "Unidad palet" ,          "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cImagen1"     ,"C",200, 0, "Imagen 1" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cImagen2"     ,"C",200, 0, "Imagen 2" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cImagen3"     ,"C",200, 0, "Imagen 3" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cImagen4"     ,"C",200, 0, "Imagen 4" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"cImagen5"     ,"C",200, 0, "Imagen 5" ,              "", "( cDbf )" } )
   aAdd( aItmTemporal, {"nDtoAtp"      ,"N", 16, 6, "Descuento" ,             "", "( cDbf )" } )

RETURN ( aItmTemporal )
