#line 38 "C:\fwh1801\Gestool\bin\include\FiveWin.Ch"
      static bError
#line 203 "C:\fwh1801\Gestool\bin\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 79 "C:\fwh1801\Gestool\bin\include\FiveWin.Ch"
         EXTERNAL FW_GT











extern errorsys
#line 8 "C:\fwh1801\Gestool\bin\Script\PedidosProveedores\RegEstadoLine.prg"
Function RegeneraEstadoLinea( nView )

   local oRegeneraEstadoLinea    := TRegeneraEstadoLinea():New( nView )

   msgRun( "Recalculando estado de lineas", "Espere por favor...", {|| oRegeneraEstadoLinea:Run() } )

   MsgInfo( "Proceso finalizado" )

Return nil



_HB_CLASS TRegeneraEstadoLinea ; function TRegeneraEstadoLinea ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TRegeneraEstadoLinea", iif( .F., { }, { @HBObject() } ), @TRegeneraEstadoLinea() ) ) ;

; _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

; _HB_MEMBER { nRecAnt } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nRecAnt"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TRegeneraEstadoLinea_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Run(); oClass:AddMethod( "Run", @TRegeneraEstadoLinea_Run(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TRegeneraEstadoLinea ;



static FUNCTION TRegeneraEstadoLinea_New( nView ) ; local Self AS CLASS TRegeneraEstadoLinea := QSelf() AS CLASS TRegeneraEstadoLinea

   ::nView                    := nView

   ::nRecAnt                  := ( D():PedidosProveedores( ::nView ) )->( Recno() )

Return ( Self )



static FUNCTION TRegeneraEstadoLinea_Run( ) ; local Self AS CLASS TRegeneraEstadoLinea := QSelf() AS CLASS TRegeneraEstadoLinea

   ( D():PedidosProveedores( ::nView ) )->( dbGoTop() )

   while !( D():PedidosProveedores( ::nView ) )->( Eof() )

      SetEstadoLinePedProv( ( D():PedidosProveedores( ::nView ) )->cSerPed + Str( ( D():PedidosProveedores( ::nView ) )->nNumPed ) + ( D():PedidosProveedores( ::nView ) )->cSufPed, ::nView )

      ( D():PedidosProveedores( ::nView ) )->( dbSkip() )

   end

   ( D():PedidosProveedores( ::nView ) )->( dbGoTo( ::nRecAnt ) )

Return ( .T. )
