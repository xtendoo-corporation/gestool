#line 38 "C:\fw195\Gestool\bin\include\FiveWin.Ch"
      static bError
#line 203 "C:\fw195\Gestool\bin\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 79 "C:\fw195\Gestool\bin\include\FiveWin.Ch"
         EXTERNAL FW_GT











extern errorsys
#line 14 "C:\fw195\Gestool\bin\Script\PedidosProveedoresLineas\F2\creaArticulo.prg"
function InicioHRB( nView, aGet )

   local cCodArt

   cCodArt  :=  fastAddArticulo():run( nView )

   if !Empty( aGet[ ( D():PedidosProveedoresLineas( nView ) )->( fieldpos( "cRef" ) ) ] )
      aGet[ ( D():PedidosProveedoresLineas( nView ) )->( fieldpos( "cRef" ) ) ]:cText( cCodArt )
      aGet[ ( D():PedidosProveedoresLineas( nView ) )->( fieldpos( "cRef" ) ) ]:lValid()
   end

return ( nil )



_HB_CLASS fastAddArticulo ; function fastAddArticulo ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "fastAddArticulo", iif( .F., { }, { @HBObject() } ), @fastAddArticulo() ) ) ;

; _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

; _HB_MEMBER { oDlg } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDlg"}, .F. )
; _HB_MEMBER { oBrw } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBrw"}, .F. )
; _HB_MEMBER { oCol } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCol"}, .F. )

; _HB_MEMBER { cCodigoArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodigoArticulo"}, .F. )

; _HB_MEMBER { aCampos } ; oClass:AddMultiData(, {}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aCampos"}, .F. )
; _HB_MEMBER { hFamilias } ; oClass:AddMultiData(, {=>}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hFamilias"}, .F. )
; _HB_MEMBER { hTiposArticulos } ; oClass:AddMultiData(, {=>}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hTiposArticulos"}, .F. )

; _HB_MEMBER { hFormatoColumnas } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hFormatoColumnas"}, .F. )

   _HB_MEMBER run( nView); oClass:AddMethod( "run", @fastAddArticulo_run(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setCampos(); oClass:AddMethod( "setCampos", @fastAddArticulo_setCampos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @fastAddArticulo_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER addArticulo(); oClass:AddMethod( "addArticulo", @fastAddArticulo_addArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getCodigoArticulo(); oClass:AddMethod( "getCodigoArticulo", @fastAddArticulo_getCodigoArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setColType(); oClass:AddInline( "setColType", {|Self, uValue | ( ( Self ) ), ( ::oCol:nEditType := uValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setColPicture(); oClass:AddInline( "setColPicture", {|Self, uValue | ( ( Self ) ), ( ::oCol:cEditPicture := uValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setColListTxt(); oClass:AddInline( "setColListTxt", {|Self, aValue | ( ( Self ) ), ( ::oCol:aEditListTxt := aValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER startDialog(); oClass:AddMethod( "startDialog", @fastAddArticulo_startDialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER addCampoExtra( Codigo, Clave, Valor); oClass:AddMethod( "addCampoExtra", @fastAddArticulo_addCampoExtra(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getArrayFamilias(); oClass:AddMethod( "getArrayFamilias", @fastAddArticulo_getArrayFamilias(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ChangeBrowse(); oClass:AddMethod( "ChangeBrowse", @fastAddArticulo_ChangeBrowse(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lPresave(); oClass:AddMethod( "lPresave", @fastAddArticulo_lPresave(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getArrayTiposArticulos(); oClass:AddMethod( "getArrayTiposArticulos", @fastAddArticulo_getArrayTiposArticulos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS fastAddArticulo ;



static FUNCTION fastAddArticulo_run( nView ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   ::nView     := nView





   ::hFormatoColumnas      := {  "get"    => {||   ::setColType( 1 ) , ::setColPicture( hGet( ::aCampos[ ::oBrw:nArrayAt ], "picture" ) ) } , "combo"  => {||   ::setColType( 2 ) , ::setColListTxt( hGet( ::aCampos[ ::oBrw:nArrayAt ], "valores" ) ) , ::setColPicture( hGet( ::aCampos[ ::oBrw:nArrayAt ], "picture" ) ) } }


   ::getArrayFamilias()
   ::getArrayTiposArticulos()
   ::setCampos()

   if ::Resource()
      ::addArticulo()
   end

Return ( ::cCodigoArticulo )



static FUNCTION fastAddArticulo_setCampos( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   if isArray( ::aCampos )

      aAdd( ::aCampos, { "clave" => "Código", "valor" => ::getCodigoArticulo(), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Nombre", "valor" => Space( 100 ), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Familia", "valor" => Space( 16 ), "picture" => "", "tipo" => "combo", "valores" => hGetValues( ::hFamilias ) } )
      aAdd( ::aCampos, { "clave" => "Tipo", "valor" => Space( 4 ), "picture" => "", "tipo" => "combo", "valores" => hGetValues( ::hTiposArticulos ) } )
      aAdd( ::aCampos, { "clave" => "Costo", "valor" => 0, "picture" => cPinDiv(), "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Número cajas (palets)", "valor" => 0, "picture" => MasUnd(), "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Fecha de compra", "valor" => GetSysDate(), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Barco", "valor" => Space( 50 ), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Marea", "valor" => Space( 15 ), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Lote", "valor" => Space( 50 ),  "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Observaciones Fto.", "valor" => Space( 50 ),  "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Unidad embalaje", "valor" => 0, "picture" => cPinDiv(), "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Tara", "valor" => 0, "picture" => cPinDiv(), "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Fecha entrada", "valor" => GetSysDate(), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Fecha final", "valor" => GetSysDate(), "picture" => "", "tipo" => "get", "valores" => {=>} } )
      aAdd( ::aCampos, { "clave" => "Fecha caducidad", "valor" => GetSysDate(), "picture" => "", "tipo" => "get", "valores" => {=>} } )

   end

Return ( self )



static FUNCTION fastAddArticulo_Resource( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   local oBmp
   local oTxt
   local oBtnAceptar

   ::oDlg = TDialog():New(,,,, "Añadir artículo", "EXTRADET",, .F.,,,,,, .F.,,,,,, .F.,, "::oDlg" )





   oBmp := TBitmap():ReDefine( 600, "Cube_Yellow_Alpha_48",, ::oDlg,,, .F., .F.,,, .F.,,, .T. )




      oTxt := TSay():ReDefine( 610, {||      "Añadiendo artículos"}, ::oDlg,,,, .F.,, .F., .F. )

      ::oBrw                        := IXBrowse():New( ::oDlg )

      ::oBrw:bClrSel                := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
      ::oBrw:bClrSelFocus           := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

      ::oBrw:SetArray( ::aCampos, , , .F. )

      ::oBrw:nMarqueeStyle          := 3
      ::oBrw:lRecordSelector        := .F.
      ::oBrw:lHScroll               := .F.
      ::oBrw:lFastEdit              := .T.

      ::oBrw:CreateFromResource( 100 )

      with object ( ::oBrw:AddCol() )
         :cHeader          := "Campo"
         :bStrData         := {|| AllTrim( hGet( ::aCampos[ ::oBrw:nArrayAt ], "clave" ) ) }
         :nWidth           := 250
      end

      with object ( ::oCol := ::oBrw:AddCol() )
         :cHeader          := "Valor"
         :bEditValue       := {|| hGet( ::aCampos[ ::oBrw:nArrayAt ], "valor" ) }
         :bStrData         := {|| hGet( ::aCampos[ ::oBrw:nArrayAt ], "valor" ) }
         :nWidth           := 300
      end

      ::oBrw:bChange       := {|| ::ChangeBrowse() }




   oBtnAceptar := TButton():ReDefine( 1, {||( if( ::lPreSave(), ::oDlg:End( 1 ), ) )}, ::oDlg,,, .F.,,,, .F. )





   TButton():ReDefine( 2, {||( ::oDlg:End( 2 ) )}, ::oDlg,,, .F.,,,, .T. )

      ::oDlg:AddFastKey( 116, {|| oBtnAceptar:Click() } )

      ::oDlg:bStart  := {|| ::startDialog }

   ::oDlg:Activate( ::oDlg:bLClicked, ::oDlg:bMoved, ::oDlg:bPainted, .T.,,,, ::oDlg:bRClicked,,, )

   oBmp:End()

Return ( ::oDlg:nResult == 1 )



static FUNCTION fastAddArticulo_ChangeBrowse( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   Eval( hGet( ::hFormatoColumnas, AllTrim( hGet( ::aCampos[ ::oBrw:nArrayAt ], "tipo" ) ) ) )

   ::oCol:bOnPostEdit            := {|o,x,n| hSet( ::aCampos[ ::oBrw:nArrayAt ], "valor", x ) }

Return ( nil )



static FUNCTION fastAddArticulo_lPresave( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

Return ( .T. )



static FUNCTION fastAddArticulo_startDialog( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   ::oBrw:GoDown()
   ::oBrw:GoToCol( ::oCol )

   ::oBrw:LDblClick( ::oBrw:nColSel, ::oBrw:nRowSel )

   ::ChangeBrowse()

Return ( self )



static FUNCTION fastAddArticulo_addArticulo( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   local nKey

   if !isArray( ::aCampos ) .OR. Empty( ::aCampos )
      Return nil
   end





   ( D():Articulos( ::nView ) )->( dbAppend() )

   ( D():Articulos( ::nView ) )->Codigo       := AllTrim( hGet( ::aCampos[ 1 ], "valor" ) )
   ( D():Articulos( ::nView ) )->Nombre       := AllTrim( hGet( ::aCampos[ 2 ], "valor" ) )
   ( D():Articulos( ::nView ) )->pCosto       := hGet( ::aCampos[ 5 ], "valor" )
   ( D():Articulos( ::nView ) )->LastChg      := GetSysDate()
   ( D():Articulos( ::nView ) )->Familia      := if( !Empty( hGet( ::aCampos[ 3 ], "valor" ) ), Padr( hGetKeyAt( ::hFamilias, HScan( ::hFamilias, {|k,v,i| v == hGet( ::aCampos[ 3 ], "valor" ) } ) ), 16 ), Space( 16 ) )
   ( D():Articulos( ::nView ) )->cCodTip      := if( !Empty( hGet( ::aCampos[ 4 ], "valor" ) ), Padr( hGetKeyAt( ::hTiposArticulos, HScan( ::hTiposArticulos, {|k,v,i| v == hGet( ::aCampos[ 4 ], "valor" ) } ) ), 4 ), Space( 4 ) )
   ( D():Articulos( ::nView ) )->nLabel       := 1
   ( D():Articulos( ::nView ) )->nCtlStock    := 1
   ( D():Articulos( ::nView ) )->lIvaInc      := uFieldEmpresa( "lIvaInc" )
   ( D():Articulos( ::nView ) )->TipoIva      := cDefIva()
   ( D():Articulos( ::nView ) )->nCajPlt      := hGet( ::aCampos[ 6 ], "valor" )
   ( D():Articulos( ::nView ) )->dFecLgt      := hGet( ::aCampos[ 7 ], "valor" )

   ( D():Articulos( ::nView ) )->( dbUnLock() )

   ::addCampoExtra( "004", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), AllTrim( hGet( ::aCampos[ 8 ], "valor" ) ) )
   ::addCampoExtra( "018", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), AllTrim( hGet( ::aCampos[ 9 ], "valor" ) ) )
   ::addCampoExtra( "010", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), AllTrim( hGet( ::aCampos[ 10 ], "valor" ) ) )
   ::addCampoExtra( "016", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), AllTrim( hGet( ::aCampos[ 11 ], "valor" ) ) )
   ::addCampoExtra( "022", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), AllTrim( Str( hGet( ::aCampos[ 12 ], "valor" ) ) ) )
   ::addCampoExtra( "023", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), AllTrim( Str( hGet( ::aCampos[ 13 ], "valor" ) ) ) )
   ::addCampoExtra( "019", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), dtoc( hGet( ::aCampos[ 14 ], "valor" ) ) )
   ::addCampoExtra( "038", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), dtoc( hGet( ::aCampos[ 15 ], "valor" ) ) )
   ::addCampoExtra( "039", AllTrim( hGet( ::aCampos[ 1 ], "valor" ) ), dtoc( hGet( ::aCampos[ 16 ], "valor" ) ) )

Return ( self )



static FUNCTION fastAddArticulo_addCampoExtra( Codigo, Clave, Valor ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   local nOrdAnt  := ( D():DetCamposExtras( ::nView ) )->( OrdSetFocus( "cTotClave" ) )





   if !( D():DetCamposExtras( ::nView ) )->( dbSeek( "20" + Codigo + Clave ) )

      ( D():DetCamposExtras( ::nView ) )->( dbAppend() )

      ( D():DetCamposExtras( ::nView ) )->cTipDoc     :=  "20"
      ( D():DetCamposExtras( ::nView ) )->cCodTipo    :=  Codigo
      ( D():DetCamposExtras( ::nView ) )->cClave      :=  Clave
      ( D():DetCamposExtras( ::nView ) )->cValor      :=  Valor

      ( D():DetCamposExtras( ::nView ) )->( dbUnLock() )

   else

      if dbLock( D():DetCamposExtras( ::nView ) )
         ( D():DetCamposExtras( ::nView ) )->cValor   :=  Valor
         ( D():DetCamposExtras( ::nView ) )->( dbUnLock() )
      end

   end

Return ( self )



static FUNCTION fastAddArticulo_getCodigoArticulo( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   local cCodArt        := ""
   local nOrdAnt        := ( D():Articulos( ::nView ) )->( OrdSetFocus( "Codigo" ) )

   ( D():Articulos( ::nView ) )->( dbSeek( "999999", .T. ) )

   ( D():Articulos( ::nView ) )->( dbSkip( -1 ) )

   cCodArt              := ( D():Articulos( ::nView ) )->Codigo
   cCodArt              := AllTrim( str( val( ( D():Articulos( ::nView ) )->Codigo ) + 1 ) )

   ( D():Articulos( ::nView ) )->( OrdSetFocus( nOrdAnt ) )

   ::cCodigoArticulo    := padr( cCodArt, 18 )

Return ( ::cCodigoArticulo )



static FUNCTION fastAddArticulo_getArrayFamilias( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   ::hFamilias       := {=>}

   ( D():Familias( ::nView ) )->( dbGoTop() )

   while !( D():Familias( ::nView ) )->( Eof() )

      hSet( ::hFamilias, ( D():Familias( ::nView ) )->cCodFam, ( D():Familias( ::nView ) )->cNomFam )

      ( D():Familias( ::nView ) )->( dbSkip() )

   end

Return ( nil )



static FUNCTION fastAddArticulo_getArrayTiposArticulos( ) ; local Self AS CLASS fastAddArticulo := QSelf() AS CLASS fastAddArticulo

   ::hTiposArticulos       := {=>}

   ( D():TipoArticulos( ::nView ) )->( dbGoTop() )

   while !( D():TipoArticulos( ::nView ) )->( Eof() )

      hSet( ::hTiposArticulos, ( D():TipoArticulos( ::nView ) )->cCodTip, ( D():TipoArticulos( ::nView ) )->cNomTip )

      ( D():TipoArticulos( ::nView ) )->( dbSkip() )

   end

Return ( nil )
