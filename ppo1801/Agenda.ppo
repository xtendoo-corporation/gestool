#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\Agenda.prg"
_HB_CLASS TAgenda ; function TAgenda ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TAgenda", iif( .T., { @TMant() }, { @HBObject() } ), @TAgenda() ) ) ;

   _HB_MEMBER { cMru } ; oClass:AddMultiData(, "gc_book_telephone_16", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cMru"}, .F. )
   _HB_MEMBER { cBitmap } ; oClass:AddMultiData(, ( 33 + ( 115 * 256 ) + ( 70 * 65536 ) ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBitmap"}, .F. )

   _HB_MEMBER Create( cPath, cDriver); oClass:AddMethod( "Create", @TAgenda_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TAgenda_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER OpenService(); oClass:AddMethod( "OpenService", @TAgenda_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TAgenda_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( nMode); oClass:AddMethod( "Resource", @TAgenda_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TAgenda ;



static FUNCTION TAgenda_Create( cPath, cDriver ) ; local Self AS CLASS TAgenda := QSelf() AS CLASS TAgenda

   If( cPath == nil, cPath := cPatDat(), ) ;
   If( cDriver == nil, cDriver := cDriver(), ) ;

   ::cPath           := cPath
   ::cDriver         := cDriver

   ::oDbf            := nil

RETURN ( Self )



static FUNCTION TAgenda_OpenFiles( lExclusive, cPath ) ; local Self AS CLASS TAgenda := QSelf() AS CLASS TAgenda

   local lOpen          := .T.
   local oError
   local oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   If( lExclusive == nil, lExclusive := .F., ) ;

   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !( lExclusive ), .F., .F. )

   RECOVER USING oError

      msgStop( ErrorMessage( oError ), "Imposible abrir todas las bases de datos" )

      ::CloseFiles()

      lOpen             := .F.

   end
   ErrorBlock( oBlock )

RETURN lOpen



static FUNCTION TAgenda_DefineFiles( cPath, cDriver ) ; local Self AS CLASS TAgenda := QSelf() AS CLASS TAgenda

   If( cPath == nil, cPath := ::cPath, ) ;
   If( cDriver == nil, cDriver := ::cDriver, ) ;

   ::oDbf := DbfServer( "Agenda.Dbf", "Agenda" ):New( "Agenda.Dbf", "Agenda", ( cDriver ), "Listín telefónico", ( cPath ) )

      ::oDbf:AddField( "cApellidos", "C", 200, 0,, "Nombre completo",,, "Nombre", .F., 200, .F., {} )
      ::oDbf:AddField( "cNif", "C", 15, 0,, "NIF",,, "Nif", .F., 80, .F., {} )
      ::oDbf:AddField( "cDomicilio", "C", 200, 0,, "Domicilio",,, "Domicilio", .F., 200, .F., {} )
      ::oDbf:AddField( "cCodpostal", "C", 5, 0,,,,, "Código postal", .F., 50, .F., {} )
      ::oDbf:AddField( "cPoblacion", "C", 100, 0,, "Población",,, "Población", .F., 100, .F., {} )
      ::oDbf:AddField( "cProvincia", "C", 60, 0,, "Provincia",,, "Provincia", .F., 60, .F., {} )
      ::oDbf:AddField( "cTel", "C", 12, 0,,,,, "Teléfono", .F., 60, .F., {} )
      ::oDbf:AddField( "cDesTel", "C", 20, 0,,,,, "Nombre teléfono", .F., 100, .F., {} )
      ::oDbf:AddField( "cMov", "C", 12, 0,,,,, "Móvil", .F., 60, .F., {} )
      ::oDbf:AddField( "cDesMov", "C", 20, 0,,,,, "Nombre móvil", .F., 100, .F., {} )
      ::oDbf:AddField( "cFax", "C", 12, 0,,,,, "Fax", .F., 60, .F., {} )
      ::oDbf:AddField( "cDesfax", "C", 20, 0,,,,, "Nombre fax", .F., 100, .F., {} )
      ::oDbf:AddField( "mObserva", "M", 10, 0,, "Observaciones",,, "Observaciones", .F.,, .T., {} )
      ::oDbf:AddField( "lSelect", "L", 1, 0,,,,, "", .F.,, .T., {} )
      ::oDbf:AddField( "uuid", "C", 40, 0,,,,, "uuid", .F.,, .T., {} )

      ::oDbf:AddIndex( "CAPELLIDOS", "Agenda.Cdx", "UPPER( CAPELLIDOS )",,, .F., .F., "Nombre",,, .T., .F. )
      ::oDbf:AddIndex( "CNIF", "Agenda.Cdx", "CNIF",,, .F., .F., "Nif",,, .T., .F. )
      ::oDbf:AddIndex( "CCODPOSTAL", "Agenda.Cdx", "CCODPOSTAL",,, .F., .F., "Código postal",,, .T., .F. )
      ::oDbf:AddIndex( "CPOBLACION", "Agenda.Cdx", "CPOBLACION",,, .F., .F., "Población",,, .T., .F. )
      ::oDbf:AddIndex( "CPROVINCIA", "Agenda.Cdx", "CPROVINCIA",,, .F., .F., "Provincia",,, .T., .F. )
      ::oDbf:AddIndex( "CTEL", "Agenda.Cdx", "CTEL",,, .F., .F., "Teléfono",,, .T., .F. )
      ::oDbf:AddIndex( "CMOV", "Agenda.Cdx", "CMOV",,, .F., .F., "Móvil",,, .T., .F. )
      ::oDbf:AddIndex( "CFAX", "Agenda.Cdx", "CFAX",,, .F., .F., "Fax",,, .T., .F. )



RETURN ( ::oDbf )



static FUNCTION TAgenda_Resource( nMode ) ; local Self AS CLASS TAgenda := QSelf() AS CLASS TAgenda

    local oDlg

   oDlg = TDialog():New(,,,, LblTitle( nMode ) + "Ficha", "AGENDA",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )





      TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oDbf:cNif, ::oDbf:cNif:= u ) }, oDlg,, "@!",,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oDbf:cApellidos, ::oDbf:cApellidos:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::oDbf:cDomicilio, ::oDbf:cDomicilio:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 140, { | u | If( PCount()==0, ::oDbf:cPoblacion, ::oDbf:cPoblacion:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oDbf:cProvincia, ::oDbf:cProvincia:= u ) }, oDlg,,,,,,,,, .F., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 160, { | u | If( PCount()==0, ::oDbf:cCodPostal, ::oDbf:cCodPostal:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 170, { | u | If( PCount()==0, ::oDbf:cTel, ::oDbf:cTel:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 171, { | u | If( PCount()==0, ::oDbf:cDesTel, ::oDbf:cDesTel:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 180, { | u | If( PCount()==0, ::oDbf:cMov, ::oDbf:cMov:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 181, { | u | If( PCount()==0, ::oDbf:cDesMov, ::oDbf:cDesMov:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 190, { | u | If( PCount()==0, ::oDbf:cFax, ::oDbf:cFax:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 191, { | u | If( PCount()==0, ::oDbf:cDesFax, ::oDbf:cDesFax:= u ) }, oDlg,,,,,,,,, .F., {||         ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )





      TMultiGet():ReDefine( 210, { | u | If( PCount()==0, ::oDbf:mObserva, ::oDbf:mObserva:= u ) }, oDlg,,,,,,, .F., {||         ( nMode <> 3 )}, .F.,, )





        TButton():ReDefine( 1, {||( oDlg:end( 1 ) )}, oDlg,,, .F., {||         ( nMode <> 3 )},,, .F. )





        TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .T. )

   if nMode <> 3
      oDlg:AddFastKey( 116, {|| oDlg:end( 1 ) } )
   end

    oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN ( oDlg:nResult == 1 )







_HB_CLASS AgendaModel ; function AgendaModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "AgendaModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @AgendaModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getDatosTableName( "Agenda" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER InsertFromHashSql( hHash); oClass:AddMethod( "InsertFromHashSql", @AgendaModel_InsertFromHashSql(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lExisteUuid( uuid); oClass:AddMethod( "lExisteUuid", @AgendaModel_lExisteUuid(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS AgendaModel ;



static FUNCTION AgendaModel_InsertFromHashSql( hHash ) ; local Self AS CLASS AgendaModel := QSelf() AS CLASS AgendaModel

   local cStm     := "InsertFromHashSql"
   local cSql     := ""

   if !Empty( hHash ) .AND. !::lExisteUuid( hGet( hHash, "uuid" ) )

      cSql         := "INSERT INTO " + ::getTableName()
      cSql         += " ( cApellidos, cNif, uuid ) VALUES "
      cSql         += " ( " + quoted( hGet( hHash, "nombre" ) )
      cSql         += ", " + quoted( hGet( hHash, "dni" ) )
      cSql         += ", " + quoted( hGet( hHash, "uuid" ) ) + " )"

      ::ExecuteSqlStatement( cSql, @cStm )

   end

Return ( nil )



static FUNCTION AgendaModel_lExisteUuid( uuid ) ; local Self AS CLASS AgendaModel := QSelf() AS CLASS AgendaModel

   local cStm     := "lExisteUuid"
   local cSql     := ""

   cSql     := "SELECT * FROM " + ::getTableName() + " WHERE uuid = " + quoted( uuid )

      if ::ExecuteSqlStatement( cSql, @cStm )

         if ( cStm )->( RecCount() ) > 0
            Return ( .T. )
         end

      end

Return ( .F. )
