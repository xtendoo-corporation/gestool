#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Models\AlbaranesClientesModel.prg"
_HB_CLASS AlbaranesClientesModel ; function AlbaranesClientesModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "AlbaranesClientesModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @AlbaranesClientesModel() ) ) ;

   _HB_MEMBER getHeaderTableName(); oClass:AddInline( "getHeaderTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "AlbCliT" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getField( cSerie, nNumero, cSufijo, cField); oClass:AddMethod( "getField", @AlbaranesClientesModel_getField(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Riesgo( idCliente); oClass:AddMethod( "Riesgo", @AlbaranesClientesModel_Riesgo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER UltimoDocumento( idCliente); oClass:AddMethod( "UltimoDocumento", @AlbaranesClientesModel_UltimoDocumento(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER UpdateFacturado( cNumAlb, nEstado); oClass:AddMethod( "UpdateFacturado", @AlbaranesClientesModel_UpdateFacturado(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ListNoFacturados( cCodCli, cCodObr); oClass:AddMethod( "ListNoFacturados", @AlbaranesClientesModel_ListNoFacturados(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ListFacturados(); oClass:AddMethod( "ListFacturados", @AlbaranesClientesModel_ListFacturados(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS AlbaranesClientesModel ;



static FUNCTION AlbaranesClientesModel_getField( cSerie, nNumero, cSufijo, cField ) ; local Self AS CLASS AlbaranesClientesModel := QSelf() AS CLASS AlbaranesClientesModel

   local cStm
   local cSql

   cSql              := "SELECT " + cField + " "
   cSql              +=    "FROM " + ::getHeaderTableName() + " "
   cSql              +=    "WHERE cSerAlb = " + quoted( cSerie ) + " AND nNumAlb = " + AllTrim( Str( nNumero ) ) + " AND cSufAlb = " + + quoted( cSufijo )

   if ::ExecuteSqlStatement( cSql, @cStm )
      RETURN ( ( cStm )->( fieldget( fieldpos( cField ) ) ) )
   end

RETURN ( nil )



static FUNCTION AlbaranesClientesModel_Riesgo( idCliente ) ; local Self AS CLASS AlbaranesClientesModel := QSelf() AS CLASS AlbaranesClientesModel

   local cStm


   local cSql  := "SELECT SUM( nTotAlb - nTotPag ) AS nRiesgo " +  "FROM " + ::getHeaderTableName() + " " +  "WHERE cCodCli = " + quoted( idCliente ) + " AND NOT lFacturado"

   if ::ExecuteSqlStatement( cSql, @cStm )
      Return( ( cStm )->nRiesgo )
   end

Return ( 0 )



static FUNCTION AlbaranesClientesModel_UltimoDocumento( idCliente ) ; local Self AS CLASS AlbaranesClientesModel := QSelf() AS CLASS AlbaranesClientesModel

   local cStm


   local cSql  := "SELECT TOP 1 dFecAlb " +  "FROM " + ::getHeaderTableName() + " " +  "WHERE cCodCli = " + quoted( idCliente ) + " ORDER BY dFecAlb DESC"

   if ::ExecuteSqlStatement( cSql, @cStm )
      Return ( ( cStm )->dFecAlb )
   end

Return ( ctod( "" ) )



static FUNCTION AlbaranesClientesModel_UpdateFacturado( cNumAlb, nEstado ) ; local Self AS CLASS AlbaranesClientesModel := QSelf() AS CLASS AlbaranesClientesModel

  local cStm  := "UpdateFacturado"
  local cSql  := ""

  cSql        := "UPDATE " + ::getHeaderTableName()
  cSql        += " SET nFacturado = " + Str( nEstado )
  cSql        += " WHERE cSerAlb = " + quoted( SubStr( cNumAlb, 1, 1 ) )
  cSql        += " AND nNumAlb = " + SubStr( cNumAlb, 2, 9 )
  cSql        += " AND cSufAlb = " + quoted( SubStr( cNumAlb, 11, 2 ) )

Return ( ::ExecuteSqlStatement( cSql, @cStm ) )



static FUNCTION AlbaranesClientesModel_ListNoFacturados( cCodCli, cCodObr ) ; local Self AS CLASS AlbaranesClientesModel := QSelf() AS CLASS AlbaranesClientesModel

  local cStm  := "ListNoFacturados"
  local cSql
  local aList := {}

  cSql        := "SELECT * "
  cSql        += "FROM " + ::getHeaderTableName() + " "
  cSql        += "WHERE nFacturado < 3"

  if !Empty( cCodCli )
    cSql      += " AND cCodCli = " + quoted( cCodCli )
  end

  if !Empty( cCodObr )
    cSql      += " AND cCodObr = " + quoted( cCodObr )
  end

  if ::ExecuteSqlStatement( cSql, @cStm )
    aList     := DBHScatter( cStm )
  end

Return ( aList )



static FUNCTION AlbaranesClientesModel_ListFacturados( ) ; local Self AS CLASS AlbaranesClientesModel := QSelf() AS CLASS AlbaranesClientesModel

  local cStm  := "ListNoFacturados"
  local cSql
  local aList := {}

  cSql        := "SELECT * "
  cSql        += "FROM " + ::getHeaderTableName() + " "
  cSql        += "WHERE nFacturado = 3"

  if ::ExecuteSqlStatement( cSql, @cStm )
    aList     := DBHScatter( cStm )
  end

Return ( aList )
