#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Validators\ArticulosValidator.prg"
_HB_CLASS ArticulosValidator ; function ArticulosValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ArticulosValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @ArticulosValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @ArticulosValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ArticulosValidator ;



static FUNCTION ArticulosValidator_getValidators( ) ; local Self AS CLASS ArticulosValidator := QSelf() AS CLASS ArticulosValidator




   ::hValidators  := {  "nombre" =>    {  "required"           => "El nombre es un dato requerido", "unique"             => "El nombre introducido ya existe" }, "codigo" =>    {  "required"           => "El código es un dato requerido" , "unique"             => "El código introducido ya existe" } }

RETURN ( ::hValidators )
