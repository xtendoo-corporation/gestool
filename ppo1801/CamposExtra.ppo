#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\CamposExtra.prg"
static oCamposExtra



_HB_CLASS TCamposExtra ; function TCamposExtra ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TCamposExtra", iif( .T., { @TMant() }, { @HBObject() } ), @TCamposExtra() ) ) ;

   _HB_MEMBER { cMru } ; oClass:AddMultiData(, "gc_form_plus2_16", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cMru"}, .F. )
   _HB_MEMBER { cBitmap } ; oClass:AddMultiData(, ( 33 + ( 115 * 256 ) + ( 70 * 65536 ) ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBitmap"}, .F. )

   _HB_MEMBER { oDlg } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDlg"}, .F. )

   _HB_MEMBER { lOpenFiles } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lOpenFiles"}, .F. )

   _HB_MEMBER { oCodigo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCodigo"}, .F. )
   _HB_MEMBER { oNombre } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oNombre"}, .F. )
   _HB_MEMBER { oTipo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTipo"}, .F. )
   _HB_MEMBER { cTipo } ; oClass:AddMultiData(, "Texto", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTipo"}, .F. )
   _HB_MEMBER { aTipo } ; oClass:AddMultiData(, { "Texto", "Número", "Fecha", "Si/No", "Lista" }, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aTipo"}, .F. )
   _HB_MEMBER { oLongitud } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oLongitud"}, .F. )
   _HB_MEMBER { oDecimales } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDecimales"}, .F. )
   _HB_MEMBER { hActions } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hActions"}, .F. )
   _HB_MEMBER { oValorDefecto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oValorDefecto"}, .F. )
   _HB_MEMBER { cValorDefecto } ; oClass:AddMultiData(, Space( 100 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cValorDefecto"}, .F. )
   _HB_MEMBER { oAddDefecto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAddDefecto"}, .F. )
   _HB_MEMBER { oDelDefecto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDelDefecto"}, .F. )

   _HB_MEMBER { oListaDefecto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oListaDefecto"}, .F. )
   _HB_MEMBER { cListaDefecto } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cListaDefecto"}, .F. )
   _HB_MEMBER { aValoresDefecto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aValoresDefecto"}, .F. )

   _HB_MEMBER { oTree } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTree"}, .F. )
   _HB_MEMBER { oTreeImageList } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTreeImageList"}, .F. )

   _HB_MEMBER { aDocumentos } ; oClass:AddMultiData(, {}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aDocumentos"}, .F. )

   _HB_MEMBER New( cPath, oWndParent, oMenuItem) AS CLASS TCamposExtra; oClass:AddMethod( "New", @TCamposExtra_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TCamposExtra_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @TCamposExtra_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles( lExclusive); oClass:AddMethod( "OpenFiles", @TCamposExtra_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TCamposExtra_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenService( lExclusive); oClass:AddMethod( "OpenService", @TCamposExtra_OpenService(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CloseService(); oClass:AddMethod( "CloseService", @TCamposExtra_CloseService(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Reindexa( oMeter); oClass:AddMethod( "Reindexa", @TCamposExtra_Reindexa(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( nMode); oClass:AddMethod( "Resource", @TCamposExtra_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ChangeTipo(); oClass:AddInline( "ChangeTipo", {|Self | ( ( Self ) ), ( if( hhaskey( ::hActions, ::cTipo ), Eval( hGet( ::hActions, ::cTipo ) ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER PreSave(); oClass:AddMethod( "PreSave", @TCamposExtra_PreSave(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER initCombo(); oClass:AddInline( "initCombo", {|Self | ( ( Self ) ), ( ::cTipo := ::aTipo[ Max( ::oDbf:nTipo, 1 ) ] ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER initDefecto(); oClass:AddInline( "initDefecto", {|Self | ( ( Self ) ), ( ::cValorDefecto := Space( 100 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER initValores(); oClass:AddInline( "initValores", {|Self | ( ( Self ) ), ( ::initCombo(), ::initDefecto(), ::GetValoresDefecto() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER enableLongitud(); oClass:AddInline( "enableLongitud", {|Self | ( ( Self ) ), ( ::oLongitud:Enable(), ::oDecimales:Enable() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER disableLongitud(); oClass:AddInline( "disableLongitud", {|Self | ( ( Self ) ), ( ::oLongitud:Disable(), ::oDecimales:Disable() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER cTextLongitud(); oClass:AddInline( "cTextLongitud", {|Self, nLon, nDec | ( ( Self ) ), ( ::oLongitud:cText( nLon ), ::oDecimales:cText( nDec ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )




   _HB_MEMBER enableDefecto(); oClass:AddInline( "enableDefecto", {|Self | ( ( Self ) ), ( ::oValorDefecto:Enable(), ::oAddDefecto:Enable(), ::oDelDefecto:Enable(), ::oListaDefecto:Enable() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )




   _HB_MEMBER disableDefecto(); oClass:AddInline( "disableDefecto", {|Self | ( ( Self ) ), ( ::oValorDefecto:Disable(), ::oAddDefecto:Disable(), ::oDelDefecto:Disable(), ::oListaDefecto:Disable() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SetValoresDefecto(); oClass:AddInline( "SetValoresDefecto", {|Self | ( ( Self ) ), ( ::oDbf:mDefecto   := hb_serialize( ::oListaDefecto:aItems ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER GetValoresDefecto(); oClass:AddInline( "GetValoresDefecto", {|Self | ( ( Self ) ), ( ::aValoresDefecto := hb_deserialize( ::oDbf:mDefecto ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setDocumentos(); oClass:AddInline( "setDocumentos", {|Self | ( ( Self ) ), ( ::oDbf:mDocumento := hb_serialize( ::aDocumentos ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getDocumentos(); oClass:AddInline( "getDocumentos", {|Self | ( ( Self ) ), ( ::aDocumentos     := hb_deserialize( ::oDbf:mDocumento ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER readDocumentos(); oClass:AddMethod( "readDocumentos", @TCamposExtra_readDocumentos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER initDocumentos(); oClass:AddInline( "initDocumentos", {|Self | ( ( Self ) ), ( ::aDocumentos     := {       "Artículos" => .F., "Clientes" => .F., "Proveedores" => .F., "Familias" => .F., "Agentes" => .F., "Presupuestos a clientes"=> .F., "Pedidos a clientes" => .F., "Albaranes a clientes" => .F., "Lineas de albaranes a clientes" => .F., "Facturas a clientes" => .F., "Lineas de facturas a clientes" => .F., "Facturas de anticipos a clientes" => .F., "Facturas rectificativa a clientes" => .F., "Pedidos a proveedores" => .F., "Lineas pedidos a proveedores" => .F., "Albaranes a proveedores" => .F., "Lineas albaranes a proveedores" => .F., "Facturas a proveedores" => .F., "Lineas facturas a proveedores" => .F., "Facturas rectificativa a proveedores" => .F., "S.A.T" => .F., "Envases de artículos" => .F., "Grupos de clientes" => .F., "Propiedades" => .F., "Lineas de propiedades" => .F. } ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER cargaValoresDocumentos( nMode); oClass:AddMethod( "cargaValoresDocumentos", @TCamposExtra_cargaValoresDocumentos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CreaTreeDocumentos(); oClass:AddMethod( "CreaTreeDocumentos", @TCamposExtra_CreaTreeDocumentos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CreaListaImagenes(); oClass:AddMethod( "CreaListaImagenes", @TCamposExtra_CreaListaImagenes(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER AddItemTree( k, v, i); oClass:AddMethod( "AddItemTree", @TCamposExtra_AddItemTree(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lValidResource( nMode); oClass:AddMethod( "lValidResource", @TCamposExtra_lValidResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER aCamposExtra( cTipoCampo); oClass:AddMethod( "aCamposExtra", @TCamposExtra_aCamposExtra(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCodigoCampoExtra( cNombreCampo); oClass:AddMethod( "getCodigoCampoExtra", @TCamposExtra_getCodigoCampoExtra(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Syncronize(); oClass:AddMethod( "Syncronize", @TCamposExtra_Syncronize(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Buscar( oGet, cField, oGetField, cType); oClass:AddMethod( "Buscar", @TCamposExtra_Buscar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TCamposExtra ;



static FUNCTION TCamposExtra_New( cPath, oWndParent, oMenuItem ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   If( cPath == nil, cPath := cPatEmp(), ) ;
   If( oWndParent == nil, oWndParent := oWnd(), ) ;
   If( oMenuItem == nil, oMenuItem := "campos_extra", ) ;

   ::cPath                 := cPath
   ::oWndParent            := oWndParent
   ::oMenuItem             := oMenuItem

   ::oDbf                  := nil





   ::hActions              := {  "Texto"  => {|| ::enableLongitud(), ::disableDefecto(), ::cTextLongitud( 1, 0 ) } , "Número" => {|| ::enableLongitud(), ::disableDefecto(), ::cTextLongitud( 1, 0 ) } , "Fecha"  => {|| ::disableLongitud(), ::cTextLongitud( 8, 0 ), ::disableDefecto() } , "Si/No"  => {|| ::disableLongitud(), ::cTextLongitud( 1, 0 ), ::disableDefecto() } , "Lista"  => {|| ::disableLongitud(), ::cTextLongitud( 10, 0 ), ::enableDefecto() } }

   ::aValoresDefecto       := { }

   ::bFirstKey             := {|| ::oDbf:cCodigo }
   ::bOnPreSave            := {|| ::PreSave() }

RETURN ( Self )



static FUNCTION TCamposExtra_DefineFiles( cPath, cDriver ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   If( cPath == nil, cPath := ::cPath, ) ;
   If( cDriver == nil, cDriver := cDriver(), ) ;

   ::oDbf := DbfServer( "CAMPOEXTRA.DBF", "CAMPOEXTRA" ):New( "CAMPOEXTRA.DBF", "CAMPOEXTRA", ( cDriver ), "Campos extra", ( cPath ) )

      ::oDbf:AddField( "cCodigo", "C", 3, 0, "@!",,,, "Código", .F., 100, .F., {} )
      ::oDbf:AddField( "cNombre", "C", 100, 0, "@!",,,, "Descripción", .F., 600, .F., {} )
      ::oDbf:AddField( "mDocumento", "M", 10, 0,,,,, "Documentos", .F.,, .T., {} )
      ::oDbf:AddField( "lRequerido", "L", 1, 0,,,,, "Campo obligatorio", .F.,, .T., {} )
      ::oDbf:AddField( "nTipo", "N", 1, 0,,,,, "Tipo de campo", .F.,, .T., {} )
      ::oDbf:AddField( "nLongitud", "N", 3, 0,,,,, "Longitud campo", .F.,, .T., {} )
      ::oDbf:AddField( "nDecimales", "N", 1, 0,,,,, "Decimales campo", .F.,, .T., {} )
      ::oDbf:AddField( "mDefecto", "M", 10, 0,,,,, "Valores por defecto", .F.,, .T., {} )
      ::oDbf:AddField( "uuid", "C", 40, 0,,,,, "Uuid", .F.,, .T., {} )

      ::oDbf:AddIndex( "cCodigo", "CAMPOEXTRA.Cdx", "cCodigo",,, .F., .F., "Código",,, .T., .F. )
      ::oDbf:AddIndex( "cNombre", "CAMPOEXTRA.Cdx", 'Upper( "cNombre" )',,, .F., .F., "Descripción",,, .T., .F. )



RETURN ( ::oDbf )



static FUNCTION TCamposExtra_Activate( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oSnd
   local oDel
   local oImp
   local oPrv
   local nLevel   := Auth():Level( ::oMenuItem )

   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      RETURN ( Self )
   end





   if ::oWndParent <> nil
      ::oWndParent:CloseAll()
   end

   ::CreateShell( nLevel )






   ::oWndBrw:NewAt( "BUS",,, {||( ::oWndBrw:SearchSetFocus() )}, "(B)uscar", "B",,,,, .F. )
      ::oWndBrw:AddSeaBar()








   ::oWndBrw:NewAt( "NEW",,, {||( ::oWndBrw:RecAdd() )}, "(A)ñadir", "A",,, 2,, .F. )






   ::oWndBrw:NewAt( "EDIT",,, {||( ::oWndBrw:RecEdit() )}, "(M)odificar", "M",,, 4,, .F. )






   oDel := ::oWndBrw:NewAt( "DEL",,, {||( ::oWndBrw:RecDel() )}, "(E)liminar", "E",,, 16,, .F. )

   ::oWndBrw:EndButtons( Self )

   if ::cHtmlHelp <> nil
      ::oWndBrw:cHtmlHelp  := ::cHtmlHelp
   end

   ::oWndBrw:Activate( nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, {|| ::CloseFiles() }, nil, nil )

RETURN ( Self )



static FUNCTION TCamposExtra_OpenFiles( lExclusive ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oError
   local oBlock

   If( lExclusive == nil, lExclusive := .F., ) ;

   oBlock                  := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      if !::lOpenFiles

         if Empty( ::oDbf )
            ::DefineFiles()
         end

         ::oDbf:Activate( .F., !( lExclusive ) )

         ::lOpenFiles      := .T.

      end

   RECOVER USING oError

      ::lOpenFiles         := .F.

      msgStop( "Imposible abrir todas las bases de datos" + Chr(13)+Chr(10) + ErrorMessage( oError ) )

   end

   ErrorBlock( oBlock )

   if !::lOpenFiles
      ::CloseFiles()
   end

RETURN ( ::lOpenFiles )



static FUNCTION TCamposExtra_CloseFiles( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   if ::oDbf <> nil .AND. ::oDbf:Used()
      ::oDbf:End()
   end

   ::oDbf         := nil

   ::lOpenFiles   := .F.

RETURN ( .T. )



static FUNCTION TCamposExtra_OpenService( lExclusive, cPath ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local lOpen          := .T.
   local oError
   local oBlock

   If( lExclusive == nil, lExclusive := .F., ) ;
   If( cPath == nil, cPath := ::cPath, ) ;

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::oDbf         := ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !( lExclusive ) )

   RECOVER USING oError

      lOpen             := .F.

      msgStop( ErrorMessage( oError ), "Imposible abrir todas las bases de datos" )

   end

   ErrorBlock( oBlock )

   ::CloseFiles()

RETURN ( lOpen )



static FUNCTION TCamposExtra_CloseService( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   if !Empty( ::oDbf ) .AND. ::oDbf:Used()
      ::oDbf:End()
   end

RETURN ( .T. )



static FUNCTION TCamposExtra_Reindexa( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   if Empty( ::oDbf )
      ::oDbf      := ::DefineFiles()
   end

   ::oDbf:IdxFDel()

   ::oDbf:Activate( .F., .T., .F. )

   ::oDbf:Pack()

   ::oDbf:End()

RETURN ( Self )



static FUNCTION TCamposExtra_Resource( nMode ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oBmp
   local oBtnAceptar
   local oBtnCancelar

   ::initValores()

   ::cargaValoresDocumentos( nMode )

   ::oDlg = TDialog():New(,,,, LblTitle( nMode ) + "campo extra", "EXTRA",, .F.,,,,,, .F.,,,,,, .F.,, "::oDlg", nil, )





   oBmp := TBitmap():ReDefine( 600, "gc_form_plus2_48",, ::oDlg,,, .F., .F.,,, .F.,,, .T. )




   ::oCodigo := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oDbf:cCodigo, ::oDbf:cCodigo:= u ) }, ::oDlg,,,,,,,,, .F., {||        ( nMode == 1 )},, .F., .F.,,,,,, nil,,, )

   ::oCodigo:bHelp  := {|| ::oCodigo:cText( NextKey( ::oDbf:cCodigo, ::oDbf:cAlias, "0", 3 ) ) }
   ::oCodigo:cBmp   := "BOT"




   ::oNombre := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oDbf:cNombre, ::oDbf:cNombre:= u ) }, ::oDlg,,,,,,,,, .F., {||        ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




   TCheckBox():ReDefine( 120, { | u | If( PCount()==0, ::oDbf:lRequerido, ::oDbf:lRequerido:= u ) }, ::oDlg,,,,,,, .F., {||        ( nMode <> 3 )}, .F. )





   ::oTipo := TComboBox():ReDefine( 130, { | u | If( PCount()==0, ::cTipo, ::cTipo:= u ) }, ::aTipo, ::oDlg,,,,,,, .F.,,,,,,, "::oTipo",,,,,,, )

      ::oTipo:bChange   := {|| ::ChangeTipo() }








   ::oLongitud := TGetHlp():ReDefine( 140, { | u | If( PCount()==0, ::oDbf:nLongitud, ::oDbf:nLongitud:= u ) }, ::oDlg,, "999", {||       ( ::oDbf:nLongitud >= 1 .AND. ::oDbf:nLongitud <= 200 )},,,,,, .F.,,, .F., .T.,,, {||         1}, {||         200},, nil,,, )








   ::oDecimales := TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oDbf:nDecimales, ::oDbf:nDecimales:= u ) }, ::oDlg,, "9", {||       ( ::oDbf:nDecimales >= 0 .AND. ::oDbf:nDecimales <= 6 )},,,,,, .F.,,, .F., .T.,,, {||         0}, {||         6},, nil,,, )



   ::oValorDefecto := TGetHlp():ReDefine( 160, { | u | If( PCount()==0, ::cValorDefecto, ::cValorDefecto:= u ) }, ::oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )




   ::oAddDefecto := TButton():ReDefine( 170, {||( if( !Empty( ::cValorDefecto ), ::oListaDefecto:Add( ::cValorDefecto ), ) )}, ::oDlg,,, .F.,,,, .F. )




   ::oDelDefecto := TButton():ReDefine( 180, {||( ::oListaDefecto:Del() )}, ::oDlg,,, .F.,,,, .F. )





   ::oListaDefecto := TListBox():ReDefine( 190, { | u | If( PCount()==0, ::cListaDefecto, ::cListaDefecto:= u ) }, ::aValoresDefecto,, ::oDlg,,,,,,,,, .F.,, )

   ::oTree        := TTreeView():Redefine( 200, ::oDlg )




   oBtnAceptar := TButton():ReDefine( 1, {||( if( ::lValidResource( nMode ), ::oDlg:End( 1 ), ) )}, ::oDlg,,, .F.,,,, .F. )





   oBtnCancelar := TButton():ReDefine( 2, {||( ::oDlg:End( 2 ) )}, ::oDlg,,, .F.,,,, .T. )

      ::oDlg:AddFastKey( 116, {|| oBtnAceptar:Click() } )

      ::oDlg:bStart  := {|| ::CreaTreeDocumentos() }

   ::oDlg:Activate( ::oDlg:bLClicked, ::oDlg:bMoved, ::oDlg:bPainted, .T.,,,, ::oDlg:bRClicked,,, )

   oBmp:End()

RETURN ( ::oDlg:nResult == 1 )



static FUNCTION TCamposExtra_cargaValoresDocumentos( nMode ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   if nMode == 1 .OR. Empty( ::oDbf:mDocumento )
      ::initDocumentos()
      ::oDbf:Uuid    := win_uuidcreatestring()
   else
      ::getDocumentos()
   end

RETURN ( self )



static FUNCTION TCamposExtra_CreaTreeDocumentos( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oItem

   ::CreaListaImagenes()

   hEval( ::aDocumentos, {| k, v, i | ::AddItemTree( k, v, i ) } )

RETURN ( self )



static FUNCTION TCamposExtra_CreaListaImagenes( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   ::oTreeImageList  := TImageList():New( 16, 16 )

   hEval( ::aDocumentos, {| k, v, i | ::oTreeImageList:AddMasked( TBitmap():Define( hGet( {       "Artículos" => "gc_object_cube_16", "Clientes" => "gc_user_16", "Proveedores" => "gc_businessman_16", "Familias" => "gc_cubes_16", "Agentes" => "gc_businessman2_16", "Presupuestos a clientes" => "gc_notebook_user_16", "Pedidos a clientes" => "gc_clipboard_empty_user_16", "Albaranes a clientes" => "gc_document_empty_16", "Lineas de albaranes a clientes" => "gc_document_empty_16", "Facturas a clientes" => "gc_document_text_user_16", "Lineas de facturas a clientes" => "gc_document_text_user_16", "Facturas de anticipos a clientes" => "gc_document_text_money2_16", "Facturas rectificativa a clientes" => "gc_document_text_delete_16", "Pedidos a proveedores" => "gc_clipboard_empty_businessman_16", "Lineas pedidos a proveedores" => "gc_clipboard_empty_businessman_16", "Albaranes a proveedores" => "gc_document_empty_businessman_16", "Lineas albaranes a proveedores" => "gc_document_empty_businessman_16", "Facturas a proveedores" => "gc_document_text_businessman_16", "Lineas facturas a proveedores" => "gc_document_text_businessman_16", "Facturas rectificativa a proveedores" => "gc_document_text_delete2_16", "S.A.T" => "gc_power_drill_sat_user_16", "Envases de artículos" => "gc_box_closed_16", "Grupos de clientes" => "gc_users3_16" , "Propiedades" => "gc_coathanger_16" , "Lineas de propiedades" => "gc_coathanger_16" }, k ) ), ( 255 + ( 0 * 256 ) + ( 255 * 65536 ) ) ) } )

   ::oTree:SetImageList( ::oTreeImageList )

RETURN ( Self )



static FUNCTION TCamposExtra_AddItemTree( k, v, i ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oItem  :=  ::oTree:Add( k, i - 1 )

   ::oTree:SetCheck( oItem, v )

RETURN ( Self )



static FUNCTION TCamposExtra_readDocumentos( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oItem

   for each oItem in ::oTree:aItems
      if hhaskey( ::aDocumentos, oItem:cPrompt )
         hset( ::aDocumentos, oItem:cPrompt, ::oTree:GetCheck( oItem ) )
      end
   next

RETURN ( Self )



static FUNCTION TCamposExtra_lValidResource( nMode ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oItem

   if Empty( ::oDbf:cCodigo )
      MsgStop( "Código del campo extra no puede estar vacío." )
      ::oCodigo:SetFocus()
      RETURN .F.
   end

   if Empty( ::oDbf:cNombre )
      MsgStop( "Nombre del campo extra no puede estar vacío." )
      ::oNombre:SetFocus()
      RETURN .F.
   end

   ::readDocumentos()

RETURN .T.



static FUNCTION TCamposExtra_PreSave( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   ::oDbf:nTipo  := ::oTipo:nAt

   ::setValoresDefecto()

   ::setDocumentos()

RETURN ( self )



static FUNCTION TCamposExtra_aCamposExtra( cTipoCampo ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local nLen
   local nDec
   local cValor
   local aCampos
   local aCamposExtra   := {}
   local cDbf


   cDbf  := CamposExtraModel():getExtraFields()

   while !( cDbf )->( Eof() )

      aCampos           := hb_deserialize( ( cDbf )->mDocumento )

      if !empty( aCampos )

         if hhaskey( aCampos, cTipoCampo ) .AND. hGet( aCampos, cTipoCampo )

            do case
               case ( cDbf )->nTipo == 2
                  cValor   := 0
               case ( cDbf )->nTipo == 3
                  cValor   := cTod( "" )
               otherwise
                  cValor   := Space( 100 )
            end










            aAdd( aCamposExtra, {   "código"       => ( cDbf )->cCodigo, "descripción"  => ( cDbf )->cNombre, "tipo"         => ( cDbf )->nTipo, "longitud"     => ( cDbf )->nLongitud, "decimales"    => ( cDbf )->nDecimales, "lrequerido"   => ( cDbf )->lRequerido, "valores"      => hb_deserialize( ( cDbf )->mDefecto ), "valor"        => cValor, "clave"        => space( 30 ), "claveinterna" => "" } )

         end

      end

      ( cDbf )->( dbSkip() )

   end













































RETURN ( aCamposExtra )



static FUNCTION TCamposExtra_getCodigoCampoExtra( cNombreCampo ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local cCodigo  := ""

   ::oDbf:getStatus()
   ::oDbf:ordsetfocus( "cNombre" )

   if ::oDbf:seek( cNombreCampo )
      cCodigo     := ::oDbf:cCodigo
   end

   ::oDbf:setStatus()

RETURN ( cCodigo )



static FUNCTION TCamposExtra_Syncronize( ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oDetCamposExtra

   if ::OpenFiles()

      while !( ::oDbf:Eof() )

         if empty( ::oDbf:Uuid )
            ::oDbf:fieldputByName( "uuid", win_uuidcreatestring() )
         end

         ::oDbf:Skip()

      end

      ::CloseService()

   end

   oDetCamposExtra            := TDetCamposExtra():New()

   if oDetCamposExtra:OpenFiles()

      while !( oDetCamposExtra:oDbf:Eof() )

         if empty( oDetCamposExtra:oDbf:Uuid )
            oDetCamposExtra:oDbf:fieldputByName( "uuid", win_uuidcreatestring() )
         end

         oDetCamposExtra:oDbf:Skip()

      end

      oDetCamposExtra:CloseService()

   end

RETURN .T.



static FUNCTION TCamposExtra_Buscar( oGet, cType ) ; local Self AS CLASS TCamposExtra := QSelf() AS CLASS TCamposExtra

   local oDlg
   local nOrd
   local oBrw
   local cDlgName
   local cCbxIndex
   local oCbxIndex
   local aCbxIndex
   local aCbxFields
   local oGetSearch
   local cGetSearch
   local aExtraField
   local oBtnAdd
   local oBtnEdit

   If( cType == nil, cType := "", ) ;





   cGetSearch     := Space( 100 )

   cDlgName       := "Buscando campo extra"
   aCbxIndex      := { "Código", "Nombre" }
   aCbxFields     := { "cCodigo", "cNombre" }

   nOrd           := 2
   cCbxIndex      := "Nombre"

   aExtraField    := CamposExtraModel():getExtraFieldForType( cType )
   aSort( aExtraField, , , {|x,y| hGet( x, "cNombre" ) < hGet( y, "cNombre" ) } )





   oDlg                       := TDialog():New( , , , , cDlgName, "HELPENTRY" )

   oGetSearch                 := TGet():ReDefine( 104, { | u | if( PCount() == 0, cGetSearch, cGetSearch := u ) }, oDlg, , "@!", , , , , , , .F., {|| .F. }, , .F., .F. )

   oCbxIndex                  := TComboBox():ReDefine( 102, { | u | if( PCount() == 0, cCbxIndex, cCbxIndex := u ) }, aCbxIndex, oDlg, , , , , , , .F. )
   oCbxIndex:bChange          := {|| aSort( oBrw:aArrayData, , , {|x,y| hGet( x, aCbxFields[ oCbxIndex:nAt ] ) < hGet( y, aCbxFields[ oCbxIndex:nAt ] ) } ), oBrw:Refresh() }

   oBrw                       := IXBrowse():New( oDlg )

   oBrw:bClrSel               := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
   oBrw:bClrSelFocus          := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

   oBrw:SetArray( aExtraField, , , .F. )

   oBrw:nMarqueeStyle         := 5
   oBrw:lRecordSelector       := .F.
   oBrw:lHScroll              := .F.
   oBrw:lAutoSort             := .T.

   oBrw:CreateFromResource( 105 )

   oBrw:bLDblClick            := {|| oDlg:end( 1 ) }
   oBrw:bRClicked             := {| nRow, nCol, nFlags | oBrw:RButtonDown( nRow, nCol, nFlags ) }

   with object ( oBrw:AddCol() )
      :cHeader                := "Código"
      :bStrData               := {|| if( hGet( aExtraField[ oBrw:nArrayAt ], "cCodigo" ) <> nil, hGet( aExtraField[ oBrw:nArrayAt ], "cCodigo" ), "" ) }
      :nWidth                 := 100
      :bLClickHeader          := {| nMRow, nMCol, nFlags, oCol | oCbxIndex:Set( oCol:cHeader ), aSort( oBrw:aArrayData, , , {|x,y| hGet( x, "cCodigo" ) < hGet( y, "cCodigo" ) } ), oBrw:Refresh() }
   end

   with object ( oBrw:AddCol() )
      :cHeader                := "Nombre"
      :bStrData               := {|| if( hGet( aExtraField[ oBrw:nArrayAt ], "cNombre" ) <> nil, hGet( aExtraField[ oBrw:nArrayAt ], "cNombre" ), "" ) }
      :nWidth                 := 600
      :bLClickHeader          := {| nMRow, nMCol, nFlags, oCol | oCbxIndex:Set( oCol:cHeader ), aSort( oBrw:aArrayData, , , {|x,y| hGet( x, "cNombre" ) < hGet( y, "cNombre" ) } ), oBrw:Refresh() }
   end





   oBtnAdd                    := TButton():ReDefine( 500, , oDlg, , , .F. )
   oBtnEdit                   := TButton():ReDefine( 501, , oDlg, , , .F. )

   TButton():ReDefine( 1, {|| oDlg:end( 1 ) }, oDlg, , , .F. )

   TButton():ReDefine( 2, {|| oDlg:end() }, oDlg, , , .F. )

   oDlg:bStart                := {|| oBtnAdd:Hide(), oBtnEdit:Hide() }

   oDlg:AddFastKey( 116,    {|| oDlg:end( 1 ) } )
   oDlg:AddFastKey( 13,{|| oDlg:end( 1 ) } )

   oDlg:Activate( , , , .T. )





   if oDlg:nResult == 1

      if !Empty( oGet ) .AND. IsObject( oGet )

         oGet:cText( hGet( aExtraField[ oBrw:nArrayAt ], "cCodigo" ) )
         oGet:lValid()
         oGet:SetFocus()
      end

   end

RETURN ( nil )











FUNCTION CamposExtra( oMenuItem, oWnd )

   If( oMenuItem == nil, oMenuItem := "campos_extra", ) ;
   If( oWnd == nil, oWnd := oWnd(), ) ;

   if Empty( oCamposExtra )





      if oWnd <> nil
         SysRefresh(); oWnd:CloseAll(); SysRefresh()
      end





      AddMnuNext( "Campos extra", ProcName() )

      oCamposExtra        := TCamposExtra():New( cPatEmp(), oWnd )

      if !Empty( oCamposExtra )
         oCamposExtra:Play()
      end

      oCamposExtra         := nil

   end

RETURN NIL



Function getExtraField( cFieldName, oDetCamposExtra, Id )

   local cExtraField    := ""
   local cTipoDocumento := ""
   local cCodigoCampo   := ""

   cTipoDocumento       := hGet( {       "Artículos" => "20", "Clientes" => "21", "Proveedores" => "22", "Familias" => "37", "Agentes" => "38", "Presupuestos a clientes" => "08", "Pedidos a clientes" => "09", "Albaranes a clientes" => "10", "Lineas de albaranes a clientes" => "35", "Facturas a clientes" => "11", "Lineas de facturas a clientes" => "36", "Facturas de anticipos a clientes" => "13", "Facturas rectificativa a clientes" => "14", "Pedidos a proveedores" => "01", "Lineas pedidos a proveedores" => "41", "Albaranes a proveedores" => "02", "Lineas albaranes a proveedores" => "37", "Facturas a proveedores" => "03", "Lineas facturas a proveedores" => "38", "Facturas rectificativa a proveedores" => "04", "S.A.T" => "32", "Envases de artículos" => "33" , "Grupos de clientes" => "34" , "Propiedades" => "39" , "Lineas de propiedades" => "40" }, oDetCamposExtra:TipoDocumento )
   cCodigoCampo         := oDetCamposExtra:oCamposExtra:getCodigoCampoExtra( cFieldName )

   if empty(cTipoDocumento) .OR. empty(cCodigoCampo) .OR. empty(Id)
      RETURN ( cExtraField )
   end

   oDetCamposExtra:oDbf:getStatus()
   oDetCamposExtra:oDbf:ordsetfocus( "cTotClave" )

   oDetCamposExtra:oDbf:Seek( cTipoDocumento + cCodigoCampo + Id )

   cExtraField          := oDetCamposExtra:oDbf:cValor

   oDetCamposExtra:oDbf:setStatus()

RETURN ( cExtraField )



Function getCustomExtraField( cFieldName, cDocumentType, Id )

   local cExtraField          := ""
   local cTipoDocumento       := ""
   local oDetCamposExtra

   if Empty( Id )
      RETURN cExtraField
   end

   oDetCamposExtra            := TDetCamposExtra():New()
   oDetCamposExtra:OpenFiles()

   cTipoDocumento             := hGet( {       "Artículos" => "20", "Clientes" => "21", "Proveedores" => "22", "Familias" => "37", "Agentes" => "38", "Presupuestos a clientes" => "08", "Pedidos a clientes" => "09", "Albaranes a clientes" => "10", "Lineas de albaranes a clientes" => "35", "Facturas a clientes" => "11", "Lineas de facturas a clientes" => "36", "Facturas de anticipos a clientes" => "13", "Facturas rectificativa a clientes" => "14", "Pedidos a proveedores" => "01", "Lineas pedidos a proveedores" => "41", "Albaranes a proveedores" => "02", "Lineas albaranes a proveedores" => "37", "Facturas a proveedores" => "03", "Lineas facturas a proveedores" => "38", "Facturas rectificativa a proveedores" => "04", "S.A.T" => "32", "Envases de artículos" => "33" , "Grupos de clientes" => "34" , "Propiedades" => "39" , "Lineas de propiedades" => "40" }, cDocumentType )

   oDetCamposExtra:oCamposExtra:oDbf:ordsetfocus( "cCodigo" )
   oDetCamposExtra:oDbf:ordsetfocus( "cTotClave" )

   if oDetCamposExtra:oDbf:Seek( cTipoDocumento + cFieldName + Id )

      if oDetCamposExtra:oCamposExtra:oDbf:Seek( cFieldName )

         do case
            case oDetCamposExtra:oCamposExtra:oDbf:nTipo == 2
               cExtraField    := val( oDetCamposExtra:oDbf:cValor )

            case oDetCamposExtra:oCamposExtra:oDbf:nTipo == 3
               cExtraField    := ctod( oDetCamposExtra:oDbf:cValor )

            otherwise
               cExtraField    := oDetCamposExtra:oDbf:cValor

         end

      end

   end

   oDetCamposExtra:CloseFiles()
   oDetCamposExtra:End()

RETURN ( cExtraField )



_HB_CLASS CamposExtraModel ; function CamposExtraModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @CamposExtraModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "CampoExtra" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUuid( cCodigoTipo); oClass:AddMethod( "getUuid", @CamposExtraModel_getUuid(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getExtraFieldForType( cType); oClass:AddMethod( "getExtraFieldForType", @CamposExtraModel_getExtraFieldForType(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getExtraFields(); oClass:AddMethod( "getExtraFields", @CamposExtraModel_getExtraFields(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraModel ;



static FUNCTION CamposExtraModel_getUuid( cCodigoTipo ) ; local Self AS CLASS CamposExtraModel := QSelf() AS CLASS CamposExtraModel

   local cStm


   local cSql  := "SELECT Uuid "                                  +  "FROM " + ::getTableName() + " "             +  "WHERE cCodigo = " + quoted( cCodigoTipo )

   if ::ExecuteSqlStatement( cSql, @cStm )
      RETURN ( ( cStm )->Uuid )
   end

RETURN ( "" )



static FUNCTION CamposExtraModel_getExtraFieldForType( cType ) ; local Self AS CLASS CamposExtraModel := QSelf() AS CLASS CamposExtraModel

   local cStm           := "getExtraFieldForType"
   local cSql           := ""
   local aExtraField    := {}

   If( cType == nil, cType := "", ) ;

   cSql                 := "SELECT cCodigo, cNombre, mDocumento FROM " + ::getTableName()

   if ::ExecuteSqlStatement( cSql, @cStm )

      ( cStm )->( dbGoTop() )

      while !( cStm )->( Eof() )

         if Empty( cType ) .OR. ( hGet( hb_deserialize( ( cStm )->mDocumento ), cType ) )

            aAdd( aExtraField, { "cCodigo" => ( cStm )->cCodigo, "cNombre" => ( cStm )->cNombre } )

         end

         ( cStm )->( dbskip() )

      end

   end

RETURN ( aExtraField )



static FUNCTION CamposExtraModel_getExtraFields( ) ; local Self AS CLASS CamposExtraModel := QSelf() AS CLASS CamposExtraModel

   local cStm           := "getExtraFields"
   local cSql           := ""

   cSql                 := "SELECT * FROM " + ::getTableName()

   if ::ExecuteSqlStatement( cSql, @cStm )

      ( cStm )->( dbGoTop() )
      RETURN ( cStm )

   end

RETURN ( nil )
