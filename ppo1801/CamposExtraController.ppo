#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\CamposExtraController.prg"
_HB_CLASS CamposExtraController ; function CamposExtraController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @CamposExtraController() ) ) ;

   _HB_MEMBER { oCamposExtraEntidadesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraEntidadesController"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @CamposExtraController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @CamposExtraController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER deleteEntitiesWhereEmpty(); oClass:AddMethod( "deleteEntitiesWhereEmpty", @CamposExtraController_deleteEntitiesWhereEmpty(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraController ;



static FUNCTION CamposExtraController_New( ) ; local Self AS CLASS CamposExtraController := QSelf() AS CLASS CamposExtraController

   ::Super:New()

   ::cTitle                            := "Campos extra"

   ::setName( "campos_extra" )

   ::lTransactional                    := .T.

   ::nLevel                            := Auth():Level( ::getName() )



   ::hImage                            := {  "16" => "gc_form_plus2_16", "32" => "gc_form_plus2_32", "48" => "gc_form_plus2_48" }

   ::oModel                            := SQLCamposExtraModel():New( self )

   ::oBrowseView                       := CamposExtraBrowseView():New( self )

   ::oDialogView                       := CamposExtraView():New( self )

   ::oValidator                        := CamposExtraValidator():New( self, ::oDialogView )

   ::oCamposExtraEntidadesController   := CamposExtraEntidadesController():New( self )

   ::oFilterController:setTableToFilter( ::oModel:cTableName )

   ::setEvent( "edited",      {|| ::deleteEntitiesWhereEmpty() } )
   ::setEvent( "appended",    {|| ::deleteEntitiesWhereEmpty() } )
   ::setEvent( "duplicated",  {|| ::deleteEntitiesWhereEmpty() } )

RETURN ( Self )



static FUNCTION CamposExtraController_End( ) ; local Self AS CLASS CamposExtraController := QSelf() AS CLASS CamposExtraController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oCamposExtraEntidadesController:End()

   ::Super:End()

RETURN ( Self )



static FUNCTION CamposExtraController_deleteEntitiesWhereEmpty( ) ; local Self AS CLASS CamposExtraController := QSelf() AS CLASS CamposExtraController

   ::oCamposExtraEntidadesController:oModel:deleteBlankEntityWhereUuid( ::getUuid() )

RETURN ( Self )










_HB_CLASS CamposExtraBrowseView ; function CamposExtraBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @CamposExtraBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @CamposExtraBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraBrowseView ;



static FUNCTION CamposExtraBrowseView_addColumns( ) ; local Self AS CLASS CamposExtraBrowseView := QSelf() AS CLASS CamposExtraBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 200
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

      with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "codigo"
      :cHeader             := "Código"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "codigo" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "nombre"
      :cHeader             := "Nombre"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "nombre" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "tipo"
      :cHeader             := "Tipo"
      :nWidth              := 100
      :bEditValue          := {|| ::getRowSet():fieldGet( "tipo" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "longitud"
      :cHeader             := "Longitud"
      :nWidth              := 60
      :nHeadStrAlign       := 1
      :nDataStrAlign       := 1
      :bEditValue          := {|| ::getRowSet():fieldGet( "longitud" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "decimales"
      :cHeader             := "Decimales"
      :nWidth              := 60
      :nHeadStrAlign       := 1
      :nDataStrAlign       := 1
      :bEditValue          := {|| ::getRowSet():fieldGet( "decimales" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

RETURN ( self )









_HB_CLASS CamposExtraView ; function CamposExtraView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @CamposExtraView() ) ) ;

   _HB_MEMBER { oFolder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFolder"}, .F. )

   _HB_MEMBER { oLongitud } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oLongitud"}, .F. )

   _HB_MEMBER { oDecimales } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDecimales"}, .F. )

   _HB_MEMBER { oDecimales } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDecimales"}, .F. )

   _HB_MEMBER { oTipo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTipo"}, .F. )

   _HB_MEMBER { aTipos } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aTipos"}, .F. )

   _HB_MEMBER { hBehavior } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hBehavior"}, .F. )

   _HB_MEMBER { hOnChange } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hOnChange"}, .F. )

   _HB_MEMBER { oLista } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oLista"}, .F. )

   _HB_MEMBER { cLista } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cLista"}, .F. )

   _HB_MEMBER { oAddListaValores } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAddListaValores"}, .F. )

   _HB_MEMBER { oDelListaValores } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDelListaValores"}, .F. )

   _HB_MEMBER { oListaValores } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oListaValores"}, .F. )

   _HB_MEMBER { cListaValores } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cListaValores"}, .F. )

   _HB_MEMBER { aListaValores } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aListaValores"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @CamposExtraView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER enableLongitud(); oClass:AddInline( "enableLongitud", {|Self | ( ( Self ) ), ( ::verticalShow( ::oLongitud ), ::verticalShow( ::oDecimales ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER disableLongitud(); oClass:AddInline( "disableLongitud", {|Self | ( ( Self ) ), ( ::verticalHide( ::oLongitud ), ::verticalHide( ::oDecimales ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setLongitud(); oClass:AddInline( "setLongitud", {|Self, nLen, nDec | ( ( Self ) ), ( ::oLongitud:cText( nLen ), ::oDecimales:cText( nDec ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER enableDefecto(); oClass:AddInline( "enableDefecto", {|Self | ( ( Self ) ), ( ::verticalShow( ::oLista ), ::verticalShow( ::oListaValores ), ::oAddListaValores:Show(), ::oDelListaValores:Show() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER disableDefecto(); oClass:AddInline( "disableDefecto", {|Self | ( ( Self ) ), ( ::verticalHide( ::oLista ), ::verticalHide( ::oListaValores ), ::oAddListaValores:Hide(), ::oDelListaValores:Hide() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER changeBehavior(); oClass:AddInline( "changeBehavior", {|Self, cTipo | ( ( Self ) ), ( iif( hhaskey( ::hBehavior, cTipo ), eval( hGet( ::hBehavior, cTipo ) ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER changeTipo(); oClass:AddInline( "changeTipo", {|Self, cTipo | ( ( Self ) ), ( iif( hhaskey( ::hOnChange, cTipo ), eval( hGet( ::hOnChange, cTipo ) ), ), ::changeBehavior( cTipo ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER addListaValores(); oClass:AddMethod( "addListaValores", @CamposExtraView_addListaValores(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @CamposExtraView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Activating(); oClass:AddMethod( "Activating", @CamposExtraView_Activating(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraView ;



static FUNCTION CamposExtraView_New( oController ) ; local Self AS CLASS CamposExtraView := QSelf() AS CLASS CamposExtraView

   ::Super:New( oController )

   ::aTipos          := {  "Texto", "Número", "Fecha", "Lógico", "Lista" }





   ::hBehavior       := {  "Texto"  => {|| ::verticalShow( ::oLongitud ), ::verticalHide( ::oDecimales ), ::disableDefecto() }, "Número" => {|| ::enableLongitud(), ::disableDefecto() }, "Fecha"  => {|| ::disableLongitud(), ::disableDefecto() }, "Lógico" => {|| ::disableLongitud(), ::disableDefecto() }, "Lista"  => {|| ::disableLongitud(), ::enableDefecto() } }





   ::hOnChange       := {  "Texto"  => {|| ::setLongitud( 100, 0 ) }, "Número" => {|| ::setLongitud( 16, 6 ) }, "Fecha"  => {|| ::setLongitud( 8, 0 ) }, "Lógico" => {|| ::setLongitud( 1, 0 ) }, "Lista"  => {|| ::setLongitud( 10, 0 ) } }

   ::cLista          := space( 200 )

   ::aListaValores   := {}

RETURN ( self )



static FUNCTION CamposExtraView_Activating( ) ; local Self AS CLASS CamposExtraView := QSelf() AS CLASS CamposExtraView

   if ::oController:isAppendOrDuplicateMode()
      ::oController:oModel:hBuffer[ "tipo" ]    := "Texto"
   end

RETURN ( self )



static FUNCTION CamposExtraView_Activate( ) ; local Self AS CLASS CamposExtraView := QSelf() AS CLASS CamposExtraView

   local oBtnAppend
   local oBtnDelete



   ::oDialog = TDialog():New(,,,, ::LblTitle() + "campo extra", "CAMPOS_EXTRA",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )





   ::oBitmap := TBitmap():ReDefine( 8, ::oController:getImage( "48" ),, ::oDialog,,, .F., .F.,,, .F.,,, .T. )




   ::oMessage := TSay():ReDefine( 9,, ::oDialog,,,, .F., getBoldFont(), .F., .F., )







   ::oFolder := TFolder():ReDefine( 100, {"&General" , "&Entidades"}, { "CAMPOS_EXTRA_PRINCIPAL","CAMPOS_EXTRA_ENTIDADES" }, ::oDialog,,,,, .F., )






   TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo" ], ::oController:oModel:hBuffer[ "codigo" ]:= u ) }, ::oFolder:aDialogs[ 1 ],, "@! NNNNNNNNNNNNNNNNNNNN", {||       ( ::oController:validate( "codigo" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre" ], ::oController:oModel:hBuffer[ "nombre" ]:= u ) }, ::oFolder:aDialogs[ 1 ],,, {||       ( ::oController:validate( "nombre" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )






   ::oTipo := TComboBox():ReDefine( 120, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "tipo" ], ::oController:oModel:hBuffer[ "tipo" ]:= u ) }, ( ::aTipos ), ::oFolder:aDialogs[ 1 ],,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},,,,,, "::oTipo",,,,,,, )

   ::oTipo:bChange   := {|| ::ChangeTipo( ::oController:oModel:hBuffer[ "tipo" ] ) }





   TSayCheck():ReDefine( 130, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "requerido" ], ::oController:oModel:hBuffer[ "requerido" ]:= u ) }, ::oFolder:aDialogs[ 1 ],,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, 132 )











   ::oLongitud := TGetHlp():ReDefine( 140, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "longitud" ], ::oController:oModel:hBuffer[ "longitud" ]:= u ) }, ::oFolder:aDialogs[ 1 ],, "999", {||       ( ::oController:oModel:hBuffer[ "longitud" ] >= 1 .AND. ::oController:oModel:hBuffer[ "longitud" ] <= 200 )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         1}, {||         200},, nil,, 131, )











   ::oDecimales := TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "decimales" ], ::oController:oModel:hBuffer[ "decimales" ]:= u ) }, ::oFolder:aDialogs[ 1 ],, "9", {||       ( ::oController:oModel:hBuffer[ "decimales" ] >= 0 .AND. ::oController:oModel:hBuffer[ "decimales" ] <= 9 )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         0}, {||         9},, nil,, 141, )






   ::oLista := TGetHlp():ReDefine( 160, { | u | If( PCount()==0, ::cLista, ::cLista:= u ) }, ::oFolder:aDialogs[ 1 ],,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,, 151, )




   ::oAddListaValores := TButton():ReDefine( 170, {||( ::addListaValores() )}, ::oFolder:aDialogs[ 1 ],,, .F.,,,, .F. )




   ::oDelListaValores := TButton():ReDefine( 180, {||( ::oListaValores:Del() )}, ::oFolder:aDialogs[ 1 ],,, .F.,,,, .F. )





   ::oListaValores := TListBox():ReDefine( 190, { | u | If( PCount()==0, ::cListaValores, ::cListaValores:= u ) }, ::oController:oModel:hBuffer[ "lista" ],, ::oFolder:aDialogs[ 1 ],,,,,,,,, .F.,, )

   ::oListaValores:lVisible := .T.







   oBtnAppend := TButton():ReDefine( 100,, ::oFolder:aDialogs[ 2 ],,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )
   oBtnAppend:bAction   := {|| ::oController:oCamposExtraEntidadesController:Append() }





   oBtnDelete := TButton():ReDefine( 110,, ::oFolder:aDialogs[ 2 ],,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )
   oBtnDelete:bAction   := {|| ::oController:oCamposExtraEntidadesController:Delete( ::oController:oCamposExtraEntidadesController:oBrowseView:oBrowse:aSelected ) }

   ::oController:oCamposExtraEntidadesController:Activate( 120, ::oFolder:aDialogs[ 2 ] )







   TButton():ReDefine( 1, {||( if( validateDialog( ::oFolder:aDialogs[ 1 ] ), ::oDialog:end( 1 ), ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

   ::oDialog:bStart  := {|| ::changeBehavior( alltrim( ::oController:oModel:hBuffer[ "tipo" ] ) ) }

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 116, {|| if( validateDialog( ::oFolder:aDialogs[ 1 ] ), ::oDialog:end( 1 ), ) } )
   end

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

   ::oBitmap:end()

RETURN ( ::oDialog:nResult )



static FUNCTION CamposExtraView_addListaValores( ) ; local Self AS CLASS CamposExtraView := QSelf() AS CLASS CamposExtraView

   if empty( ::cLista )
      RETURN ( .F. )
   end

   ::oListaValores:Add( alltrim( ::cLista ) )

   ::oLista:cText( space( 100 ) )
   ::oLista:setFocus()

RETURN ( .T. )








_HB_CLASS CamposExtraValidator ; function CamposExtraValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @CamposExtraValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @CamposExtraValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraValidator ;



static FUNCTION CamposExtraValidator_getValidators( ) ; local Self AS CLASS CamposExtraValidator := QSelf() AS CLASS CamposExtraValidator






   ::hValidators  := {     "codigo" =>    {  "required"           => "El codigo es un dato requerido", "unique"             => "El codigo introducido ya existe"  } , "nombre" =>    {  "required"           => "El nombre es un dato requerido", "unique"             => "El nombre introducido ya existe" } , "tipo"     =>  {  "required"           => "El tipo es un dato requerido" } , "longitud" =>  {  "required"           => "La longitud es un dato requerido" } }

RETURN ( ::hValidators )










_HB_CLASS SQLCamposExtraModel ; function SQLCamposExtraModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLCamposExtraModel", iif( .T., { @SQLCompanyModel() }, { @HBObject() } ), @SQLCamposExtraModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "campos_extra", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLCamposExtraModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getListaAttribute(); oClass:AddInline( "getListaAttribute", {|Self, value | ( ( Self ) ), ( if( empty( value ), {}, hb_deserialize( value ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setListaAttribute(); oClass:AddInline( "setListaAttribute", {|Self, value | ( ( Self ) ), ( hb_serialize( value ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLCamposExtraModel ;



static FUNCTION SQLCamposExtraModel_getColumns( ) ; local Self AS CLASS SQLCamposExtraModel := QSelf() AS CLASS SQLCamposExtraModel


   hset( ::hColumns, "id",                {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",              {  "create"    => "VARCHAR( 40 ) NOT NULL UNIQUE"           , "default"   => {|| win_uuidcreatestring() } }            )

   ::getEmpresaColumns()


   hset( ::hColumns, "codigo",            {  "create"    => "VARCHAR( 20 )"                            , "default"   => {|| space( 20 ) } }                        )


   hset( ::hColumns, "nombre",            {  "create"    => "VARCHAR( 200 )"                          , "default"   => {|| space( 200 ) } }                      )


   hset( ::hColumns, "requerido",         {  "create"    => "BIT"                                     , "default"   => {|| .F. } }                               )


   hset( ::hColumns, "tipo",              {  "create"    => "VARCHAR( 10 )"                           , "default"   => {|| space( 10 ) } }                       )


   hset( ::hColumns, "longitud",          {  "create"    => "SMALLINT UNSIGNED"                       , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "decimales",         {  "create"    => "SMALLINT UNSIGNED"                       , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "lista",             {  "create"    => "TEXT"                                    , "default"   => {|| space( 200 ) } }                      )

   ::getTimeStampColumns()

RETURN ( ::hColumns )











_HB_CLASS CamposExtraRepository ; function CamposExtraRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @CamposExtraRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLCamposExtraModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraRepository ;