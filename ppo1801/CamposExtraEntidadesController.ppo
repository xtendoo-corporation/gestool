#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\CamposExtraEntidadesController.prg"
_HB_CLASS CamposExtraEntidadesController ; function CamposExtraEntidadesController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraEntidadesController", iif( .T., { @SQLBrowseController() }, { @HBObject() } ), @CamposExtraEntidadesController() ) ) ;


















































   _HB_MEMBER { aEntidades } ; oClass:AddMultiClsData(, {  "articulos" =>                            { "nombre" => "Artículos",  "icono" => "gc_object_cube_16"                                     } , "articulos_temporada" =>                  { "nombre" => "Temporadas", "icono" => "gc_cloud_sun_16"                                       } , "articulos_categorias" =>                 { "nombre" => "Categorias", "icono" => "gc_photographic_filters_16"                            } , "articulos_propiedades" =>                { "nombre" => "Propiedades", "icono" => "gc_coathanger_16"                                     } , "articulos_familias" =>                   { "nombre" => "Familias",  "icono" => "gc_cubes_16"                                            } , "articulos_tipos" =>                      { "nombre" => "Tipos de artículos", "icono" => "gc_objects_16"                                 } , "articulos_tarifas" =>                    { "nombre" => "Tarifas", "icono" => "gc_money_interest_16"                                     } , "clientes" =>                             { "nombre" => "Clientes",  "icono" => "gc_user_16"                                             } , "clientes_grupos" =>                      { "nombre" => "Grupo de clientes",  "icono" => "gc_users3_16"                                  } , "proveedores" =>                          { "nombre" => "Proveedores",  "icono" => "gc_businessman_16"                                   } , "agentes" =>                              { "nombre" => "Agentes",  "icono" => "gc_businessman2_16"                                      } , "transportistas" =>                       { "nombre" => "Transportistas",  "icono" => "gc_small_truck_16"                                } , "presupuestos_clientes" =>                { "nombre" => "Presupuestos a clientes",  "icono" => "gc_notebook_user_16"                     } , "pedidos_clientes" =>                     { "nombre" => "Pedidos a clientes",  "icono" => "gc_clipboard_empty_user_16"                   } , "albaranes_clientes" =>                   { "nombre" => "Albaranes a clientes",  "icono" => "gc_document_empty_16"                       } , "lineas_albaranes_clientes" =>            { "nombre" => "Líneas de albaranes a clientes",  "icono" => "gc_document_empty_16"             } , "facturas_clientes" =>                    { "nombre" => "Facturas a clientes",  "icono" => "gc_document_text_user_16"                    } , "lineas_facturas_clientes" =>             { "nombre" => "Líneas de facturas a clientes",  "icono" => "gc_document_text_user_16"          } , "facturas_anticipos_clientes" =>          { "nombre" => "Facturas de anticipos a clientes",  "icono" => "gc_document_text_money2_16"     } , "rectificativa_clientes" =>               { "nombre" => "Facturas rectificativa a clientes",  "icono" => "gc_document_text_delete_16"    } , "pedidos_proveedores" =>                  { "nombre" => "Pedidos a proveedores",  "icono" => "gc_clipboard_empty_businessman_16"         } , "lineas_pedidos_proveedores" =>           { "nombre" => "Líneas pedidos a proveedores",  "icono" => "gc_clipboard_empty_businessman_16"  } , "albaranes_proveedores" =>                { "nombre" => "Albaranes a proveedores",  "icono" => "gc_clipboard_empty_businessman_16"       } , "forma_pago" =>                           { "nombre" => "Forma de pago",  "icono" => "gc_credit_cards_16"                                } , "lineas_albaranes_proveedores" =>         { "nombre" => "Líneas albaranes a proveedores",  "icono" => "gc_clipboard_empty_businessman_16"} , "facturas_proveedores" =>                 { "nombre" => "Facturas a proveedores",  "icono" => "gc_document_text_businessman_16"          } , "lineas_facturas_proveedores" =>          { "nombre" => "Líneas facturas a proveedores",  "icono" => "gc_document_text_businessman_16"   } , "facturas_rectificativa_proveedores"=>    { "nombre" => "Facturas rectificativa a proveedores", "icono" => "gc_document_text_delete2_16" } , "sat" =>                                  { "nombre" => "S.A.T",  "icono" => "gc_power_drill_sat_user_16"                                } , "envases_articulos" =>                    { "nombre" => "Envases de artículos",  "icono" => "gc_box_closed_16"                           } , "grupos_clientes" =>                      { "nombre" => "Grupos de clientes",  "icono" => "gc_users3_16"                                 } , "movimientos_almacen" =>                  { "nombre" => "Movimientos de almacén",  "icono" => "gc_pencil_package_16"                     } , "movimientos_almacen_lineas" =>           { "nombre" => "Movimientos de almacén lineas", "icono" => "gc_pencil_package_16"               } , "articulos_fabricantes" =>                { "nombre" => "Fabricantes", "icono" => "gc_pencil_package_16"                                 } , "articulos_familias_comentarios" =>       { "nombre" => "Comentarios", "icono" => "gc_message_16"                                        } , "almacenes" =>                            { "nombre" => "Almacenes", "icono" => "gc_warehouse_16"                                        } , "empresas" =>                             { "nombre" => "Empresas", "icono" => "gc_factory_16"                                           } , "entidades" =>                            { "nombre" => "Entidades", "icono" => "gc_office_building2_16"                                 } , "cuentas_remesa" =>                       { "nombre" => "Cuentas de remesa", "icono" => "gc_notebook2_16"                                } , "cuentas_bancarias" =>                    { "nombre" => "Cuentas bancarias", "icono" => "gc_central_bank_euro_16"                        } , "iva_tipos" =>                            { "nombre" => "Tipos de IVA", "icono" => "gc_moneybag_16"                                      } , "impuestos_especiales" =>                 { "nombre" => "Impuestos especiales", "icono" => "gc_moneybag_euro_16"                         } , "orden_comandas" =>                       { "nombre" => "Orden de comandas", "icono" => "gc_sort_az_descending_16"                       } , "divisas_monetarias" =>                   { "nombre" => "Divisas monetarias", "icono" => "gc_currency_euro_16"                           } , "cajas" =>                                { "nombre" => "Cajas", "icono" => "gc_cash_register_16"                                        } , "unidades_medicion" =>                    { "nombre" => "Unidades de medición", "icono" => "gc_tape_measure2_16"                         } , "unidades_medicion_grupos" =>             { "nombre" => "Grupos de unidades de medición", "icono" => "gc_tape_measure2_16"               } , "rutas" =>                                { "nombre" => "Rutas", "icono" => "gc_map_route_16"                                            } , "entradas_salidas" =>                     { "nombre" => "Entradas y salidas de caja", "icono" => "gc_cash_register_refresh_16"           } , "lineas_propiedades" =>                   { "nombre" => "Líneas de propiedades",  "icono" => "gc_coathanger_16"                          } }, nScope + iif( .F., 16, 0 ) + iif( .T., 32, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aEntidades"}, .F. )

   _HB_MEMBER New( oController); oClass:AddMethod( "New", @CamposExtraEntidadesController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @CamposExtraEntidadesController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombresEntidades(); oClass:AddMethod( "getNombresEntidades", @CamposExtraEntidadesController_getNombresEntidades(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombreWhereEntidad( cEntidad); oClass:AddMethod( "getNombreWhereEntidad", @CamposExtraEntidadesController_getNombreWhereEntidad(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getEntidadWhereNombre( cNombre); oClass:AddMethod( "getEntidadWhereNombre", @CamposExtraEntidadesController_getEntidadWhereNombre(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER UpdateLine( cCampo, uValue); oClass:AddMethod( "UpdateLine", @CamposExtraEntidadesController_UpdateLine(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER assertAppend(); oClass:AddMethod( "assertAppend", @CamposExtraEntidadesController_assertAppend(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER gettingSelectSentence(); oClass:AddMethod( "gettingSelectSentence", @CamposExtraEntidadesController_gettingSelectSentence(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraEntidadesController ;



static FUNCTION CamposExtraEntidadesController_New( oController ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   ::Super:New( oController )

   ::cTitle                   := "Campos extra entidades"

   ::setName( "campos_extra_entidades" )

   ::nLevel                   := Auth():Level( ::getName() )



   ::hImage                   := {  "16" => "gc_user_message_16", "32" => "gc_user_message_32", "48" => "gc_user_message_48" }

   ::oModel                   := SQLCamposExtraEntidadesModel():New( self )

   ::oModel:setEvent( "gettingSelectSentence",  {|| ::gettingSelectSentence() } )

   ::oRepository              := CamposExtraEntidadesRepository():New( self )

   ::oBrowseView              := CamposExtraEntidadesBrowseView():New( self )

   ::oDialogView              := CamposExtraEntidadesView():New( self )

   ::oValidator               := CamposExtraEntidadesValidator():New( self, ::oDialogView )

   ::setEvent( "appending",            {|| ::assertAppend() } )
   ::setEvent( "appended",             {|| ::oBrowseView:Refresh() } )
   ::setEvent( "deletedSelection",     {|| ::oBrowseView:Refresh() } )

RETURN ( Self )



static FUNCTION CamposExtraEntidadesController_End( ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oRepository:End()

   ::Super:End()

RETURN ( Self )



static FUNCTION CamposExtraEntidadesController_gettingSelectSentence( ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   local uuid        := ::getSenderController():getUuid()

   if !empty( uuid )
      ::oModel:setGeneralWhere( "parent_uuid = " + quoted( uuid ) )
   end

RETURN ( Self )



static FUNCTION CamposExtraEntidadesController_getNombreWhereEntidad( cEntidad ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   local cNombre     := ""

   heval( ::aEntidades, {|k,v| iif( k == alltrim( cEntidad ), cNombre := hget( v, "nombre" ), ) } )

RETURN ( cNombre )



static FUNCTION CamposExtraEntidadesController_getNombresEntidades( ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   local aNombres    := {}

   heval( ::aEntidades, {|k,v| aadd( aNombres, hget( v, "nombre" ) ) } )

RETURN ( aNombres )



static FUNCTION CamposExtraEntidadesController_getEntidadWhereNombre( cNombre ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   local cEntidad    := ""

   heval( ::aEntidades, {|k,v| iif( hget( v, "nombre" ) == cNombre, cEntidad := k, ) } )

RETURN ( cEntidad )



static FUNCTION CamposExtraEntidadesController_assertAppend( ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   if empty( ::oSenderController )
      RETURN ( .T. )
   end

RETURN ( ::oRepository:isNotBlankEntityWhereUuid( ::getSenderController():getUuid() ) )



static FUNCTION CamposExtraEntidadesController_UpdateLine( uValue ) ; local Self AS CLASS CamposExtraEntidadesController := QSelf() AS CLASS CamposExtraEntidadesController

   local cEntidad    := ::getEntidadWhereNombre( uValue )

   if empty( cEntidad )
      RETURN ( nil )
   end

   if ::oRepository:isEntityWhereUuid( ::oSenderController:getUuid(), cEntidad )
      msgalert( "El nombre de la entidad ya existe" )
      RETURN ( nil )
   end

   ::oModel:updateFieldWhereId( ::oRowSet:fieldGet( "id" ), "entidad", cEntidad )

   ::oRowSet:Refresh()

   ::oBrowseView:Refresh()

RETURN ( nil )









_HB_CLASS CamposExtraEntidadesBrowseView ; function CamposExtraEntidadesBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraEntidadesBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @CamposExtraEntidadesBrowseView() ) ) ;

   _HB_MEMBER { lFooter } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lFooter"}, .F. )

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @CamposExtraEntidadesBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraEntidadesBrowseView ;



static FUNCTION CamposExtraEntidadesBrowseView_addColumns( ) ; local Self AS CLASS CamposExtraEntidadesBrowseView := QSelf() AS CLASS CamposExtraEntidadesBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 200
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "parent_uuid"
      :cHeader             := "Campo Extra"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "parent_uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "entidad"
      :cHeader             := "Entidad"
      :nWidth              := 320
      :bEditValue          := {|| ::oController:getNombreWhereEntidad( ::getRowSet():fieldGet( "entidad" ) )  }
      :nEditType           := 2
      :cEditPicture        := ""
      :aEditListTxt        := ::oController:getNombresEntidades()
      :bOnPostEdit         := {| oCol, uValue, nKey | ::oController:UpdateLine( uValue ) }
   end

RETURN ( self )









_HB_CLASS CamposExtraEntidadesView ; function CamposExtraEntidadesView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraEntidadesView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @CamposExtraEntidadesView() ) ) ;

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @CamposExtraEntidadesView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraEntidadesView ;



static FUNCTION CamposExtraEntidadesView_Activate( ) ; local Self AS CLASS CamposExtraEntidadesView := QSelf() AS CLASS CamposExtraEntidadesView

RETURN ( .T. )









_HB_CLASS CamposExtraEntidadesValidator ; function CamposExtraEntidadesValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraEntidadesValidator", iif( .T., { @SQLBaseValidator() }, { @HBObject() } ), @CamposExtraEntidadesValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @CamposExtraEntidadesValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraEntidadesValidator ;



static FUNCTION CamposExtraEntidadesValidator_getValidators( ) ; local Self AS CLASS CamposExtraEntidadesValidator := QSelf() AS CLASS CamposExtraEntidadesValidator




   ::hValidators  := {     "nombre" =>          {  "required"     => "El  campo extra es un dato requerido", "unique"       => "El nombre introducido ya existe" } , "tipo"     =>        {  "required"     => "El tipo es un dato requerido"} , "longitud" =>        {  "required"     => "La longitud es un dato requerido"} }

RETURN ( ::hValidators )










_HB_CLASS SQLCamposExtraEntidadesModel ; function SQLCamposExtraEntidadesModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLCamposExtraEntidadesModel", iif( .T., { @SQLBaseModel() }, { @HBObject() } ), @SQLCamposExtraEntidadesModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "campos_extra_entidad", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLCamposExtraEntidadesModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getParentUuidAttribute( value); oClass:AddMethod( "getParentUuidAttribute", @SQLCamposExtraEntidadesModel_getParentUuidAttribute(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER deleteBlankEntityWhereUuid( parentUuid); oClass:AddMethod( "deleteBlankEntityWhereUuid", @SQLCamposExtraEntidadesModel_deleteBlankEntityWhereUuid(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLCamposExtraEntidadesModel ;



static FUNCTION SQLCamposExtraEntidadesModel_getColumns( ) ; local Self AS CLASS SQLCamposExtraEntidadesModel := QSelf() AS CLASS SQLCamposExtraEntidadesModel


   hset( ::hColumns, "id",                {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",              {  "create"    => "VARCHAR( 40 ) NOT NULL UNIQUE"           , "default"   => {|| win_uuidcreatestring() } }            )


   hset( ::hColumns, "parent_uuid",       {  "create"    => "VARCHAR( 40 ) NOT NULL"                  , "default"   => {|| space( 40 ) } }                       )


   hset( ::hColumns, "entidad",           {  "create"    => "VARCHAR ( 40 )"                          , "default"   => {|| space( 40 ) } }                       )

RETURN ( ::hColumns )



static FUNCTION SQLCamposExtraEntidadesModel_getParentUuidAttribute( value ) ; local Self AS CLASS SQLCamposExtraEntidadesModel := QSelf() AS CLASS SQLCamposExtraEntidadesModel

   if empty( ::oController )
      RETURN ( value )
   end

   if empty( ::oController:oSenderController )
      RETURN ( value )
   end

RETURN ( ::oController:oSenderController:getUuid() )



static FUNCTION SQLCamposExtraEntidadesModel_deleteBlankEntityWhereUuid( parentUuid ) ; local Self AS CLASS SQLCamposExtraEntidadesModel := QSelf() AS CLASS SQLCamposExtraEntidadesModel

   local cSQL  := "DELETE FROM " + ::getTableName() + " "
   cSQL        +=    "WHERE parent_uuid = " + quoted( parentUuid ) + " "
   cSQL        +=    "AND entidad = ''"

RETURN ( getSQLDataBase():Exec( cSQL ) )









_HB_CLASS CamposExtraEntidadesRepository ; function CamposExtraEntidadesRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CamposExtraEntidadesRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @CamposExtraEntidadesRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLCamposExtraEntidadesModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER isEntityWhereUuid( parentUuid, cEntidad); oClass:AddMethod( "isEntityWhereUuid", @CamposExtraEntidadesRepository_isEntityWhereUuid(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER isBlankEntityWhereUuid(); oClass:AddInline( "isBlankEntityWhereUuid", {|Self, parentUuid | ( ( Self ) ), ( ::isEntityWhereUuid( parentUuid, "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER isNotBlankEntityWhereUuid(); oClass:AddInline( "isNotBlankEntityWhereUuid", {|Self, parentUuid | ( ( Self ) ), ( !::isBlankEntityWhereUuid(  parentUuid ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CamposExtraEntidadesRepository ;



static FUNCTION CamposExtraEntidadesRepository_isEntityWhereUuid( parentUuid, cEntidad ) ; local Self AS CLASS CamposExtraEntidadesRepository := QSelf() AS CLASS CamposExtraEntidadesRepository

   local cSQL

   cSQL              := "SELECT Count(*) FROM " + ::getTableName() + " "
   cSQL              +=    "WHERE parent_uuid = " + quoted( parentUuid ) + " "
   cSQL              +=    "AND entidad = " + quoted( cEntidad )

RETURN ( getSQLDataBase():getValue( cSQL ) > 0 )
