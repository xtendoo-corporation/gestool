#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\CaracteristicasValoresArticulosController.prg"
_HB_CLASS CaracteristicasValoresArticulosController ; function CaracteristicasValoresArticulosController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CaracteristicasValoresArticulosController", iif( .T., { @SQLBrowseController() }, { @HBObject() } ), @CaracteristicasValoresArticulosController() ) ) ;

   _HB_MEMBER { uuidArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"uuidArticulo"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @CaracteristicasValoresArticulosController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @CaracteristicasValoresArticulosController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate( uuidArticulo); oClass:AddMethod( "Activate", @CaracteristicasValoresArticulosController_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CaracteristicasValoresArticulosController ;



static FUNCTION CaracteristicasValoresArticulosController_New( oController ) ; local Self AS CLASS CaracteristicasValoresArticulosController := QSelf() AS CLASS CaracteristicasValoresArticulosController

   ::Super:New( oController )

   ::cTitle                      := "Características valores artículos"

   ::cName                       := "caracteristicas_valores_articulos"

   ::oModel                      := SQLCaracteristicasValoresArticulosModel():New( self )

   ::oDialogView                 := CaracteristicasValoresArticulosView():New( self )

RETURN ( Self )



static FUNCTION CaracteristicasValoresArticulosController_End( ) ; local Self AS CLASS CaracteristicasValoresArticulosController := QSelf() AS CLASS CaracteristicasValoresArticulosController

   ::oModel:End()

   ::oDialogView:End()

   ::Super:End()

RETURN ( Self )



static FUNCTION CaracteristicasValoresArticulosController_Activate( uuidArticulo ) ; local Self AS CLASS CaracteristicasValoresArticulosController := QSelf() AS CLASS CaracteristicasValoresArticulosController

   ::uuidArticulo             := uuidArticulo

   ::oModel:getSQLInsertCaracteristicaWhereArticulo()

   ::oRowSet:build( ::oModel:getSentenceRowSetValores() )

   ::oDialogView:Resource()

RETURN ( .T. )







_HB_CLASS CaracteristicasValoresArticulosView ; function CaracteristicasValoresArticulosView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CaracteristicasValoresArticulosView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @CaracteristicasValoresArticulosView() ) ) ;

   _HB_MEMBER { oCol } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCol"}, .F. )
   _HB_MEMBER { oBrowse } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBrowse"}, .F. )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @CaracteristicasValoresArticulosView_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ChangeBrowse(); oClass:AddMethod( "ChangeBrowse", @CaracteristicasValoresArticulosView_ChangeBrowse(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ChangeColValue( uNewValue); oClass:AddMethod( "ChangeColValue", @CaracteristicasValoresArticulosView_ChangeColValue(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ChangeColSeleccionado( uNewValue); oClass:AddMethod( "ChangeColSeleccionado", @CaracteristicasValoresArticulosView_ChangeColSeleccionado(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CaracteristicasValoresArticulosView ;



static FUNCTION CaracteristicasValoresArticulosView_Resource( ) ; local Self AS CLASS CaracteristicasValoresArticulosView := QSelf() AS CLASS CaracteristicasValoresArticulosView



   ::oDialog = TDialog():New(,,,, "Valores de caracterísicas", "CARACTERISTICAS_VAL_ART",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )





   ::oBitmap := TBitmap():ReDefine( 900, "gc_tags_48",, ::oDialog,,, .F., .F.,,, .F.,,, .T. )





   ::oMessage := TSay():ReDefine( 800, {||      "Características del artículo"}, ::oDialog,,,, .F., getBoldFont(), .F., .F., )

   ::oBrowse                  := SQLXBrowse():New( ::oController, ::oDialog )
   ::oBrowse:l2007            := .F.

   ::oBrowse:lRecordSelector  := .T.
   ::oBrowse:lAutoSort        := .T.
   ::oBrowse:lSortDescend     := .F.

   ::oBrowse:lFooter          := .F.
   ::oBrowse:lFastEdit        := .F.
   ::oBrowse:lMultiSelect     := .F.

   ::oBrowse:nMarqueeStyle    := 4

   ::oBrowse:bClrStd          := {|| { 0, 16777215 } }
   ::oBrowse:bClrSel          := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
   ::oBrowse:bClrSelFocus     := {|| { 0, ( 221 + ( 221 * 256 ) + ( 221 * 65536 ) ) } }

   ::oBrowse:setRowSet( ::oController:oRowSet )

   ::oBrowse:setName( "Valores características artículos" )

   ::oBrowse:bChange       := {|| ::ChangeBrowse() }

   ::oBrowse:CreateFromResource( 100 )

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Caracteristica"
      :nWidth              := 245
      :bEditValue          := {|| ::oController:oRowSet:fieldGet( "nombre_caracteristica" ) }
   end

   with object ( ::oCol    := ::oBrowse:AddCol() )
      :cHeader             := "Valores"
      :nWidth              := 245
      :bEditValue          := {|| if( ::oController:oRowSet:fieldGet( "personalizado" ) == 0, ::oController:oRowSet:fieldGet( "nombre_valor" ), "" ) }
      :bOnPostEdit         := {| oCol, uNewValue, nKey | ::ChangeColValue( uNewValue ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Personalizado"
      :nWidth              := 245
      :nEditType           := 1
      :bEditValue          := {|| if( ::oController:oRowSet:fieldGet( "personalizado" ) == 1, Padr( ::oController:oRowSet:fieldGet( "nombre_valor" ), 200 ), Space( 200 ) ) }
      :bOnPostEdit         := {| oCol, uNewValue, nKey | ::ChangeColSeleccionado( uNewValue ) }
   end





   TButton():ReDefine( 1, {||( ::oDialog:end( 1 ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 116, {|| ::oDialog:end( 1 ) } )
   end

   ::oDialog:bStart := {|| ::oBrowse:SetFocus(), ::ChangeBrowse() }

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

   ::oBitmap:end()

RETURN ( ::oDialog:nResult )



static FUNCTION CaracteristicasValoresArticulosView_ChangeBrowse( ) ; local Self AS CLASS CaracteristicasValoresArticulosView := QSelf() AS CLASS CaracteristicasValoresArticulosView

   local aValores    := SQLCaracteristicasLineasModel():getArrayNombreValoresFromUuid( ::oController:oRowSet:fieldGet( "caracteristica_uuid" ) )

   if len( aValores ) > 0
      ::oCol:nEditType     := 2
      ::oCol:aEditListTxt  := aValores
   else
      ::oCol:nEditType     := 0
      ::oCol:aEditListTxt  := {}
   end

RETURN ( .T. )



static FUNCTION CaracteristicasValoresArticulosView_ChangeColValue( uNewValue ) ; local Self AS CLASS CaracteristicasValoresArticulosView := QSelf() AS CLASS CaracteristicasValoresArticulosView

   ::oController:oModel:updateFieldWhereUuid( ::oController:oRowSet:fieldGet( "uuid" ), "caracteristica_valor_uuid", SQLCaracteristicasLineasModel():getUuidWhereNombre( uNewValue ) )

   ::oController:oRowSet:Refresh()

   ::oBrowse:Refresh()

RETURN ( .T. )



static FUNCTION CaracteristicasValoresArticulosView_ChangeColSeleccionado( uNewValue ) ; local Self AS CLASS CaracteristicasValoresArticulosView := QSelf() AS CLASS CaracteristicasValoresArticulosView

   local hBuffer

   if Empty( uNewValue )
      Return ( .T. )
   end





   if Empty( SQLCaracteristicasLineasModel():getUuidWhereNombre( uNewValue ) )

      hBuffer     := SQLCaracteristicasLineasModel():loadBlankBuffer()

      hset( hBuffer, "parent_uuid", ::oController:oRowSet:fieldGet( "caracteristica_uuid" ) )
      hset( hBuffer, "nombre", AllTrim( uNewValue ) )
      hset( hBuffer, "personalizado", 1 )

      SQLCaracteristicasLineasModel():insertBuffer( hBuffer )

   end

   ::ChangeColValue( uNewValue )

RETURN ( .T. )







_HB_CLASS SQLCaracteristicasValoresArticulosModel ; function SQLCaracteristicasValoresArticulosModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLCaracteristicasValoresArticulosModel", iif( .T., { @SQLBaseModel() }, { @HBObject() } ), @SQLCaracteristicasValoresArticulosModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "caracteristicas_valores_articulos", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER { cConstraints } ; oClass:AddMultiData(, "UNIQUE KEY ( articulo_uuid, caracteristica_uuid )", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cConstraints"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLCaracteristicasValoresArticulosModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getSQLInsertCaracteristicaWhereArticulo(); oClass:AddMethod( "getSQLInsertCaracteristicaWhereArticulo", @SQLCaracteristicasValoresArticulosModel_getSQLInsertCaracteristicaWhereArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getSentenceRowSetValores(); oClass:AddMethod( "getSentenceRowSetValores", @SQLCaracteristicasValoresArticulosModel_getSentenceRowSetValores(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER caracteristicaUuidListFromUuidArticulo( uuidProduct); oClass:AddMethod( "caracteristicaUuidListFromUuidArticulo", @SQLCaracteristicasValoresArticulosModel_caracteristicaUuidListFromUuidArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER caracteristicaValuesUuidListFromUuidArticulo( uuidProduct); oClass:AddMethod( "caracteristicaValuesUuidListFromUuidArticulo", @SQLCaracteristicasValoresArticulosModel_caracteristicaValuesUuidListFromUuidArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER productCaracteristicaValuesUuidHashFromUuidArticulo( uuidProduct); oClass:AddMethod( "productCaracteristicaValuesUuidHashFromUuidArticulo", @SQLCaracteristicasValoresArticulosModel_productCaracteristicaValuesUuidHashFromUuidArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLCaracteristicasValoresArticulosModel ;



static FUNCTION SQLCaracteristicasValoresArticulosModel_getColumns( ) ; local Self AS CLASS SQLCaracteristicasValoresArticulosModel := QSelf() AS CLASS SQLCaracteristicasValoresArticulosModel


   hset( ::hColumns, "id",                            {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",                          {  "create"    => "VARCHAR( 40 ) NOT NULL UNIQUE"           , "default"   => {|| win_uuidcreatestring() } }            )


   hset( ::hColumns, "articulo_uuid",                 {  "create"    => "VARCHAR( 40 )"                           , "default"   => {|| Space( 40 ) } }                       )


   hset( ::hColumns, "caracteristica_uuid",           {  "create"    => "VARCHAR( 40 )"                           , "default"   => {|| Space( 40 ) } }                       )


   hset( ::hColumns, "caracteristica_valor_uuid",     {  "create"    => "VARCHAR( 40 )"                           , "default"   => {|| Space( 40 ) } }                       )

RETURN ( ::hColumns )



static FUNCTION SQLCaracteristicasValoresArticulosModel_getSQLInsertCaracteristicaWhereArticulo ; local Self AS CLASS SQLCaracteristicasValoresArticulosModel := QSelf() AS CLASS SQLCaracteristicasValoresArticulosModel

   local cSQL

   cSQL           := "INSERT IGNORE INTO " + ::getTableName()                                            + " "
   cSQL           +=    "( uuid, articulo_uuid, caracteristica_uuid )"                                   + " "
   cSQL           += "SELECT uuid(), " + quoted( ::oController:uuidArticulo ) + ", caracteristicas.uuid" + " "
   cSQL           +=    "FROM " + SQLCaracteristicasModel():getTableName() + " AS caracteristicas"       + " "
   cSQL           +=    "WHERE caracteristicas.empresa_codigo = " + quoted( cCodEmp() )                  + " "
   cSQL           +=    "ORDER BY id"

Return ( getSQLDatabase():Exec( cSQL ) )



static FUNCTION SQLCaracteristicasValoresArticulosModel_getSentenceRowSetValores( ) ; local Self AS CLASS SQLCaracteristicasValoresArticulosModel := QSelf() AS CLASS SQLCaracteristicasValoresArticulosModel

   local cSentence

   cSentence      := "SELECT caracteristicas_valores_articulos.uuid AS uuid, "
   cSentence      +=    "caracteristicas_valores_articulos.articulo_uuid AS articulo_uuid, "
   cSentence      +=    "caracteristicas_valores_articulos.caracteristica_uuid AS caracteristica_uuid, "
   cSentence      +=    "caracteristicas_valores_articulos.caracteristica_valor_uuid AS caracteristica_valor_uuid, "
   cSentence      +=    "articulos_caracteristicas.nombre AS nombre_caracteristica, "
   cSentence      +=    "articulos_caracteristicas_lineas.nombre AS nombre_valor, "
   cSentence      +=    "articulos_caracteristicas_lineas.personalizado AS personalizado "
   cSentence      += "FROM caracteristicas_valores_articulos "
   cSentence      += "INNER JOIN articulos_caracteristicas ON articulos_caracteristicas.uuid = caracteristicas_valores_articulos.caracteristica_uuid "
   cSentence      += "LEFT JOIN articulos_caracteristicas_lineas ON articulos_caracteristicas_lineas.uuid = caracteristicas_valores_articulos.caracteristica_valor_uuid "
   cSentence      +=    "WHERE caracteristicas_valores_articulos.articulo_uuid = " + quoted( ::oController:uuidArticulo )

Return ( cSentence )



static FUNCTION SQLCaracteristicasValoresArticulosModel_caracteristicaUuidListFromUuidArticulo( uuidProduct ) ; local Self AS CLASS SQLCaracteristicasValoresArticulosModel := QSelf() AS CLASS SQLCaracteristicasValoresArticulosModel

   local aIds     := {}
   local aResult
   local cSentence

   cSentence      := "SELECT caracteristica_uuid AS uuid "
   cSentence      += "FROM caracteristicas_valores_articulos "
   cSentence      += "WHERE articulo_uuid = " + quoted( uuidProduct )

   aResult     := ::getDatabase():selectFetchArray( cSentence )

   aEval( aResult, {|a| aAdd( aIds, a[1] ) } )

Return ( aIds )



static FUNCTION SQLCaracteristicasValoresArticulosModel_caracteristicaValuesUuidListFromUuidArticulo( uuidProduct ) ; local Self AS CLASS SQLCaracteristicasValoresArticulosModel := QSelf() AS CLASS SQLCaracteristicasValoresArticulosModel

   local aIds     := {}
   local aResult
   local cSentence

   cSentence      := "SELECT caracteristica_valor_uuid AS uuid "
   cSentence      += "FROM caracteristicas_valores_articulos "
   cSentence      += "WHERE articulo_uuid = " + quoted( uuidProduct )

   aResult     := ::getDatabase():selectFetchArray( cSentence )

   aEval( aResult, {|a| aAdd( aIds, a[1] ) } )

Return ( aIds )



static FUNCTION SQLCaracteristicasValoresArticulosModel_productCaracteristicaValuesUuidHashFromUuidArticulo( uuidProduct ) ; local Self AS CLASS SQLCaracteristicasValoresArticulosModel := QSelf() AS CLASS SQLCaracteristicasValoresArticulosModel

   local cSentence

   cSentence      := "SELECT caracteristica_uuid AS caracteristica, caracteristica_valor_uuid AS valor "
   cSentence      += "FROM caracteristicas_valores_articulos "
   cSentence      += "WHERE articulo_uuid = " + quoted( uuidProduct )

Return ( ::getDatabase():selectFetchHash( cSentence ) )
