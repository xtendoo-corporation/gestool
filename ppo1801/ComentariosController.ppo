#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\ComentariosController.prg"
_HB_CLASS ComentariosController ; function ComentariosController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ComentariosController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @ComentariosController() ) ) ;

   _HB_MEMBER { oComentariosLineasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oComentariosLineasController"}, .F. )

   _HB_MEMBER { oCamposExtraValoresController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraValoresController"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @ComentariosController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @ComentariosController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ComentariosController ;



static FUNCTION ComentariosController_New( oSenderController ) ; local Self AS CLASS ComentariosController := QSelf() AS CLASS ComentariosController

   ::Super:New( oSenderController )

   ::cTitle                      := "Comentarios"

   ::cName                       := "comentarios"



   ::hImage                      := {  "16" => "gc_message_16", "32" => "gc_message_32", "48" => "gc_message_48" }

   ::nLevel                         := Auth():Level( ::cName )

   ::oModel                         := SQLComentariosModel():New( self )

   ::oBrowseView                    := ComentariosBrowseView():New( self )

   ::oDialogView                    := ComentariosView():New( self )

   ::oComentariosLineasController   := ComentariosLineasController():New( self )

   ::oCamposExtraValoresController  := CamposExtraValoresController():New( self, ::oModel:cTableName )

   ::oValidator                     := ComentariosValidator():New( self, ::oDialogView )

   ::oRepository                    := ComentariosRepository():New( self )

   ::oGetSelector                   := GetSelector():New( self )

RETURN ( Self )



static FUNCTION ComentariosController_End( ) ; local Self AS CLASS ComentariosController := QSelf() AS CLASS ComentariosController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oComentariosLineasController:End()

   ::oCamposExtraValoresController:End()

   ::oRepository:End()

   ::Super:End()

RETURN ( Self )











_HB_CLASS ComentariosBrowseView ; function ComentariosBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ComentariosBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @ComentariosBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @ComentariosBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ComentariosBrowseView ;



static FUNCTION ComentariosBrowseView_addColumns( ) ; local Self AS CLASS ComentariosBrowseView := QSelf() AS CLASS ComentariosBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "codigo"
      :cHeader             := "Código"
      :nWidth              := 50
      :bEditValue          := {|| ::getRowSet():fieldGet( "codigo" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "nombre"
      :cHeader             := "Nombre"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "nombre" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

RETURN ( self )









_HB_CLASS ComentariosView ; function ComentariosView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ComentariosView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @ComentariosView() ) ) ;

   _HB_MEMBER { oSayCamposExtra } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayCamposExtra"}, .F. )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @ComentariosView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ComentariosView ;



static FUNCTION ComentariosView_Activate( ) ; local Self AS CLASS ComentariosView := QSelf() AS CLASS ComentariosView

   local oDialog
   local oBmpGeneral
   local oSayCamposExtra
   local oBtnEdit
   local oBtnAppend
   local oBtnDelete



   ::oDialog = TDialog():New(,,,, ::LblTitle() + "Comentario", "COMENTARIO",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )






   ::oBitmap := TBitmap():ReDefine( 900, ::oController:getImage( "48" ),, ::oDialog,,, .F., .F.,,, .F.,,, .T. )




   ::oMessage := TSay():ReDefine( 800,, ::oDialog,,,, .F., getBoldFont(), .F., .F., )






   TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo" ], ::oController:oModel:hBuffer[ "codigo" ]:= u ) }, ::oDialog,, "@! NNNNNNNNNNNNNNNNNNNN", {||       ( ::oController:validate( "codigo" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre" ], ::oController:oModel:hBuffer[ "nombre" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "nombre" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )






   ::oSayCamposExtra := TSay():ReDefine( 170, {||      "Campos extra..."}, ::oDialog,, ( 10 + ( 152 * 256 ) + ( 234 * 65536 ) ),, .F., getBoldFont(), .F., .F., )
   ::oSayCamposExtra:lWantClick  := .T.
   ::oSayCamposExtra:OnClick     := {|| ::oController:oCamposExtraValoresController:Edit( ::oController:getUuid() ) }





   oBtnAppend := TButton():ReDefine( 120,, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )
  oBtnAppend:bAction   := {|| ::oController:oComentariosLineasController:Append() }





   oBtnEdit := TButton():ReDefine( 130,, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )
   oBtnEdit:bAction   := {|| ::oController:oComentariosLineasController:Edit() }





   oBtnDelete := TButton():ReDefine( 150,, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )
  oBtnDelete:bAction   := {|| ::oController:oComentariosLineasController:Delete() }

   ::oController:oComentariosLineasController:Activate( 160, ::oDialog )





   TButton():ReDefine( 1, {||( if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 113, {|| ::oController:oComentariosLineasController:Append() } )
      ::oDialog:AddFastKey( 114, {|| ::oController:oComentariosLineasController:Edit() } )
      ::oDialog:AddFastKey( 115, {|| ::oController:oComentariosLineasController:Delete() } )
      ::oDialog:AddFastKey( 116, {|| if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) } )
   end

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

  ::oBitmap:end()

RETURN ( ::oDialog:nResult )








_HB_CLASS ComentariosValidator ; function ComentariosValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ComentariosValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @ComentariosValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @ComentariosValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ComentariosValidator ;



static FUNCTION ComentariosValidator_getValidators( ) ; local Self AS CLASS ComentariosValidator := QSelf() AS CLASS ComentariosValidator




   ::hValidators  := {  "nombre" =>                {  "required"           => "El nombre es un dato requerido", "unique"             => "El nombre introducido ya existe" }, "codigo" =>                {  "required"           => "El código es un dato requerido" , "unique"             => "EL código introducido ya existe"  } }
RETURN ( ::hValidators )










_HB_CLASS SQLComentariosModel ; function SQLComentariosModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLComentariosModel", iif( .T., { @SQLCompanyModel() }, { @HBObject() } ), @SQLComentariosModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "articulos_familias_comentarios", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLComentariosModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLComentariosModel ;



static FUNCTION SQLComentariosModel_getColumns( ) ; local Self AS CLASS SQLComentariosModel := QSelf() AS CLASS SQLComentariosModel


   hset( ::hColumns, "id",                {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",              {  "create"    => "VARCHAR(40) NOT NULL UNIQUE"             , "default"   => {|| win_uuidcreatestring() } }            )
   ::getEmpresaColumns()


   hset( ::hColumns, "codigo",            {  "create"    => "VARCHAR( 20 )"                            , "default"   => {|| space( 20 ) } }                        )


   hset( ::hColumns, "nombre",            {  "create"    => "VARCHAR( 200 )"                          , "default"   => {|| space( 200 ) } }                       )

   ::getTimeStampColumns()

RETURN ( ::hColumns )











_HB_CLASS ComentariosRepository ; function ComentariosRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ComentariosRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @ComentariosRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLComentariosModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombreWhereUuid(); oClass:AddInline( "getNombreWhereUuid", {|Self, Uuid | ( ( Self ) ), ( ::getColumnWhereUuid( Uuid, "nombre" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUuidWhereNombre(); oClass:AddInline( "getUuidWhereNombre", {|Self, cNombre | ( ( Self ) ), ( ::getUuidWhereColumn( cNombre, "nombre", "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ComentariosRepository ;