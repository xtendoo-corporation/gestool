#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 128 ".\.\Prg\Comun.prg"
EXTERNAL __HBEXTERN__HBSSL__





static oWnd
static oWndBar
static oDlgProgress

static oMsgUser
static oMsgDelegacion
static oMsgCaja
static oMsgSesion
static oMsgProgress

static cCodigoEmpresaEnUso
static cCodigoDelegacionEnUso

static aEmpresa
static aDelegacion

static cCodEmp          := ""

static aMnuNext         := {}
static aMnuPrev         := {}
static aDlgEmp          := {}

static hVariables       := {=>}

static nError           := 0

static lDemoMode        := .T.

static nHndCaj
static nHndReport

static aEmpresasGrupo   := {}

static cDefPicIn
static cDefPicOut

static lAds             := .F.
static lAIS             := .F.
static lCdx             := .F.

static cAdsIp           := ""
static cAdsPort         := ""
static cAdsData         := ""
static nAdsServer       := 7
static cAdsFile         := "gestool.Add"

static appParamsMain    := ""
static appParamsSecond  := ""
static appParamsThird   := ""

static cCodigoAgente    := ""

static dSysDate

static cEmpUsr          := ""
static cPatGrp          := ""
static cPatCli          := ""
static cPatArt          := ""
static cPatPrv          := ""
static cPatAlm          := ""
static cPatEmp          := ""
static cPatScriptEmp    := ""

static cPatTmp          := ""
static cPathPC          := ""
static cNombrePc        := ""

static cBmpVersion
static cNameVersion
static cTypeVersion     := ""

static lStandard
static lProfesional
static lOsCommerce

static oMsgAlmacen

static cUsrTik

static oFastReport

















static hMapaAjuste      :=  { "#,#0"   => { "Round" => 1,  "Incrementa" => 0.00,    "Decrementa" => 0.00,   "Ceros" => .T. } , "#,#5"   => { "Round" => 1,  "Incrementa" => 0.05,    "Decrementa" => -0.05,  "Ceros" => .F. } , "#,#9"   => { "Round" => 1,  "Incrementa" => 0.09,    "Decrementa" => -0.01,  "Ceros" => .F. } , "#,10"   => { "Round" => 0,  "Incrementa" => 0.10,    "Decrementa" => -0.90,  "Ceros" => .F. } , "#,20"   => { "Round" => 0,  "Incrementa" => 0.20,    "Decrementa" => -0.80,  "Ceros" => .F. } , "#,50"   => { "Round" => 0,  "Incrementa" => 0.50,    "Decrementa" => -0.50,  "Ceros" => .F. } , "#,90"   => { "Round" => 0,  "Incrementa" => 0.90,    "Decrementa" => -0.10,  "Ceros" => .F. } , "#,95"   => { "Round" => 0,  "Incrementa" => 0.95,    "Decrementa" => -0.05,  "Ceros" => .F. } , "#,99"   => { "Round" => 0,  "Incrementa" => 0.99,    "Decrementa" => -0.01,  "Ceros" => .F. } , "#,00"   => { "Round" => 0,  "Incrementa" => 1.00,    "Decrementa" => -9.00,  "Ceros" => .T. } , "1,00"   => { "Round" => -1, "Incrementa" => 11.00,   "Decrementa" => -19.00, "Ceros" => .F. } , "5,00"   => { "Round" => -1, "Incrementa" => 15.00,   "Decrementa" => -15.00, "Ceros" => .F. } , "9,00"   => { "Round" => -1, "Incrementa" => 19.00,   "Decrementa" => -19.00, "Ceros" => .F. } , "10,00"  => { "Round" => -2, "Incrementa" => 110.00,  "Decrementa" => 110.00, "Ceros" => .F. } , "20,00"  => { "Round" => -2, "Incrementa" => 120.00,  "Decrementa" => 120.00, "Ceros" => .F. } , "50,00"  => { "Round" => -2, "Incrementa" => 150.00,  "Decrementa" => 150.00, "Ceros" => .F. } , "100,00" => { "Round" => -3, "Incrementa" => 200.00,  "Decrementa" => 200.00, "Ceros" => .F. } }

static hLib, hDib, oSpoolTimer



FUNCTION oWnd() ; RETURN oWnd



FUNCTION oWndBar() ; RETURN oWndBar



FUNCTION CreateMainWindow( oIconApp )

   if !( lInitCheck() )
      RETURN nil
   end

   if ( "REINDEXA" $ appParamsMain() )
      InitReindexa()
   end









   oWnd := TMdiFrame():New( 0, 0, 26, 82, "Gestool" + Space( 1 ) + "2K25 (2025)",, ( BuildMenu() ),, oIconApp, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 231 + ( 234 * 256 ) + ( 238 * 65536 ) ),,,,,,, "oWnd",, )

   oWndBar                    := CreateAcceso( oWnd )
   oWndBar:CreateButtonBar( oWnd )



   oWnd:Cargo                 := appParamsMain()

   oWnd:bKeyDown              := { | nKey | StdKey( nKey ) }



   oWnd:oMsgBar               := TMsgBar():New( oWnd, "(c) Gestool 2025" + Space(2) + cNameVersion(), .F., .F., .F., .F., ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), , .F. )
   oWnd:oMsgBar:setFont( oFontLittelTitle() )

   oDlgProgress               := TMsgItem():New( oWnd:oMsgBar, "", 100, , , , .T. )

   oWnd:oMsgBar:oDate         := TMsgItem():New( oWnd:oMsgBar, Dtoc( GetSysDate() ), oWnd:oMsgBar:GetWidth( dtoc( getsysdate() ) ) + 12,,,, .T., { || SelSysDate() } )
   oWnd:oMsgBar:oDate:lTimer  := .T.
   oWnd:oMsgBar:oDate:bMsg    := {|| GetSysDate() }
   oWnd:oMsgBar:CheckTimer()

   oMsgUser                   := TMsgItem():New( oWnd:oMsgBar, "Usuario : " + Rtrim( Auth():Nombre ), 200,,,, .T. )

   oMsgDelegacion             := TMsgItem():New( oWnd:oMsgBar, "Delegación : " + Rtrim( Application():codigoDelegacion() ), 100,,,, .T., {|| SelectDelegacion(), chkTurno() } )

   oMsgCaja                   := TMsgItem():New( oWnd:oMsgBar, "Caja : "  + Application():codigoCaja(), 100,,,, .T., {|| SelectCajas(), chkTurno() } )

   oMsgAlmacen                := TMsgItem():New( oWnd:oMsgBar, "Almacén : " + AllTrim( Application():codigoAlmacen() ), 100,,,, .T., {|| SelectAlmacen(), cAlmUsr( Application():codigoAlmacen() ) } )

   oMsgSesion                 := TMsgItem():New( oWnd:oMsgBar, "Sesión : ", 100,,,, .T., {|| dbDialog() } )








   oWnd:Activate( Upper("MAXIMIZED"), oWnd:bLClicked, oWnd:bRClicked, oWnd:bMoved, oWnd:bResized := { | nSizeType, nWidth, nHeight | ( WndResize( oWnd ) ) }, oWnd:bPainted := { | hDC, cPS | ( WndPaint( hDC, oWnd ) ) }, oWnd:bKeyDown, oWnd:bInit := { | Self | ( lStartCheck() ) },,,,,,,,, {||                   ( EndApp() )},, oWnd:bLButtonUp, .F. )

   SysRefresh()

RETURN nil



FUNCTION CreateMainSQLWindow( oIconApp )

   if !( lInitCheck() )
      RETURN nil
   end









   oWnd := TMdiFrame():New( 0, 0, 26, 82, "SQL DEMO" + "Gestool" + Space( 1 ) + "2K25 (2025)",, ( BuildMenu() ),, oIconApp, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 231 + ( 234 * 256 ) + ( 238 * 65536 ) ),,,,,,, "oWnd",, )

   oWndBar                    := CreateMainSQLAcceso( oWnd )
   oWndBar:CreateButtonBar( oWnd )



   oWnd:Cargo                 := appParamsMain()

   oWnd:bKeyDown              := { | nKey | StdKey( nKey ) }



   oWnd:oMsgBar               := TMsgBar():New( oWnd, "(c) Gestool 2025" + Space(2) + cNameVersion(), .F., .F., .F., .F., ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), , .F. )
   oWnd:oMsgBar:setFont( oFontLittelTitle() )

   oDlgProgress               := TMsgItem():New( oWnd:oMsgBar, "", 100, , , , .T. )

   oWnd:oMsgBar:oDate         := TMsgItem():New( oWnd:oMsgBar, Dtoc( GetSysDate() ), oWnd:oMsgBar:GetWidth( dtoc( getsysdate() ) ) + 12,,,, .T., { || SelSysDate() } )
   oWnd:oMsgBar:oDate:lTimer  := .T.
   oWnd:oMsgBar:oDate:bMsg    := {|| GetSysDate() }
   oWnd:oMsgBar:CheckTimer()

   oMsgUser                   := TMsgItem():New( oWnd:oMsgBar, "Usuario : " + Rtrim( Auth():Nombre() ), 200,,,, .T. )

   oMsgDelegacion             := TMsgItem():New( oWnd:oMsgBar, "Delegación : " + Rtrim( Application():codigoDelegacion() ), 100,,,, .T., {|| SelectDelegacion(), chkTurno() } )

   oMsgCaja                   := TMsgItem():New( oWnd:oMsgBar, "Caja : "  + Application():codigoCaja(), 100,,,, .T., {|| SelectCajas(), chkTurno() } )

   oMsgAlmacen                := TMsgItem():New( oWnd:oMsgBar, "Almacén : " + Rtrim( Application():codigoAlmacen() ), 100,,,, .T., {|| SelectAlmacen(), cAlmUsr( Application():codigoAlmacen() ) } )

   oMsgSesion                 := TMsgItem():New( oWnd:oMsgBar, "Sesión : ", 100,,,, .T., {|| dbDialog() } )








   oWnd:Activate( Upper("MAXIMIZED"), oWnd:bLClicked, oWnd:bRClicked, oWnd:bMoved, oWnd:bResized := { | nSizeType, nWidth, nHeight | ( WndResize( oWnd ) ) }, oWnd:bPainted := { | hDC, cPS | ( WndPaint( hDC, oWnd ) ) }, oWnd:bKeyDown, oWnd:bInit := { | Self | ( lStartCheck() ) },,,,,,,,, {||                   ( EndApp() )},, oWnd:bLButtonUp, .F. )

   SysRefresh()

RETURN nil



FUNCTION BuildMenu()

   local oMenu

   oMenu := MenuBegin( .F.,,, .F., .F.,,,,,,,,,, .F.,, .F., .F., .F., .T.,, ,,,,,, .F.,, .F., .F.,,,,,,,,,, .F.,,,,,, )
   MenuEnd()

RETURN oMenu



FUNCTION lStartCheck()

   CursorWait()



   oMsgText( "Chequeando versión de empresa" )

   ChkAllEmp()



   oMsgText( "Control de acceso a la aplicación" )

   ControlAplicacion()



   SetTituloEmpresa()



   oMsgText( "Selección del cajón" )

   SelectCajon()

   oMsgText( "Selección del la caja" )

   if uFieldEmpresa( "lSelCaj", .F. )
      SelectCajas()
      cAlmUsr( Application():codigoAlmacen() )
   end

   oMsgText( "Selección del almacen" )

   if uFieldEmpresa( "lSelAlm", .F. )
      SelectAlmacen()
      cAlmUsr( Application():codigoAlmacen() )
   end



   oMsgText( "Facturas automáticas" )

   lFacturasAutomaticas()



   oMsgText( "Pedidos por la web" )

   lPedidosWeb()



   oMsgText( "Comprobando scripts de inicio" )

   runEventScript( "IniciarAplicacion" )



   chkTurno()

   if !empty( oMsgSesion() )
      oMsgSesion():setText( "Sesión : " + Transform( cCurSesion(), "######" ) )
   end



   oMsgText( "Servicios de timers" )

   initServices()



   PdaEnvioRecepcionController():getInstance():activateTimer()



   oMsgText()

   CursorWe()

   Test()

RETURN ( .T. )



Function getExeDate()

   local aDir     := {}
   local cDate    := ""

   aDir := Directory( FullCurDir() + "gestool.exe" )

   if Len( aDir ) > 0
      cDate       := dtos( aDir[ 1, 3 ] )
   end

RETURN ( cDate )



FUNCTION Test()
















RETURN ( .T. )



function checkOrtography( cText )

   local finalText := ""
   Local oWord
   local oDoc
   local oTexto

   if Empty( cText )
      return ( finalText )
   end

   oWord          :=TOleAuto():New( "Word.Application" )
   oWord:Visible  := .F.
   oWord:Documents:Add()
   oDoc           := oWord:Get("ActiveDocument")

   oTexto         := oWord:Selection()
   oTexto:Text    := cText

   oDoc:CheckSpelling()

   finalText      := oTexto:Text

   oDoc:Close(0)
   oWord:Quit()
   oTexto:=NIL
   oDoc:=NIL
   oWord:=NIL

   finalText      := StrTran(finalText,Chr(13),Chr(13)+Chr(10))

   If Empty( finalText )
      finalText   := cText
   Endif

return ( finalText )



Function aachecksum( cString )

   local cResult

   cResult :=  nXor( asc( substr( cString , 1 ,1 ) ), asc( substr( cString , 2 ,1 ) ) )
   cResult :=  nXor( cResult, asc( substr( cString , 3 ,1 ) ) )
   cResult :=  nXor( cResult, asc( substr( cString , 4 ,1 ) ) )
   cResult :=  nXor( cResult, asc( substr( cString , 5 ,1 ) ) )
   cResult :=  nXor( cResult, asc( substr( cString , 6 ,1 ) ) )
   cResult :=  nXor( cResult, asc( substr( cString , 7 ,1 ) ) )

Return ( chr( cResult ) )



FUNCTION SFtpUpload()

   local cFile
   local cRet     := ""
   local UserLogin, UserPass, cUrl, cUploadFolder, cSftpURL, nPort, nFSize
   local curlHandle
   local curlErr
   local cErrorB

   cFile          := cGetFile( "Excel ( *.bmp ) | " + "*.bmp", "Seleccione imagen" )

   if EMPTY(cFile)
      cRet  := "No hay fichero"
      Return cRet
   endif




   UserLogin:="motosdasilva"
   UserPass:="MotosDasilva18?"

   cUrl:="81.46.227.14"



   cUploadFolder := UrlAllEncode( "var/www/prestashop/img/" )


   cSftpURL := "sftp://" + UrlAllEncode( UserLogin ) + ":" +  UrlAllEncode( UserPass ) + "@" + cUrl + Chr( 47 ) + cUploadFolder + cFileNoPath( cFile )

   nPort  := 22
   nFSize := FileSize( cFile )

   curl_global_init()
   curlHandle  :=   curl_easy_init()

   if empty(curlHandle)
      cRet  := "Error while init cURL lib."
      Return cRet
   endif

   curl_easy_reset( curlHandle )
   curl_easy_setopt( curlHandle, 46, 1 )
   curl_easy_setopt( curlHandle, 50, 1 )
   curl_easy_setopt( curlHandle, 2, cSftpURL)
   curl_easy_setopt( curlHandle, 181, hb_bitShift( 1, 5 ))
   curl_easy_setopt( curlHandle, 3, nPort)
   curl_easy_setopt( curlHandle, 41, 1 )
   curl_easy_setopt( curlHandle, 45, 1 )
   curl_easy_setopt( curlHandle, 10, cErrorB )
   curl_easy_setopt( curlHandle, 110, 1 )
   curl_easy_setopt( curlHandle, 1003, cFile)
   curl_easy_setopt( curlHandle, 115, nFSize)
   curlErr := curl_easy_perform( curlHandle )

   if !empty( curlErr )
      cRet     := curl_easy_strerror( curlErr ) + " / " + cErrorB
   else
      cRet    := "Sucessfully"
   endif

   if !empty( curlHandle )
      curl_easy_reset( curlHandle )
      curl_global_cleanup( curlHandle )
      curlHandle  := nil
   endif

RETURN cRet



Function UrlAllEncode( cStr )

   If( cStr == nil, cStr := "", ) ;

   cStr   := StrTran( cStr, "@", "%40" )
   cStr   := StrTran( cStr, "#", "%23" )
   cStr   := StrTran( cStr, "?", "%3F" )
   cStr   := StrTran( cStr, "\", Chr( 47 ) )
   cStr   := StrTran( cStr, "/", Chr( 47 ) )

Return cStr



FUNCTION WndResize( oWnd )

   local oBlock
   local oError

   if empty( oWnd )
      RETURN ( nil )
   end

   oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      aeval( oWnd:oWndClient:aWnd, {|o| oWnd:oWndClient:ChildMaximize( o ) } )

      if !empty( oWndBar )
         oWndBar:CreateLogo()
      end

   RECOVER

   end

   ErrorBlock( oBlock )

RETURN nil



FUNCTION oMsgProgress()

   if empty( oMsgProgress ) .AND. !empty( oWnd() )
      oMsgProgress   := TProgress():New( 3, oDlgProgress:nLeft() - 2 , oWnd():oMsgBar, 0, , , .T., .F., oDlgProgress:nWidth - 2, 16 )
   end

RETURN ( oMsgProgress )



FUNCTION EndProgress()

   oMsgProgress:End()

   oMsgProgress      := nil

RETURN ( nil )



FUNCTION Titulo( cTxt )

RETURN ( if( oWnd() <> nil, oWnd():cTitle( cTxt ), "" ) )



FUNCTION oMsgSesion() ; RETURN ( oMsgSesion )



FUNCTION oMsgText( cText )

   If( cText == nil, cText := "(c) Gestool 2025" + Space(2) + cNameVersion(), ) ;

   if empty( oWnd() )
      RETURN nil
   end

   if _isData( oWnd(), "oMsgBar" ) .AND. ( oWnd():oMsgBar <> nil )
      oWnd():oMsgBar:SetMsg( cText )
   end

RETURN ( nil )



Static FUNCTION StdKey( nKey )

   do case
      case nKey == 65 .AND. GetKeyState( 17 )
         CreateInfoArticulo()
      case nKey == 66 .AND. GetKeyState( 17 )
         BrwSelArticulo()
      case nKey == 68 .AND. GetKeyState( 17 )
         BrwClient()
      case nKey == 38 .AND. GetKeyState( 17 )
         NextEmpresa()
      case nKey == 40 .AND. GetKeyState( 17 )
         PriorEmpresa()
      case nKey == 48 .AND. GetKeyState( 17 )
         TDataCenter():GetAllTables( "Tables" )
   end

RETURN Nil



STATIC FUNCTION EndApp()

   local oAni
   local oDlg
   local oError
   local oBlock
   local oBrush
   local oBtnOk
   local oBtnZip
   local lFinish
   local oBtnCancel
   local oBmpVersion

   oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      SysRefresh()

      if !empty( oWnd() )
         oWnd():CloseAll()
      end

      SysRefresh()

      oBrush := TBrush():New(, ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ),,,, )

      oDlg = TDialog():New(,,,,, "EndApp",, .F.,,,, oBrush,, .F.,,,,,, .F.,, "oDlg", nil, )




         oBmpVersion := TBitmap():ReDefine( 600, cBmpVersion(),, oDlg,,, .F., .F.,,, .F.,,, .F. )

         TWebBtn():Redefine( 100,,,,,, oDlg,,,,, "LEFT",,,,, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ) ):SetTransparent()
         TWebBtn():Redefine( 110,,,,,, oDlg,,,,, "LEFT",,,,, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ) ):SetTransparent()
         TWebBtn():Redefine( 120,,,,,, oDlg,,,,, "LEFT",,,,, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ) ):SetTransparent()

         oAni                       := TAnimat():Redefine( oDlg, 200, { "BAR_01" }, 1 )

         oBtnZip := TButton():ReDefine( 3, {||( CompressEmpresa( cCodEmp(), nil, { oBtnZip, oBtnOk, oBtnCancel }, nil, oAni, nil, oDlg ) )}, oDlg,,, .F.,,,, .F. )

         oBtnOk := TButton():ReDefine( 1, {||( CompressEmpresa( cCodEmp(), nil, { oBtnZip, oBtnOk, oBtnCancel }, nil, oAni, nil, oDlg, .F. ) )}, oDlg,,, .F.,,,, .F. )

         oBtnCancel := TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )

         oDlg:AddFastKey( 116,    {|| oDlg:end( 1 ) } )

         oDlg:bStart                := {|| oAni:Hide() }

      oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

      if !empty( oBrush )
         oBrush:End()
      end

      if !empty( oBmpVersion )
         oBmpVersion:End()
      end

   RECOVER

   end

   ErrorBlock( oBlock )

   lFinish     := !empty( oDlg ) .AND. ( oDlg:nResult == 1 )

   if ( lFinish )
      FinishAplication()
   end

RETURN ( lFinish )






FUNCTION ControlAplicacion()

   local oDlg
   local oBmpPerpetua
   local oBmpDemo
   local oSayDemo
   local oSerialHD
   local nSerialHD
   local oSerialUSR
   local nSerialUSR
   local oLicencia
   local nlicencia
   local oSayPerpetua

   if lControlAcceso()
      RETURN .T.
   end

   nSerialHD      := AllTrim( Str( Abs( nSerialHD() ) ) + getExeDate() )
   nSerialUSR     := 0
   nlicencia      := 1
   oSayPerpetua   := Array( 2 )

   oDlg = TDialog():New(,,,, "Sistema de protección " + "Gestool" + "2K25 (2025)", "GetSerialNo",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )





   oBmpPerpetua := TBitmap():ReDefine( 500, "gc_certificate_32",, oDlg,,, .F., .F.,,, .F.,,, .T. )





   oBmpDemo := TBitmap():ReDefine( 520, "gc_lock2_32",, oDlg,,, .F., .F.,,, .F.,,, .T. )









   oLicencia := TRadMenu():Redefine( { | u | If( PCount()==0, nLicencia, nLicencia:= u ) }, oDlg,, { 100, 200 }, {||   ( ChangeLicenciaMode( nLicencia, oSerialHd, oSerialUsr, oSayPerpetua, oSayDemo ) )},,,, .F.,, )




   oSerialHD := TSay():ReDefine( 110, {||      nSerialHD}, oDlg,,,, .F.,, .F., .F., )

   oSayPerpetua[1] := TSay():ReDefine( 111,, oDlg,,,, .F.,, .F., .F., )






   oSerialUsr := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, nSerialUSR, nSerialUSR:= u ) }, oDlg,, "99999999999999",,,,,,, .F.,,, .F., .F.,,,,,, nil,, 121, )

   oSayPerpetua[2] := TSay():ReDefine( 130,, oDlg,,,, .F.,, .F., .F., )





   oSayDemo := TSay():ReDefine( 310,, oDlg,,,, .F.,, .F., .F., )

   with object ( TWebBtn():Redefine( 400,,,,,  {|| goWeb( "http://www.gestool.es" ) }, oDlg,,,,, "LEFT",,,,, ( 0 + ( 0 * 256 ) + ( 255 * 65536 ) ), ( 0 + ( 0 * 256 ) + ( 255 * 65536 ) ),,,, "Ir a la página web de " + "Gestool" ) )
      :SetTransparent()
      :SetText( "http://www.gestool.es" )
   end




   TButton():ReDefine( 1, {||( ExitDialog( oDlg, nLicencia, nSerialHD, nSerialUSR, oSerialUsr ) )}, oDlg,,, .F.,,,, .F. )

      oDlg:bStart := {|| ChangeLicenciaMode( nLicencia, oSerialHd, oSerialUsr, oSayPerpetua, oSayDemo ) }

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

   oBmpPerpetua:end()
   oBmpDemo:end()

RETURN .T.



FUNCTION ExitDialog( oDlg, nLicencia, nSerialHD, nSerialUSR, oSerialUsr )

   local n
   local nSerialCRC
   local aSerialCRC     := {}
   local cFileIni       := FullCurDir() + "2K21.Num"

   do case
      case nLicencia == 1

         if lCheckPerpetuoMode( nSerialUSR )

            MsgInfo( "Programa registrado con éxito" )

            oDlg:End( 1 )

         else

            MsgStop( "Número inválido" )

            oSerialUsr:SetFocus()

         end

      case nLicencia == 2

         cTypeVersion( "[VERSIÓN DEMO]" )

         oDlg:End( 1 )

   end

RETURN ( .T. )



FUNCTION ChangeLicenciaMode( nLicencia, oSerialHd, oSerialUsr, oSayPerpetua, oSayDemo )

   do case
      case nLicencia == 1

         oSerialHd:Show()
         oSerialUsr:Show()
         aEval( oSayPerpetua, { |o| o:Show() } )
         oSayDemo:Hide()

      case nLicencia == 2

         oSerialHd:Hide()
         oSerialUsr:Hide()
         aEval( oSayPerpetua, { |o| o:Hide() } )
         oSayDemo:Show()

   end

RETURN .T.



FUNCTION About()

   local oDlg
   local oTree
   local oBrush
   local oImgLst

   oBrush := TBrush():New(,, ( cBmpVersion() ),,, )

   oDlg = TDialog():New(,,,, "Acerca de " + "Gestool" + Space( 1 ) + "2K25 (2025)", "About",, .F.,,,, oBrush,, .F.,,,,,, .F.,, "oDlg", nil, )

      oImgLst        := TImageList():New( 24, 24 )
      oImgLst:Add( TBitmap():Define( "gc_businessman_24", ,    oDlg ) )
      oImgLst:Add( TBitmap():Define( "gc_businessman2_24", ,   oDlg ) )
      oImgLst:Add( TBitmap():Define( "gc_mail2_24", ,          oDlg ) )
      oImgLst:Add( TBitmap():Define( "gc_user_telephone_24", , oDlg ) )
      oImgLst:Add( TBitmap():Define( "gc_mail_earth_24", ,     oDlg ) )

      oTree          := TTreeView():Redefine( 100, oDlg  )
      oTree:SetColor( ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ) )

      TSay():ReDefine( 200,, oDlg,, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), .F.,, .F., .F., )

      TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )











   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|(  oTree:SetImageList( oImgLst ), oTree:Add( "Manuel Calero Solís",                  0 ), oTree:Add( "Dario Cruz Mauro",                     1 ), oTree:Add( "C. Real, 58",                          2 ), oTree:Add( "21700 - La Palma del Condado - Huelva",2 ), oTree:Add( "655.94.50.25",                         3 ), oTree:Add( "655.94.50.27",                         3 ), oTree:Add( "mcalero@gestool.es",                   4 ), oTree:Add( "dario@gestool.es",                     4 ) )}, oDlg:bRClicked,,, )

   oBrush:End()

RETURN nil



FUNCTION RunAsistenciaRemota()

   local nHnd











      goWeb( "https://anydesk.com/es" )



RETURN nil



FUNCTION lEnviarCorreoWatchdog( cSay, oDlg )

   oDlg:Disable()

   CursorWait()

   with object ( TGenMailing():Create() )





      :MailServer          := "smtp.gestool.es"
      :MailServerPort      := 587
      :MailServerUserName  := "info@gestool.es"
      :MailServerPassword  := "123Ab456"





      :SetDe(              "gestool sistema de registro" )
      :SetPara(            "registro@gestool.es" )
      :SetAsunto(          "Registro de usuario de gestool SAAS." )
      :cGetMensaje         := "Datos de registro de usuario de gestool SAAS" + "<br>"
      :cGetMensaje         += "NIF: "           + AllTrim( cSay[1] ) + "<br>"
      :cGetMensaje         += "Nombre: "        + AllTrim( cSay[2] ) + "<br>"
      :cGetMensaje         += "Domicilio: "     + AllTrim( cSay[3] ) + "<br>"
      :cGetMensaje         += "Población: "     + AllTrim( cSay[4] ) + "<br>"
      :cGetMensaje         += "Cod. postal: "   + AllTrim( cSay[5] ) + "<br>"
      :cGetMensaje         += "Provincia: "     + AllTrim( cSay[8] ) + "<br>"
      :cGetMensaje         += "Email: "         + AllTrim( cSay[6] ) + "<br>"
      :cGetMensaje         += "Teléfono: "      + AllTrim( cSay[7] ) + "<br>"
      :cGetMensaje         += "<br>"
      :cGetMensaje         += "Serial : "       + Str( Abs( nSerialHD() ) ) + "<br>"





      :lExternalSend()

   end

   CursorWe()

   oDlg:Enable()

RETURN ( .T. )



FUNCTION lEnviarCorreoCliente( cSay, oDlg )

   oDlg:Disable()

   CursorWait()

   with object ( TGenMailing():Create() )





      :MailServer            := "smtp.gestool.es"
      :MailServerPort        := 587
      :MailServerUserName    := "info@gestool.es"
      :MailServerPassword    := "123Ab456"





      :SetDe(                "gestool sistema de registro" )
      :SetPara(              alltrim( cSay[6] ) )
      :SetAsunto(            "Registro de gestool." )
      :cGetMensaje           := "Su petición de registro está siendo procesada. En breve nos pondremos en contacto con usted "
      :cGetMensaje           += "para finalizar el proceso de registro." + "<br>"
      :cGetMensaje           += "Puede ponerse en contacto con nosotros mediante email en registro@gestool.es; o en el teléfono 902 930 252" + "<br>"
      :cGetMensaje           += "de 09:00 a 15:00"





      :lExternalSend()

   end

   CursorWe()

   oDlg:Enable()

RETURN ( .T. )





Static FUNCTION FinishAplication()

   CursorWait()

   if !empty( cCodEmp() )
      WritePProString( "main", "Ultima Empresa", cCodEmp(), cIniAplication() )
   end



   stopServices()



   closeWebBrowser()



   TAcceso():End()

   TBandera():Destroy()

   freeResources()

   cursorWE()

   checkRes()



RETURN nil



Static FUNCTION addMenu( oMenu, oTree )

   local n
   local cPrompt
   local oItem

   for n = 1 to len( oMenu:aItems )

      cPrompt     := oMenu:aItems[ n ]:cPrompt

      if ValType( oMenu:aItems[ n ]:bAction ) == "O"

         oItem    := oTree:add( strtran( cPrompt, "&", "" ) )
         addMenu( oMenu:aItems[ n ]:bAction, oItem )

      else

         if !empty( cPrompt )
            oItem := oTree:add( strtran( cPrompt, "&", "" ) )
         end

      endif

   next

RETURN .T.



static FUNCTION nLeft( oMsgBar )

   local n
   local nLen  := Len( oMsgBar:aItems )
   local nPos  := oMsgBar:nRight - 3

   if nLen > 0
      for n := 1 to nLen
         nPos -= ( oMsgBar:aItems[ n ]:nWidth + 4 )
      next
   end

RETURN nPos



STATIC PROCEDURE GoToWeb()

   WinExec( "Start " + "http://www.gestool.es", 0 )

RETURN



static FUNCTION WndPaint( hDC, oWnd )

   local oBlock

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      if !empty( oWnd ) .AND. !empty( oWnd:oWndClient )

         if len( oWnd:oWndClient:aWnd ) > 0
            aTail( oWnd:oWndClient:aWnd ):SetFocus()
         end

      end

   RECOVER

   end

   ErrorBlock( oBlock )

RETURN nil



FUNCTION cNbrUsr( cNbr )

   if cNbr <> nil .AND. oMsgUser <> nil
      oMsgUser:SetText( "Usuario : " + RTrim( cNbr ) )
   end

RETURN cNbr



FUNCTION cCajUsr( cCaj )

   if !empty( cCaj ) .AND. oMsgCaja <> nil
      oMsgCaja:SetText( "Caja : " + RTrim( cCaj ) )
   end

RETURN ( cCaj )



FUNCTION cDlgUsr( cDlg )

   if cDlg <> nil .AND. oMsgDelegacion <> nil
      oMsgDelegacion:SetText( "Delegación : " + RTrim( cDlg ) )
   end

RETURN ( cDlg )



FUNCTION EnableAcceso()

RETURN ( nil )



FUNCTION DisableAcceso()

RETURN ( nil )



FUNCTION CreateAcceso( oWnd )

   local oAcceso
   local oGrupo

   local oItem
   local oItemArchivo
   local oItemCompras
   local oItemAlmacen
   local oItemProduccion
   local oItemExpediente
   local oItemVentas
   local oItemTpv
   local oItemHerramientas
   local oItemAyudas
   local oItemReporting
   local oItemSQL

   oAcceso              := TAcceso():New()

   oItemArchivo         := oAcceso:Add()
   oItemArchivo:cPrompt := "ARCHIVOS"
   oItemArchivo:cBmp    := "gc_folder_open_16"
   oItemArchivo:cBmpBig := "gc_folder_open_32"
   oItemArchivo:lShow   := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:nLittleItems  := 1
   oGrupo:cPrompt       := "Inicio"
   oGrupo:cLittleBitmap := "gc_clock_16"
   oGrupo:cBigBitmap    := "gc_clock_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Gestión de cartera"
   oItem:cMessage       := "Gestión de cartera"
   oItem:bAction        := {|| PageIni( "gestion_de_cartera", oWnd() ) }
   oItem:cId            := "gestion_de_cartera"
   oItem:cBmp           := "gc_briefcase_16"
   oItem:cBmpBig        := "gc_briefcase_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Iniciar sesión"
   oItem:cMessage       := "Inicia una nueva sesión de trabajo"
   oItem:bAction        := {|| ChkTurno( "iniciar_sesion", oWnd() ) }
   oItem:cId            := "iniciar_sesion"
   oItem:cBmp           := "gc_clock_play_16"
   oItem:cBmpBig        := "gc_clock_play_32"
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Arqueo parcial (X)"
   oItem:cMessage       := "Inicia una nueva sesión de trabajo"
   oItem:bAction        := {|| CloseTurno( "arqueo_parcial", oWnd(), .T. ) }
   oItem:cId            := "arqueo_parcial"
   oItem:cBmp           := "gc_clock_refresh_16"
   oItem:cBmpBig        := "gc_clock_refresh_32"
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cerrar sesión (Z)"
   oItem:cMessage       := "Cierra la sesión de trabajo actual"
   oItem:bAction        := {|| CloseTurno( "cerrar_sesion", oWnd() ) }
   oItem:cId            := "cerrar_sesion"
   oItem:cBmp           := "gc_clock_stop_16"
   oItem:cBmpBig        := "gc_clock_stop_32"
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Sesiones"
   oItem:cMessage       := "Sesiones de trabajo"
   oItem:bAction        := {|| Turnos( "sesiones" ) }
   oItem:cId            := "sesiones"
   oItem:cBmp           := "gc_clock_16"
   oItem:cBmpBig        := "gc_clock_32"

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Empresa"
   oGrupo:cLittleBitmap := "gc_factory_16"
   oGrupo:cBigBitmap    := "gc_factory_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Empresa"
   oItem:cMessage       := "Acceso al fichero de empresas"
   oItem:bAction        := {|| Empresa( "empresa" ) }
   oItem:cId            := "empresa"
   oItem:cBmp           := "gc_factory_16"
   oItem:cBmpBig        := "gc_factory_32"
   oItem:lShow          := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Configurar empresa"
   oItem:cMessage       := "Configurar empresa en curso"
   oItem:bAction        := {|| ConfEmpresa( "configurar_empresa" ) }
   oItem:cId            := "configurar_empresa"
   oItem:cBmp           := "gc_wrench_16"
   oItem:cBmpBig        := "gc_wrench_32"
   oItem:lShow          := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 4
   oGrupo:nLittleItems  := 3
   oGrupo:cPrompt       := "Artículos"
   oGrupo:cLittleBitmap := "gc_object_cube_16"
   oGrupo:cBigBitmap    := "gc_object_cube_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Grupos de familias"
   oItem:cMessage       := "Acceso al fichero de grupos de familias"
   oItem:bAction        := {|| TGrpFam():New( cPatEmp(), oWnd(), "grupos_de_familias" ):Play() }
   oItem:cId            := "grupos_de_familias"
   oItem:cBmp           := "gc_folder_cubes_16"
   oItem:cBmpBig        := "gc_folder_cubes_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Familias"
   oItem:cMessage       := "Acceso al fichero de familias"
   oItem:bAction        := {|| Familia( "familias", oWnd() ) }
   oItem:cId            := "familias"
   oItem:cBmp           := "gc_cubes_16"
   oItem:cBmpBig        := "gc_cubes_32"
   oItem:lShow          := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Artículos"
   oItem:cMessage       := "Acceso al fichero de artículo"
   oItem:bAction        := {|| Articulo( "articulos", oWnd ) }
   oItem:cId            := "articulos"
   oItem:cBmp           := "gc_object_cube_16"
   oItem:cBmpBig        := "gc_object_cube_32"
   oItem:lShow          := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cambiar escandallos"
   oItem:cMessage       := "Cambia escandallos"
   oItem:bAction        := {|| TChgCode():New( "cambiar_escandallos", oWnd ):Resource() }
   oItem:cId            := "cambiar_escandallos"
   oItem:cBmp           := "gc_pieces_16"
   oItem:cBmpBig        := "gc_pieces_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Fabricantes"
   oItem:cMessage       := "Clasificación de artículos por fabricantes"
   oItem:bAction        := {|| TFabricantes():New( cPatEmp(), oWnd, "fabricantes" ):Activate() }
   oItem:cId            := "fabricantes"
   oItem:cBmp           := "gc_bolt_16"
   oItem:cBmpBig        := "gc_bolt_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Comentarios"
   oItem:cMessage       := "Acceso a los comentarios de los artículos"
   oItem:bAction        := {|| TComentarios():New( cPatEmp(), cDriver(), oWnd, "comentarios" ):Activate() }
   oItem:cId            := "comentarios"
   oItem:cBmp           := "gc_message_16"
   oItem:cBmpBig        := "gc_message_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Propiedades"
   oItem:cMessage       := "Acceso a las propiedades los artículos"
   oItem:bAction        := {|| Prop( "propiedades", oWnd ) }
   oItem:cId            := "propiedades"
   oItem:cBmp           := "gc_coathanger_16"
   oItem:cBmpBig        := "gc_coathanger_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Unidades medición"
   oItem:cMessage       := "Unidades de medición"
   oItem:bAction        := {|| UniMedicion():New( cPatEmp(), oWnd, "unidades_de_medicion" ):Activate() }
   oItem:cId            := "unidades_de_medicion"
   oItem:cBmp           := "gc_tape_measure2_16"
   oItem:cBmpBig        := "gc_tape_measure2_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos"
   oItem:cMessage       := "Clasificación de artículos por tipos"
   oItem:bAction        := {|| TTipArt():New( cPatEmp(), cDriver(), oWnd, "tipos" ):Activate() }
   oItem:cId            := "tipos"
   oItem:cBmp           := "gc_objects_16"
   oItem:cBmpBig        := "gc_objects_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := getConfigTraslation( "Temporadas" )
   oItem:cMessage       := "Acceso al fichero de " + getConfigTraslation( "temporadas" )
   oItem:bAction        := {|| Temporada( "temporadas", oWnd() ) }
   oItem:cId            := "temporadas"
   oItem:cBmp           := "gc_cloud_sun_16"
   oItem:cBmpBig        := "gc_cloud_sun_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Envasado"
   oItem:cMessage       := "Acceso al fichero de envasado"
   oItem:bAction        := {|| TFrasesPublicitarias():New():Activate( , , , "envasado" ) }
   oItem:cId            := "envasado"
   oItem:cBmp           := "gc_box_closed_16"
   oItem:cBmpBig        := "gc_box_closed_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Categorías"
   oItem:cMessage       := "Acceso al fichero de categorías"
   oItem:bAction        := {|| Categoria( "categorias", oWnd() ) }
   oItem:cId            := "categorias"
   oItem:cBmp           := "gc_photographic_filters_16"
   oItem:cBmpBig        := "gc_photographic_filters_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nLittleItems  := 1
   oGrupo:cPrompt       := "Tarifas"
   oGrupo:cLittleBitmap := "gc_symbol_percent_16"
   oGrupo:cBigBitmap    := "gc_symbol_percent_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tarifas de precios"
   oItem:cMessage       := "Acceso a las tarifas de precios"
   oItem:bAction        := {|| Tarifa( "tarifas_de_precios", oWnd ) }
   oItem:cId            := "tarifas_de_precios"
   oItem:cBmp           := "gc_symbol_percent_16"
   oItem:cBmpBig        := "gc_symbol_percent_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Ofertas"
   oItem:cMessage       := "Acceso a las ofertas de artículos"
   oItem:bAction        := {|| Oferta( "ofertas", oWnd ) }
   oItem:cId            := "ofertas"
   oItem:cBmp           := "gc_star2_16"
   oItem:cBmpBig        := "gc_star2_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Promociones"
   oItem:cMessage       := "Acceso a las promociones comerciales"
   oItem:bAction        := {|| Promocion( "promociones", oWnd ) }
   oItem:cId            := "promociones"
   oItem:cBmp           := "gc_star2_blue_16"
   oItem:cBmpBig        := "gc_star2_blue_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Búsquedas"
   oGrupo:cLittleBitmap := "gc_package_binocular_16"
   oGrupo:cBigBitmap    := "gc_package_binocular_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Búsqueda por series"
   oItem:cMessage       := "Búsqueda por series"
   oItem:bAction        := {|| TSeaNumSer():Activate( "busquedas_por_series", oWnd ) }
   oItem:cId            := "busquedas_por_series"
   oItem:cBmp           := "gc_package_binocular_16"
   oItem:cBmpBig        := "gc_package_binocular_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Búsqueda por lotes"
   oItem:cMessage       := "Búsqueda por lotes"
   oItem:bAction        := {|| TTrazarLote():Activate( "busqueda_por_lotes", oWnd ) }
   oItem:cId            := "busqueda_por_lotes"
   oItem:cBmp           := "gc_package_lupa_16"
   oItem:cBmpBig        := "gc_package_lupa_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .F.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Impuestos"
   oGrupo:cLittleBitmap := "gc_moneybag_16"
   oGrupo:cBigBitmap    := "gc_moneybag_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos de " + cImp()
   oItem:cMessage       := "Acceso a los tipos de " + cImp()
   oItem:bAction        := {|| Tiva( "tipos_de_impuestos", oWnd ) }
   oItem:cId            := "tipos_de_impuestos"
   oItem:cBmp           := "gc_moneybag_16"
   oItem:cBmpBig        := "gc_moneybag_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Impuestos especiales"
   oItem:cMessage       := "Impuestos especiales"
   oItem:bAction        := {|| NewImp( "impuestos_especiales", oWnd ) }
   oItem:cId            := "impuestos_especiales"
   oItem:cBmp           := "gc_moneybag_euro_16"
   oItem:cBmpBig        := "gc_moneybag_euro_32"
   oItem:lShow          := .F.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 5
   oGrupo:cPrompt       := "Pagos"
   oGrupo:cLittleBitmap := "gc_currency_euro_16"
   oGrupo:cBigBitmap    := "gc_currency_euro_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Divisas monetarias"
   oItem:cMessage       := "Acceso a divisas monetarias"
   oItem:bAction        := {|| Divisas( "divisas_monetarias", oWnd ) }
   oItem:cId            := "divisas_monetarias"
   oItem:cBmp           := "gc_currency_euro_16"
   oItem:cBmpBig        := "gc_currency_euro_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Bancos"
   oItem:cMessage       := "Acceso a las entidades bancarias"
   oItem:bAction        := {|| TBancos():New( cPatEmp(), oWnd, "bancos" ):Activate() }
   oItem:cId            := "bancos"
   oItem:cBmp           := "gc_central_bank_euro_16"
   oItem:cBmpBig        := "gc_central_bank_euro_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cuentas bancarias"
   oItem:cMessage       := "Acceso a las cuentas bancarias"
   oItem:bAction        := {|| TCuentasBancarias():New( cPatEmp(), oWnd, "cuentas_bancarias" ):Activate() }
   oItem:cId            := "cuentas_bancarias"
   oItem:cBmp           := "gc_central_bank_euro_text_16"
   oItem:cBmpBig        := "gc_central_bank_euro_text_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Formas de pago"
   oItem:cMessage       := "Acceso a formas de pago"
   oItem:bAction        := {|| Fpago( "formas_de_pago", oWnd ) }
   oItem:cId            := "formas_de_pago"
   oItem:cBmp           := "gc_credit_cards_16"
   oItem:cBmpBig        := "gc_credit_cards_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cuentas de remesas"
   oItem:cMessage       := "Acceso a las cuentas de remesas"
   oItem:bAction        := {|| TCtaRem():New( cPatEmp(), cDriver(), oWnd, "cuentas_de_remesas" ):Activate() }
   oItem:cId            := "cuentas_de_remesas"
   oItem:cBmp           := "gc_portfolio_folder_16"
   oItem:cBmpBig        := "gc_portfolio_folder_32"
   oItem:lShow          := .F.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 9
   oGrupo:cPrompt       := "Global"
   oGrupo:cLittleBitmap := "gc_folder2_16"
   oGrupo:cBigBitmap    := "gc_folder2_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cajas"
   oItem:cMessage       := "Acceso a las cajas"
   oItem:bAction        := {|| Cajas( "cajas", oWnd ) }
   oItem:cId            := "cajas"
   oItem:cBmp           := "gc_cash_register_16"
   oItem:cBmpBig        := "gc_cash_register_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Centro de costes"
   oItem:cMessage       := "Acceso al centro de coste"
   oItem:bAction        := {|| TCentroCoste():New( cPatDat(), cDriver(), oWnd, "centro_de_costes" ):Activate() }
   oItem:cId            := "centro_de_costes"
   oItem:cBmp           := "gc_folder_open_money_16"
   oItem:cBmpBig        := "gc_folder_open_money_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Paises"
   oItem:cMessage       := "Acceso a los paises"
   oItem:bAction        := {|| TPais():New( cPatDat(), cDriver(), oWnd, "paises" ):Activate() }
   oItem:cId            := "paises"
   oItem:cBmp           := "gc_globe_16"
   oItem:cBmpBig        := "gc_globe_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Códigos postales"
   oItem:cMessage       := "Acceso a códigos postales"
   oItem:bAction        := {|| CodigosPostales():New( cPatDat(), , oWnd, "codigos_postales" ):Activate() }
   oItem:cId            := "codigos_postales"
   oItem:cBmp           := "gc_postage_stamp_16"
   oItem:cBmpBig        := "gc_postage_stamp_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Provincias"
   oItem:cMessage       := "Acceso a provincias"
   oItem:bAction        := {|| Provincias():New( cPatDat(), , oWnd, "provincias" ):Activate() }
   oItem:cId            := "provincias"
   oItem:cBmp           := "gc_signpost_16"
   oItem:cBmpBig        := "gc_signpost_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Lenguajes"
   oItem:cMessage       := "Acceso a los lenguajes"
   oItem:bAction        := {|| TLenguaje():New( cPatDat(), , oWnd, "lenguajes" ):Activate() }
   oItem:cId            := "lenguajes"
   oItem:cBmp           := "gc_user_message_16"
   oItem:cBmpBig        := "gc_user_message_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Transportistas"
   oItem:cMessage       := "Acceso a los transportistas"
   oItem:bAction        := {|| Ttrans():New( cPatEmp(), oWnd, "transportistas" ):Activate() }
   oItem:cId            := "transportistas"
   oItem:cBmp           := "gc_small_truck_16"
   oItem:cBmpBig        := "gc_small_truck_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Situaciones"
   oItem:cMessage       := "Acceso a los tipos de situaciones"
   oItem:bAction        := {|| Situaciones( "situaciones", oWnd ) }
   oItem:cId            := "situaciones"
   oItem:cBmp           := "gc_document_attachment_16"
   oItem:cBmpBig        := "gc_document_attachment_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos de impresoras"
   oItem:cMessage       := "Acceso a los tipos de impresoras"
   oItem:bAction        := {|| TipoImpresoras( "tipos_de_impresoras", oWnd ) }
   oItem:cId            := "tipos_de_impresoras"
   oItem:cBmp           := "gc_printer2_16"
   oItem:cBmpBig        := "gc_printer2_32"
   oItem:lShow          := .F.



   if IsStandard()

   oItemCompras         := oAcceso:Add()
   oItemCompras:cPrompt := "COMPRAS"
   oItemCompras:cBmp    := "gc_folder_open_16"
   oItemCompras:cBmpBig := "gc_folder_open_32"
   oItemCompras:lShow   := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Proveedores"
   oGrupo:cLittleBitmap := "gc_businessmen2_16"
   oGrupo:cBigBitmap    := "gc_businessmen2_32"

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Grupos"
   oItem:cMessage       := "Acceso a los grupos de proveedores"
   oItem:bAction        := {|| TGrpPrv():New( cPatEmp(), oWnd, "grupos" ):Activate() }
   oItem:cId            := "grupos"
   oItem:cBmp           := "gc_businessmen2_16"
   oItem:cBmpBig        := "gc_businessmen2_32"
   oItem:lShow          := .F.

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Proveedores"
   oItem:cMessage       := "Acceso a los proveedores"
   oItem:bAction        := {|| Provee( "proveedores", oWnd ) }
   oItem:cId            := "proveedores"
   oItem:cBmp           := "gc_businessman_16"
   oItem:cBmpBig        := "gc_businessman_32"
   oItem:lShow          := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 5
   oGrupo:cPrompt       := "Compras"
   oGrupo:cLittleBitmap := "gc_document_text_businessman_16"
   oGrupo:cBigBitmap    := "gc_document_text_businessman_32"

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Pedidos"
   oItem:cMessage       := "Acceso a los pedidos de proveedores"
   oItem:bAction        := {|| PedPrv( "pedidos_de_proveedores", oWnd ) }
   oItem:cId            := "pedidos_de_proveedores"
   oItem:cBmp           := "gc_clipboard_empty_businessman_16"
   oItem:cBmpBig        := "gc_clipboard_empty_businessman_32"
   oItem:lShow          := .F.

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Albaranes"
   oItem:cMessage       := "Acceso a los albaranes de proveedores"
   oItem:bAction        := {|| AlbPrv( "albaranes_de_proveedores", oWnd ) }
   oItem:cId            := "albaranes_de_proveedores"
   oItem:cBmp           := "gc_document_empty_businessman_16"
   oItem:cBmpBig        := "gc_document_empty_businessman_32"
   oItem:lShow          := .F.

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Facturas"
   oItem:cMessage       := "Acceso a las facturas de proveedores"
   oItem:bAction        := {|| FacPrv( "facturas_de_proveedores", oWnd ) }
   oItem:cId            := "facturas_de_proveedores"
   oItem:cBmp           := "gc_document_text_businessman_16"
   oItem:cBmpBig        := "gc_document_text_businessman_32"
   oItem:lShow          := .T.

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Facturas rectificativas"
   oItem:cMessage       := "Acceso a las facturas rectificativas de proveedores"
   oItem:bAction        := {|| RctPrv( "rectificativas_de_proveedores", oWnd ) }
   oItem:cId            := "rectificativas_de_proveedores"
   oItem:cBmp           := "gc_document_text_delete2_16"
   oItem:cBmpBig        := "gc_document_text_delete2_32"
   oItem:lShow          := .F.

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Pagos"
   oItem:cMessage       := "Acceso a los pagos a proveedores"
   oItem:bAction        := {|| RecPrv( "pagos_a_proveedores", oWnd ) }
   oItem:cId            := "pagos_a_proveedores"
   oItem:cBmp           := "gc_briefcase2_businessman_16"
   oItem:cBmpBig        := "gc_briefcase2_businessman_32"
   oItem:lShow          := .T.



   oItemAlmacen         := oAcceso:Add()
   oItemAlmacen:cPrompt := "ALMACENES"
   oItemAlmacen:cBmp    := "gc_folder_open_16"
   oItemAlmacen:cBmpBig := "gc_folder_open_32"
   oItemAlmacen:lShow   := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Almacenes"
   oGrupo:cLittleBitmap := "gc_package_16"
   oGrupo:cBigBitmap    := "gc_package_16"

   oItem                := oItemAlmacen:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Almacenes"
   oItem:cMessage       := "Acceso a los almacenes"
   oItem:bAction        := {|| Almacen( "almacenes", oWnd ) }
   oItem:cId            := "almacenes"
   oItem:cBmp           := "gc_package_16"
   oItem:cBmpBig        := "gc_package_32"
   oItem:lShow          := .F.

   oItem                := oItemAlmacen:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Movimientos almacén"
   oItem:cMessage       := "Acceso a los movimientos de almacén"
   oItem:bAction        := {|| RemMovAlm( "movimientos_de_almacen", oWnd ) }
   oItem:cId            := "movimientos_de_almacen"
   oItem:cBmp           := "gc_pencil_package_16"
   oItem:cBmpBig        := "gc_pencil_package_32"
   oItem:lShow          := .F.

   end



   if IsProfesional()

   oItemProduccion            := oAcceso:Add()
   oItemProduccion:cPrompt    := "PRODUCCIÓN"
   oItemProduccion:cBmp       := "gc_folder_open_16"
   oItemProduccion:cBmpBig    := "gc_folder_open_32"
   oItemProduccion:lShow      := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 7
   oGrupo:cPrompt       := "Estructura"
   oGrupo:cLittleBitmap := "gc_worker_group_16"
   oGrupo:cBigBitmap    := "gc_worker_group_32"

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Secciones"
   oItem:cMessage       := "Acceso a las secciones de producción"
   oItem:bAction        := {|| TSeccion():New( cPatEmp(), cDriver(), oWnd, "secciones" ):Activate() }
   oItem:cId            := "secciones"
   oItem:cBmp           := "gc_worker_group_16"
   oItem:cBmpBig        := "gc_worker_group_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Operarios"
   oItem:cMessage       := "Acceso a los operarios"
   oItem:bAction        := {|| TOperarios():New( cPatEmp(), cDriver(), oWnd, "operarios" ):Activate() }
   oItem:cId            := "operarios"
   oItem:cBmp           := "gc_worker2_16"
   oItem:cBmpBig        := "gc_worker2_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos de horas"
   oItem:cMessage       := "Acceso a tipos de horas de producción"
   oItem:bAction        := {|| THoras():New( cPatEmp(), cDriver(), oWnd, "tipos_de_horas" ):Activate() }
   oItem:cId            := "tipos_de_horas"
   oItem:cBmp           := "gc_worker2_clock_16"
   oItem:cBmpBig        := "gc_worker2_clock_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Operaciones"
   oItem:cMessage       := "Acceso a las operaciones"
   oItem:bAction        := {|| TOperacion():New( cPatEmp(), cDriver(), oWnd, "operaciones" ):Activate() }
   oItem:cId            := "operaciones"
   oItem:cBmp           := "gc_worker2_hammer_16"
   oItem:cBmpBig        := "gc_worker2_hammer_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos de operaciones"
   oItem:cMessage       := "Acceso a tipos de operaciones"
   oItem:bAction        := {|| TTipOpera():New( cPatEmp(), cDriver(), oWnd, "tipos_de_operaciones" ):Activate() }
   oItem:cId            := "tipos_de_operaciones"
   oItem:cBmp           := "gc_folder_open_worker_16"
   oItem:cBmpBig        := "gc_folder_open_worker_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Maquinaria"
   oItem:cMessage       := "Acceso a la maquinaria"
   oItem:bAction        := {|| StartTMaquina() }
   oItem:cId            := "maquinaria"
   oItem:cBmp           := "gc_industrial_robot_16"
   oItem:cBmpBig        := "gc_industrial_robot_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Costes de maquinaria"
   oItem:cMessage       := "Acceso a los costes de la maquinaria"
   oItem:bAction        := {|| TCosMaq():New( cPatEmp(), cDriver(), oWnd, "costes_maquinaria" ):Activate() }
   oItem:cId            := "costes_maquinaria"
   oItem:cBmp           := "gc_industrial_robot_money_16"
   oItem:cBmpBig        := "gc_industrial_robot_money_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Producción"
   oGrupo:cLittleBitmap := "gc_document_text_worker_16"
   oGrupo:cBigBitmap    := "gc_document_text_worker_32"

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Partes de producción"
   oItem:cMessage       := "Acceso a los partes de producción"
   oItem:bAction        := {|| StartTProduccion( cDriver()) }
   oItem:cId            := "partes_de_produccion"
   oItem:cBmp           := "gc_document_text_worker_16"
   oItem:cBmpBig        := "gc_document_text_worker_32"
   oItem:lShow          := .F.

   oItem                := oItemProduccion:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Costos mano obra"
   oItem:cMessage       := "Actualiza costos de mano de obra"
   oItem:bAction        := {|| ActualizaCosto():Activate( "costos_mano_obra", oWnd ) }
   oItem:cId            := "costos_mano_obra"
   oItem:cBmp           := "gc_worker2_money_16"
   oItem:cBmpBig        := "gc_worker2_money_32"
   oItem:lShow          := .F.

   end



   if IsProfesional()

   oItemExpediente            := oAcceso:Add()
   oItemExpediente:cPrompt    := "EXPEDIENTES"
   oItemExpediente:cBmp       := "gc_folder_open_16"
   oItemExpediente:cBmpBig    := "gc_folder_open_32"
   oItemExpediente:lShow      := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 5
   oGrupo:cPrompt       := "Expedientes"
   oGrupo:cLittleBitmap := "gc_folder_document_16"
   oGrupo:cBigBitmap    := "gc_folder_document_32"

   oItem                := oItemExpediente:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipo expediente"
   oItem:cMessage       := "Acceso a los tipos de expedientes"
   oItem:bAction        := {|| StartTTipoExpediente() }
   oItem:cId            := "tipo_expediente"
   oItem:cBmp           := "gc_folders_16"
   oItem:cBmpBig        := "gc_folders_32"
   oItem:lShow          := .F.

   oItem                := oItemExpediente:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Entidades"
   oItem:cMessage       := "Acceso a las distintas entidades"
   oItem:bAction        := {|| TEntidades():New( cPatEmp(), cDriver(), oWnd, "entidades" ):Activate() }
   oItem:cId            := "entidades"
   oItem:cBmp           := "gc_office_building2_16"
   oItem:cBmpBig        := "gc_office_building2_32"
   oItem:lShow          := .F.

   oItem                := oItemExpediente:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Colaboradores"
   oItem:cMessage       := "Acceso a la tabla de colaboradores"
   oItem:bAction        := {|| TColaboradores():New( cPatEmp(), cDriver(), oWnd, "colaboradores" ):Activate() }
   oItem:cId            := "colaboradores"
   oItem:cBmp           := "gc_users_relation_16"
   oItem:cBmpBig        := "gc_users_relation_32"
   oItem:lShow          := .F.

   oItem                := oItemExpediente:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Actuaciones"
   oItem:cMessage       := "Acceso a la tabla de actuaciones"
   oItem:bAction        := {|| TActuaciones():New( cPatEmp(), cDriver(), oWnd, "actuaciones" ):Activate() }
   oItem:cId            := "actuaciones"
   oItem:cBmp           := "gc_power_drill2_16"
   oItem:cBmpBig        := "gc_power_drill2_32"
   oItem:lShow          := .F.

   oItem                := oItemExpediente:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Expedientes"
   oItem:cMessage       := "Acceso a los expedientes"
   oItem:bAction        := {|| StartTExpediente() }
   oItem:cId            := "expedientes"
   oItem:cBmp           := "gc_folder_document_16"
   oItem:cBmpBig        := "gc_folder_document_32"
   oItem:lShow          := .F.

   end



   oItemVentas          := oAcceso:Add()
   oItemVentas:cPrompt  := "VENTAS"
   oItemVentas:cBmp     := "gc_folder_open_16"
   oItemVentas:cBmpBig  := "gc_folder_open_32"
   oItemVentas:lShow    := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := If( IsProfesional(), 7, 4 )
   oGrupo:cPrompt       := "Clientes"
   oGrupo:cLittleBitmap := "gc_user_16"
   oGrupo:cBigBitmap    := "gc_user_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Grupos"
   oItem:cMessage       := "Acceso a los grupos de clientes"
   oItem:bAction        := {|| TGrpCli():New( cPatEmp(), cDriver(), oWnd, "grupos_de_clientes" ):Activate() }
   oItem:cId            := "grupos_de_clientes"
   oItem:cBmp           := "gc_users3_16"
   oItem:cBmpBig        := "gc_users3_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Rutas"
   oItem:cMessage       := "Acceso a las rutas de clientes"
   oItem:bAction        := {|| Ruta( "rutas_de_clientes", oWnd ) }
   oItem:cId            := "rutas_de_clientes"
   oItem:cBmp           := "gc_signpost2_16"
   oItem:cBmpBig        := "gc_signpost2_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Clientes"
   oItem:cMessage       := "Acceso a los clientes"
   oItem:bAction        := {|| Client( "clientes", oWnd ) }
   oItem:cId            := "clientes"
   oItem:cBmp           := "gc_user_16"
   oItem:cBmpBig        := "gc_user_32"
   oItem:lShow          := .T.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Agentes"
   oItem:cMessage       := "Acceso a los agentes"
   oItem:bAction        := {|| Agentes( "agentes", oWnd ) }
   oItem:cId            := "agentes"
   oItem:cBmp           := "gc_businessman2_16"
   oItem:cBmpBig        := "gc_businessman2_32"
   oItem:lShow          := .F.

   if IsProfesional()

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Programa de fidelización"
   oItem:cMessage       := "Acceso al programa de fidelización"
   oItem:bAction        := {|| StartTFideliza() }
   oItem:cId            := "programa_de_fidelizacion"
   oItem:cBmp           := "gc_id_card_16"
   oItem:cBmpBig        := "gc_id_card_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Grupo de plantillas"
   oItem:cMessage       := "Acceso a grupos de plantillas automáticas"
   oItem:bAction        := {|| TGrpFacturasAutomaticas():New( cPatEmp(), oWnd, "grupo_de_plantillas" ):Activate() }
   oItem:cId            := "grupo_de_plantillas"
   oItem:cBmp           := "gc_folder_gear_16"
   oItem:cBmpBig        := "gc_folder_gear_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Plantillas automáticas"
   oItem:cMessage       := "Acceso a plantillas de ventas automáticas"
   oItem:bAction        := {|| StartTFacAutomatica() }
   oItem:cId            := "plantillas_automaticas"
   oItem:cBmp           := "gc_document_text_gear_16"
   oItem:cBmpBig        := "gc_document_text_gear_32"
   oItem:lShow          := .F.

   end



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 7
   oGrupo:cPrompt       := "Ventas"
   oGrupo:cLittleBitmap := "gc_notebook_user_16"
   oGrupo:cBigBitmap    := "gc_notebook_user_32"

   if IsStandard()

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "S.A.T."
   oItem:cMessage       := "Acceso al S.A.T. de clientes"
   oItem:bAction        := {|| SatCli( "sat_de_clientes", oWnd ) }
   oItem:cId            := "sat_de_clientes"
   oItem:cBmp           := "gc_power_drill_sat_user_16"
   oItem:cBmpBig        := "gc_power_drill_sat_user_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Presupuesto"
   oItem:cMessage       := "Acceso a los presupuestos de clientes"
   oItem:bAction        := {|| PreCli( "presupuestos_de_clientes", oWnd ) }
   oItem:cId            := "presupuestos_de_clientes"
   oItem:cBmp           := "gc_notebook_user_16"
   oItem:cBmpBig        := "gc_notebook_user_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Pedidos"
   oItem:cMessage       := "Acceso a los pedidos de clientes"
   oItem:bAction        := {|| PedCli( "pedidos_de_clientes", oWnd ) }
   oItem:cId            := "pedidos_de_clientes"
   oItem:cBmp           := "gc_clipboard_empty_user_16"
   oItem:cBmpBig        := "gc_clipboard_empty_user_32"
   oItem:lShow          := .F.

   end

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Albaranes"
   oItem:cMessage       := "Acceso a los albaranes de clientes"
   oItem:bAction        := {|| AlbCli( "albaranes_de_clientes", oWnd ) }
   oItem:cId            := "albaranes_de_clientes"
   oItem:cBmp           := "gc_document_empty_16"
   oItem:cBmpBig        := "gc_document_empty_32"
   oItem:lShow          := .T.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Facturas"
   oItem:cMessage       := "Acceso a las facturas de clientes"
   oItem:bAction        := {|| FactCli( "facturas_de_clientes", oWnd ) }
   oItem:cId            := "facturas_de_clientes"
   oItem:cBmp           := "gc_document_text_user_16"
   oItem:cBmpBig        := "gc_document_text_user_32"
   oItem:lShow          := .T.

   if IsStandard()

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Facturas rectificativas"
   oItem:cMessage       := "Acceso a las facturas rectificativas de clientes"
   oItem:bAction        := {|| FacRec( "rectificativas_de_clientes", oWnd ) }
   oItem:cId            := "rectificativas_de_clientes"
   oItem:cBmp           := "gc_document_text_delete_16"
   oItem:cBmpBig        := "gc_document_text_delete_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Prepara pedidos"
   oItem:cMessage       := "Acceso a preparar los pedidos de clientes"
   oItem:bAction        := {|| TPrepareOrderQR():run( oWnd ) }
   oItem:cId            := "prepara_pedido"
   oItem:cBmp           := "GC_BARCODE_SCANNER_16"
   oItem:cBmpBig        := "GC_BARCODE_SCANNER_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 3
   oGrupo:cPrompt       := "Cobros"
   oGrupo:cLittleBitmap := "gc_briefcase2_user_16"
   oGrupo:cBigBitmap    := "gc_briefcase2_user_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Recibos"
   oItem:cMessage       := "Acceso a los recibos de clientes"
   oItem:bAction        := {|| RecCli( "recibos_de_clientes", oWnd ) }
   oItem:cId            := "recibos_de_clientes"
   oItem:cBmp           := "gc_briefcase2_user_16"
   oItem:cBmpBig        := "gc_briefcase2_user_32"
   oItem:lShow          := .T.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Remesas bancarias"
   oItem:cMessage       := "Acceso a las remesas bancarias"
   oItem:bAction        := {|| TRemesas():New( cPatEmp(), cDriver(), oWnd, "remesas_bancarias" ):Activate() }
   oItem:cId            := "remesas_bancarias"
   oItem:cBmp           := "gc_briefcase2_document_16"
   oItem:cBmpBig        := "gc_briefcase2_document_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Liquidación de agentes"
   oItem:cMessage       := "Acceso a las liquidaciones de agentes"
   oItem:bAction        := {|| StartTCobAge() }
   oItem:cId            := "liquidacion_de_agentes"
   oItem:cBmp           := "gc_briefcase2_agent_16"
   oItem:cBmpBig        := "gc_briefcase2_agent_32"
   oItem:lShow          := .T.

   end

   if IsOsCommerce()

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Comercio electrónico"
   oGrupo:cLittleBitmap := "gc_earth_money_16"
   oGrupo:cBigBitmap    := "gc_earth_money_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Comercio electrónico"
   oItem:cMessage       := "Comercio electrónico"
   oItem:bAction        := {|| TComercio():New():dialogActivate() }
   oItem:cId            := "comercio_electronico"
   oItem:cBmp           := "gc_earth_money_16"
   oItem:cBmpBig        := "gc_earth_money_32"
   oItem:lShow          := .F.

   end

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Cargas"
   oGrupo:cLittleBitmap := "gc_small_truck_user_16"
   oGrupo:cBigBitmap    := "gc_small_truck_user_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Orden de carga"
   oItem:cMessage       := "Acceso a los ordenes de carga"
   oItem:bAction        := {|| TOrdCarga():New( cPatEmp(), "orden_de_carga", oWnd ):Activate() }
   oItem:cId            := "orden_de_carga"
   oItem:cBmp           := "gc_small_truck_user_16"
   oItem:cBmpBig        := "gc_small_truck_user_32"
   oItem:lShow          := .F.






   oItemTpv             := oAcceso:Add()
   oItemTpv:cPrompt     := "T.P.V."
   oItemTpv:cBmp        := "gc_folder_open_16"
   oItemTpv:cBmpBig     := "gc_folder_open_32"
   oItemTpv:lShow       := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 7
   oGrupo:cPrompt       := "T.P.V."
   oGrupo:cLittleBitmap := "gc_cash_register_user_16"
   oGrupo:cBigBitmap    := "gc_cash_register_user_32"

   oItem                := oItemTpv:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "T.P.V."
   oItem:cMessage       := "Acceso a terminal punto de venta"
   oItem:bAction        := {|| FrontTpv( "terminal_punto_de_venta", oWnd ) }
   oItem:cId            := "terminal_punto_de_venta"
   oItem:cBmp           := "gc_cash_register_user_16"
   oItem:cBmpBig        := "gc_cash_register_user_32"
   oItem:lShow          := .T.

   oItem                := oItemTpv:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "T.P.V. táctil"
   oItem:cMessage       := "Acceso a terminal punto de venta táctil"
   oItem:bAction        := {|| TpvTactil():New():Activate() }
   oItem:cId            := "terminal_punto_de_venta_tactil"
   oItem:cBmp           := "gc_cash_register_touch_16"
   oItem:cBmpBig        := "gc_cash_register_touch_32"
   oItem:lShow          := .F.

   oItem                := oItemTpv:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Entradas y salidas"
   oItem:cMessage       := "Acceso a las entradas y salidas de caja"
   oItem:bAction        := {|| EntSal( "entradas_y_salidas", oWnd ) }
   oItem:cId            := "entradas_y_salidas"
   oItem:cBmp           := "gc_cash_register_refresh_16"
   oItem:cBmpBig        := "gc_cash_register_refresh_32"
   oItem:lShow          := .F.

   oItem                := oItemTpv:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Sala de ventas"
   oItem:cMessage       := "Sala de ventas"
   oItem:bAction        := {|| TTpvRestaurante():New( cPatEmp(), cDriver(), oWnd, "sala_de_ventas" ):Activate() }
   oItem:cId            := "sala_de_ventas"
   oItem:cBmp           := "gc_cup_16"
   oItem:cBmpBig        := "gc_cup_32"
   oItem:lShow          := .F.

   oItem                := oItemTpv:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Invitaciones"
   oItem:cMessage       := "Acceso a los tipos de invitaciones"
   oItem:bAction        := {|| TInvitacion():New( cPatEmp(), oWnd, "invitaciones" ):Activate() }
   oItem:cId            := "invitaciones"
   oItem:cBmp           := "gc_masks_16"
   oItem:cBmpBig        := "gc_masks_32"
   oItem:lShow          := .F.

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Ordenes de comanda"
   oItem:cMessage       := "Acceso a los comentarios de los artículos"
   oItem:bAction        := {|| TOrdenComanda():New( cPatEmp(), oWnd, "ordenes_de_comanda" ):Activate() }
   oItem:cId            := "ordenes_de_comanda"
   oItem:cBmp           := "gc_sort_az_descending_16"
   oItem:cBmpBig        := "gc_sort_az_descending_32"
   oItem:lShow          := .F.

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Menús"
   oItem:cMessage       := "Acceso a los menús"
   oItem:bAction        := {|| TpvMenu():New( cPatEmp(), oWnd, "menus" ):Activate() }
   oItem:cId            := "menus"
   oItem:cBmp           := "gc_clipboard_empty_16"
   oItem:cBmpBig        := "gc_clipboard_empty_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:nLittleItems  := 1
   oGrupo:cPrompt       := "Útiles"
   oGrupo:cLittleBitmap := "gc_window_pencil_16"
   oGrupo:cBigBitmap    := "gc_window_pencil_32"

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Capturas T.P.V."
   oItem:cMessage       := "Capturas T.P.V."
   oItem:bAction        := {|| TCaptura():New( cPatDat(), oWnd, "capturas" ):Activate() }
   oItem:cId            := "capturas"
   oItem:cBmp           := "gc_window_pencil_16"
   oItem:cBmpBig        := "gc_window_pencil_32"
   oItem:lShow          := .F.

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Balanzas"
   oItem:cMessage       := "Balanzas"
   oItem:bAction        := {|| ConfImpTiket( "balanzas", oWnd ) }
   oItem:cId            := "balanzas"
   oItem:cBmp           := "gc_balance_16"
   oItem:cBmpBig        := "gc_balance_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Configurar visor"
   oItem:cMessage       := "Configurar visor"
   oItem:bAction        := {|| ConfVisor( "visor", oWnd ) }
   oItem:cId            := "visor"
   oItem:cBmp           := "gc_odometer_screw_16"
   oItem:cBmpBig        := "gc_odometer_screw_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cajón portamonedas"
   oItem:cMessage       := "Cajón portamonedas"
   oItem:bAction        := {|| ConfCajPorta( "cajon_portamonedas", oWnd ) }
   oItem:cId            := "cajon_portamonedas"
   oItem:cBmp           := "gc_modem_screw_16"
   oItem:cBmpBig        := "gc_modem_screw_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.



   oItemHerramientas          := oAcceso:Add()
   oItemHerramientas:cPrompt  := "HERRAMIENTAS"
   oItemHerramientas:cBmp     := "gc_folder_open_16"
   oItemHerramientas:cBmpBig  := "gc_folder_open_32"
   oItemHerramientas:lShow    := .T.






































   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 4

   oGrupo:cPrompt       := "Usuarios, roles y permisos"
   oGrupo:cLittleBitmap := "gc_businesspeople_16"
   oGrupo:cBigBitmap    := "gc_businesspeople_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Usuarios"
   oItem:cMessage       := "Acceso a los usuarios del programa"
   oItem:bAction        := {|| TUsuarios():New( cPatDat(), oWnd, "usuarios" ):Activate() }
   oItem:cId            := "usuarios"
   oItem:cBmp           := "gc_businesspeople_16"
   oItem:cBmpBig        := "gc_businesspeople_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Roles"
   oItem:cMessage       := "Roles"
   oItem:bAction        := {|| TRoles():New( cPatDat(), oWnd, "usuarios_roles" ):Activate() }
   oItem:cId            := "usuarios_roles"
   oItem:cBmp           := "GC_ID_CARDS_16"
   oItem:cBmpBig        := "GC_ID_CARDS_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Permisos"
   oItem:cMessage       := "Permisos"
   oItem:bAction        := {|| TPermisos():New( cPatDat(), oWnd, "usuarios_permisos" ):Activate() }
   oItem:cId            := "usuarios_permisos"
   oItem:cBmp           := "GC_ID_BADGE_16"
   oItem:cBmpBig        := "GC_ID_BADGE_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Asistencia"
   oItem:cMessage       := "Registros de entradas diarias de usuarios"
   oItem:bAction        := {|| TAsistencias():New( cPatDat(), oWnd, "asistencia" ):Activate() }
   oItem:cId            := "asistencia"
   oItem:cBmp           := "server_id_card_16"
   oItem:cBmpBig        := "server_id_card_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 3

   oGrupo:cPrompt       := "Herramientas"
   oGrupo:cLittleBitmap := "gc_document_text_screw_16"
   oGrupo:cBigBitmap    := "gc_document_text_screw_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Documentos y etiquetas"
   oItem:cMessage       := "Configurar documentos y etiquetas"
   oItem:bAction        := {|| CfgDocs( "documentos_y_etiquetas", oWnd ) }
   oItem:cId            := "documentos_y_etiquetas"
   oItem:cBmp           := "gc_document_text_screw_16"
   oItem:cBmpBig        := "gc_document_text_screw_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Especificar impresora"
   oItem:cMessage       := "Especificar impresora por defecto"
   oItem:bAction        := {|| PrinterSetup() }
   oItem:cId            := "especificar_impresora"
   oItem:cBmp           := "gc_printer2_check_16"
   oItem:cBmpBig        := "gc_printer2_check_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Centro de contabilización"
   oItem:cMessage       := "Centro de contabilización"
   oItem:bAction        := {|| TTurno():Build( cPatEmp(), cDriver(), oWnd, "centro_de_contabilizacion" ) }
   oItem:cId            := "centro_de_contabilizacion"
   oItem:cBmp           := "gc_folders2_16"
   oItem:cBmpBig        := "gc_folders2_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 4
   oGrupo:cPrompt       := "Útiles"
   oGrupo:cLittleBitmap := "gc_notebook2_16"
   oGrupo:cBigBitmap    := "gc_notebook2_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Campos extra"
   oItem:cMessage       := "Acceso a los campos extra"
   oItem:bAction        := {|| CamposExtra( "campos_extra", oWnd ) }
   oItem:cId            := "campos_extra"
   oItem:cBmp           := "gc_form_plus2_16"
   oItem:cBmpBig        := "gc_form_plus2_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Agenda/ CRM"
   oItem:cMessage       := "Acceso a la agenda del usuario"
   oItem:bAction        := {|| TNotas():New( cPatDat(), , oWnd, "agenda" ):Activate() }
   oItem:cId            := "agenda"
   oItem:cBmp           := "gc_notebook2_16"
   oItem:cBmpBig        := "gc_notebook2_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Listín telefónico"
   oItem:cMessage       := "Acceso al listín telefónico"
   oItem:bAction        := {|| TAgenda():New( cPatDat(), , oWnd, "listin_telefonico" ):Activate() }
   oItem:cId            := "listin_telefonico"
   oItem:cBmp           := "gc_book_telephone_16"
   oItem:cBmpBig        := "gc_book_telephone_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Scripts"
   oItem:cMessage       := "Ejecutar scripts"
   oItem:bAction        := {|| TScripts():New( cPatEmp(), , oWnd, "scripts" ):Activate() }
   oItem:cId            := "scripts"
   oItem:cBmp           := "gc_code_line_16"
   oItem:cBmpBig        := "gc_code_line_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Archivos"
   oGrupo:cLittleBitmap := "gc_shield_16"
   oGrupo:cBigBitmap    := "gc_shield_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Regenerar índices"
   oItem:cMessage       := "Regenerar índices"
   oItem:bAction        := {|| Reindexa() }
   oItem:cId            := "regenerar_indices"
   oItem:cBmp           := "gc_recycle_16"
   oItem:cBmpBig        := "gc_recycle_32"
   oItem:lShow          := .T.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Copia seguridad"
   oItem:cMessage       := "Copia seguridad"
   oItem:bAction        := {|| TBackup():New( "copia_seguridad", oWnd ) }
   oItem:cId            := "copia_seguridad"
   oItem:cBmp           := "gc_shield_16"
   oItem:cBmpBig        := "gc_shield_32"
   oItem:lShow          := .T.

   if isProfesional()

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 7
   oGrupo:nLittleItems  := 1
   oGrupo:cPrompt       := "Exportaciones e importaciones"
   oGrupo:cLittleBitmap := "gc_satellite_dish2_16"
   oGrupo:cBigBitmap    := "gc_satellite_dish2_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Envío y recepción"
   oItem:cMessage       := "Envío y recepción de información a las delegaciones"
   oItem:bAction        := {|| TSndRecInf():New( "envio_y_recepcion", oWnd ):Activate() }
   oItem:cId            := "envio_y_recepcion"
   oItem:cBmp           := "gc_satellite_dish2_16"
   oItem:cBmpBig        := "gc_satellite_dish2_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Terminales"
   oItem:cMessage       := "Exportar e importar datos a terminales"
   oItem:bAction        := {|| TEdm():Activate( "terminales", oWnd ) }
   oItem:cId            := "terminales"
   oItem:cBmp           := "gc_pda_16"
   oItem:cBmpBig        := "gc_pda_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Pda"
   oItem:cMessage       := "Exportar e importar datos a pda"
   oItem:bAction        := {|| PdaEnvioRecepcionController():getInstance():Activate() }
   oItem:cId            := "pda"
   oItem:cBmp           := "gc_pda_16"
   oItem:cBmpBig        := "portable_barcode_scanner_yellow_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Factuplus®"
   oItem:cMessage       := "Imp. factuplus®"
   oItem:bAction        := {|| ImpFactu( "factuplus", oWnd ) }
   oItem:cId            := "factuplus"
   oItem:cBmp           := "gc_inbox_into_16"
   oItem:cBmpBig        := "gc_inbox_into_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Factucont®"
   oItem:cMessage       := "Imp. factucont®"
   oItem:bAction        := {|| ImpFacCom( "factucont", oWnd ) }
   oItem:cId            := "factucont"
   oItem:cBmp           := "gc_inbox_into_16"
   oItem:cBmpBig        := "gc_inbox_into_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tarifas artículos"
   oItem:cMessage       := "Importa tarifa de artículos desde Excel"
   oItem:bAction        := {|| TImpEstudio():New( "tarifa_articulos_excel", oWnd ):Activate() }
   oItem:cId            := "tarifa_articulos_excel"
   oItem:cBmp           := "gc_inbox_into_16"
   oItem:cBmpBig        := "gc_inbox_into_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Exportar Odoo"
   oItem:cMessage       := "Exportar Odoo"
   oItem:bAction        := {|| ExpOdoo( "factuplus", oWnd ) }
   oItem:cId            := "expodoo"
   oItem:cBmp           := "odoo_16"
   oItem:cBmpBig        := "odoo_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Duplica tarifa"
   oItem:cMessage       := "Duplica tarifa"
   oItem:bAction        := {|| DupTarifa( "duplicatarifa", oWnd ) }
   oItem:cId            := "duplicatarifa"
   oItem:cBmp           := "gc_symbol_percent_16"
   oItem:cBmpBig        := "gc_symbol_percent_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Importar WP"
   oItem:cMessage       := "Importar WP"
   oItem:bAction        := {|| ImpLatress( "importar_wp", oWnd ) }
   oItem:cId            := "impor_wp"
   oItem:cBmp           := "WordPress_16"
   oItem:cBmpBig        := "WordPress_32"
   oItem:lShow          := .F.

   if getPvProfString( "Gamma", "ViewGamma", ".F.", cIniAplication() ) == ".T."
   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Importar Gamma"
   oItem:cMessage       := "Importar Gamma"
   oItem:bAction        := {|| ImpGamma( "importar_gamma", oWnd ) }
   oItem:cId            := "imporgamma"
   oItem:cBmp           := "gamma_16"
   oItem:cBmpBig        := "gamma_32"
   oItem:lShow          := .F.
   end

   end

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 4
   oGrupo:cPrompt       := "Extras"
   oGrupo:cLittleBitmap := "gc_magic_wand_16"
   oGrupo:cBigBitmap    := "gc_magic_wand_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Actualizar precios"
   oItem:cMessage       := "Actualizar precios de tarifas"
   oItem:bAction        := {|| ChgTarifa( "actualizar_precios", oWnd ) }
   oItem:cId            := "actualizar_precios"
   oItem:cBmp           := "gc_table_selection_column_refresh_16"
   oItem:cBmpBig        := "gc_table_selection_column_refresh_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Configurar botones"
   oItem:cMessage       := "Configurar barra de botones"
   oItem:bAction        := {|| oWndBar():EditButtonBar( oWnd, "configurar_botones" ) }
   oItem:cId            := "configurar_botones"
   oItem:cBmp           := "gc_magic_wand_16"
   oItem:cBmpBig        := "gc_magic_wand_32"
   oItem:lShow          := .F.
   oItem:lHide          := .T.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Calculadora"
   oItem:cMessage       := "Ejecuta la calculadora de windows"
   oItem:bAction        := {|| WinExec( "Calc" ) }
   oItem:cId            := "calculadora"
   oItem:cBmp           := "gc_calculator_16"
   oItem:cBmpBig        := "gc_calculator_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Fecha trabajo"
   oItem:cMessage       := "Selecciona la fecha de trabajo"
   oItem:bAction        := {|| SelSysDate( "fecha_trabajo" ) }
   oItem:cId            := "fecha_trabajo"
   oItem:cBmp           := "gc_calendar_16"
   oItem:cBmpBig        := "gc_calendar_32"
   oItem:lShow          := .F.

















   oItemReporting          := oAcceso:Add()
   oItemReporting:cPrompt  := "INFORMES"
   oItemReporting:cBmp     := "gc_folder_open_16"
   oItemReporting:cBmpBig  := "gc_folder_open_32"
   oItemReporting:lShow    := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Informes"
   oGrupo:cLittleBitmap := "gc_lifebelt_16"
   oGrupo:cBigBitmap    := "gc_lifebelt_32"

   oItem                := oItemReporting:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Galería de informes"
   oItem:cMessage       := "Galería de informes"
   oItem:bAction        := {|| RunReportGalery() }
   oItem:cId            := "galeria_de_informes"
   oItem:cBmp           := "gc_cabinet_open_16"
   oItem:cBmpBig        := "gc_cabinet_open_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 5
   oGrupo:cPrompt       := "Informes personalizables"
   oGrupo:cLittleBitmap := "gc_object_cube_print_16"
   oGrupo:cBigBitmap    := "gc_object_cube_print_32"

   oItem                := oItemReporting:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Generales"
   oItem:cMessage       := "Informes generales"
   oItem:bAction        := {|| runFastGallery( "Generales" ) }
   oItem:cId            := "reporting_generales"
   oItem:cBmp           := "gc_cabinet_open_16"
   oItem:cBmpBig        := "gc_cabinet_open_32"
   oItem:lShow          := .F.

   oItem                := oItemReporting:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Artículos"
   oItem:cMessage       := "Informes realacionados con articulos"
   oItem:bAction        := {|| runFastGallery( "Articulos" ) }
   oItem:cId            := "reporting_articulos"
   oItem:cBmp           := "gc_object_cube_print_16"
   oItem:cBmpBig        := "gc_object_cube_print_32"
   oItem:lShow          := .F.

   oItem                := oItemReporting:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Clientes"
   oItem:cMessage       := "Informes realacionados con clientes"
   oItem:bAction        := {|| runFastGallery( "Clientes" ) }
   oItem:cId            := "reporting_clientes"
   oItem:cBmp           := "gc_user_print_16"
   oItem:cBmpBig        := "gc_user_print_32"
   oItem:lShow          := .F.

   oItem                := oItemReporting:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Proveedores"
   oItem:cMessage       := "Informes realacionados con proveedores"
   oItem:bAction        := {|| runFastGallery( "Proveedores" ) }
   oItem:cId            := "reporting_proveedores"
   oItem:cBmp           := "gc_businessman_print_16"
   oItem:cBmpBig        := "gc_businessman_print_32"
   oItem:lShow          := .F.

   oItem                := oItemReporting:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Producción"
   oItem:cMessage       := "Informes realacionados con la producción"
   oItem:bAction        := {|| runFastGallery( "Produccion" ) }
   oItem:cId            := "reporting_produccion"
   oItem:cBmp           := "gc_worker2_print_16"
   oItem:cBmpBig        := "gc_worker2_print_32"
   oItem:lShow          := .F.



   oItemAyudas          := oAcceso:Add()
   oItemAyudas:cPrompt  := "AYUDAS"
   oItemAyudas:cBmp     := "gc_folder_open_16"
   oItemAyudas:cBmpBig  := "gc_folder_open_32"
   oItemAyudas:lShow    := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 4
   oGrupo:cPrompt       := "Ayudas"
   oGrupo:cLittleBitmap := "gc_lifebelt_16"
   oGrupo:cBigBitmap    := "gc_lifebelt_32"

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Visitar web"
   oItem:cMessage       := "Visitar web"
   oItem:bAction        := {|| goWeb( "http://www.gestool.es" ) }
   oItem:cId            := "visitar_web"
   oItem:cBmp           := "gc_earth_16"
   oItem:cBmpBig        := "gc_earth_32"
   oItem:lShow          := .F.

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Acerca de..."
   oItem:cMessage       := "Datos sobre el autor"
   oItem:bAction        := {|| About() }
   oItem:cId            := "acerca_de"
   oItem:cBmp           := "gc_question_16"
   oItem:cBmpBig        := "gc_question_32"
   oItem:lShow          := .F.

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Asistencia remota"
   oItem:cMessage       := "Solicitar asistencia remota"
   oItem:bAction        := {|| RunAsistenciaRemota() }
   oItem:cId            := "asistencia_remota"
   oItem:cBmp           := "gc_user_headset_16"
   oItem:cBmpBig        := "gc_user_headset_32"
   oItem:lShow          := .F.

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Stock inicial"
   oItem:cMessage       := "Stock inicial"
   oItem:bAction        := {|| msgRun( "Creando el stock inicial", "Espere por favor...", {|| StocksModel():StockInit() } )  }
   oItem:cId            := "Stock inicial"
   oItem:cBmp           := "gc_user_headset_16"
   oItem:cBmpBig        := "gc_user_headset_32"
   oItem:lShow          := .F.

RETURN ( oAcceso )



FUNCTION CreateMainSQLAcceso( oWnd )

   local oAcceso
   local oGrupo

   local oItem
   local oItemArchivo
   local oItemCompras
   local oItemAlmacen
   local oItemProduccion
   local oItemExpediente
   local oItemVentas
   local oItemTpv
   local oItemHerramientas
   local oItemAyudas
   local oItemReporting
   local oItemSQL

   oAcceso              := TAcceso():New()

   oItemArchivo         := oAcceso:Add()
   oItemArchivo:cPrompt := "ARCHIVOS"
   oItemArchivo:cBmp    := "gc_folder_open_16"
   oItemArchivo:cBmpBig := "gc_folder_open_32"
   oItemArchivo:lShow   := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Inicio"
   oGrupo:cLittleBitmap := "gc_clock_16"
   oGrupo:cBigBitmap    := "gc_clock_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Sesiones"
   oItem:cMessage       := "Sesiones"
   oItem:bAction        := {||SesionesController():New():ActivateNavigatorView() }
   oItem:cId            := "sesiones"
   oItem:cBmp           := "gc_clock_16"
   oItem:cBmpBig        := "gc_clock_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Empresa"
   oGrupo:cLittleBitmap := "gc_factory_16"
   oGrupo:cBigBitmap    := "gc_factory_32"













   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:nLittleItems  := 3
   oGrupo:cPrompt       := "Artículos"
   oGrupo:cLittleBitmap := "gc_object_cube_16"
   oGrupo:cBigBitmap    := "gc_object_cube_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Familia de articulos"
   oItem:cMessage       := "Familia de articulos"
   oItem:bAction        := {|| ArticulosFamiliasController():New():ActivateNavigatorView() }
   oItem:cId            := "familias_articulos"
   oItem:cBmp           := "gc_cubes_16"
   oItem:cBmpBig        := "gc_cubes_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Artículos"
   oItem:cMessage       := "Artículos"
   oItem:bAction        := {|| ArticulosController():New():ActivateNavigatorView() }
   oItem:cId            := "articulos"
   oItem:cBmp           := "gc_object_cube_16"
   oItem:cBmpBig        := "gc_object_cube_32"
   oItem:lShow          := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Fabricantes"
   oItem:cMessage       := "Solicitar fabricante"
   oItem:bAction        := {|| ArticulosFabricantesController():New():ActivateNavigatorView() }
   oItem:cId            := "fabricantes"
   oItem:cBmp           := "gc_wrench_16"
   oItem:cBmpBig        := "gc_wrench_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Comentarios"
   oItem:cMessage       := "Solicitar comentario"
   oItem:bAction        := {|| ComentariosController():New():ActivateNavigatorView() }
   oItem:cId            := "comentarios"
   oItem:cBmp           := "gc_message_16"
   oItem:cBmpBig        := "gc_message_32"
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Propiedades"
   oItem:cMessage       := "Propiedades"
   oItem:bAction        := {|| PropiedadesController():New():ActivateNavigatorView() }
   oItem:cId            := "propiedades"
   oItem:cBmp           := "gc_coathanger_16"
   oItem:cBmpBig        := "gc_coathanger_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Unidades de medición"
   oItem:cMessage       := "Unidades de medición"
   oItem:bAction        := {|| UnidadesMedicionController():New():ActivateNavigatorView() }
   oItem:cId            := "unidades_medicion"
   oItem:cBmp           := "gc_tape_measure2_16"
   oItem:cBmpBig        := "gc_tape_measure2_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

      oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Grupos de unidades de medición"
   oItem:cMessage       := "Grupos de unidades de medición"
   oItem:bAction        := {|| UnidadesMedicionGruposController():New():ActivateNavigatorView() }
   oItem:cId            := "unidades_medicion_grupos"
   oItem:cBmp           := "gc_tape_measure2_16"
   oItem:cBmpBig        := "gc_tape_measure2_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos de artículo"
   oItem:cMessage       := "Tipos de artículo"
   oItem:bAction        := {|| ArticulosTipoController():New():ActivateNavigatorView() }
   oItem:cId            := "tipo_articulos"
   oItem:cBmp           := "gc_objects_16"
   oItem:cBmpBig        := "gc_objects_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Temporadas de artículo"
   oItem:cMessage       := "Temporadas de artículo"
   oItem:bAction        := {|| ArticulosTemporadasController():New():ActivateNavigatorView() }
   oItem:cId            := "empresa"
   oItem:cBmp           := "temporadas"
   oItem:cBmpBig        := "gc_cloud_sun_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Envasado"
   oItem:cMessage       := "Envasado"
   oItem:bAction        := {|| ArticulosEnvasadoController():New():ActivateNavigatorView() }
   oItem:cId            := "envasado_articulo"
   oItem:cBmp           := "gc_box_closed_16"
   oItem:cBmpBig        := "gc_box_closed_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Categorias de artículo"
   oItem:cMessage       := "Categorias de artículo"
   oItem:bAction        := {|| ArticulosCategoriasController():New():ActivateNavigatorView() }
   oItem:cId            := "categorias"
   oItem:cBmp           := "gc_photographic_filters_16"
   oItem:cBmpBig        := "gc_photographic_filters_32"
   oItem:lShow          := .F.
   oItem:lLittle        := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Tarifas"
   oGrupo:cLittleBitmap := "gc_symbol_percent_16"
   oGrupo:cBigBitmap    := "gc_symbol_percent_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tarifas"
   oItem:cMessage       := "Tarifas"
   oItem:bAction        := {|| ArticulosTarifasController():New():ActivateNavigatorView() }
   oItem:cId            := "tarifas"
   oItem:cBmp           := "gc_money_interest_16"
   oItem:cBmpBig        := "gc_money_interest_32"
   oItem:lShow          := .F.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Impuestos"
   oGrupo:cLittleBitmap := "gc_moneybag_16"
   oGrupo:cBigBitmap    := "gc_moneybag_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Tipos de IVA"
   oItem:cMessage       := "Tipos de IVA"
   oItem:bAction        := {|| TipoIvaController():New():ActivateNavigatorView() }
   oItem:cId            := "tipos_iva"
   oItem:cBmp           := "gc_moneybag_16"
   oItem:cBmpBig        := "gc_moneybag_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Impuestos especiales"
   oItem:cMessage       := "Impuestos especiales"
   oItem:bAction        := {|| ImpuestosEspecialesController():New():ActivateNavigatorView() }
   oItem:cId            := "impuestos_especiales"
   oItem:cBmp           := "gc_moneybag_euro_16"
   oItem:cBmpBig        := "gc_moneybag_euro_32"
   oItem:lShow          := .F.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 3
   oGrupo:cPrompt       := "Pagos"
   oGrupo:cLittleBitmap := "gc_currency_euro_16"
   oGrupo:cBigBitmap    := "gc_currency_euro_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Divisas monetarias"
   oItem:cMessage       := "Divisas monetarias"
   oItem:bAction        := {|| DivisasMonetariasController():New():ActivateNavigatorView() }
   oItem:cId            := "divisas"
   oItem:cBmp           := "gc_currency_euro_16"
   oItem:cBmpBig        := "gc_currency_euro_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Formas de pago"
   oItem:cMessage       := "Formas de pago"
   oItem:bAction        := {|| FormasPagosController():New():ActivateNavigatorView() }
   oItem:cId            := "forma_pago"
   oItem:cBmp           := "gc_credit_cards_16"
   oItem:cBmpBig        := "gc_credit_cards_32"
   oItem:lShow          := .F.

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cuentas de remesa"
   oItem:cMessage       := "Cuentas de remesa"
   oItem:bAction        := {|| CuentasRemesaController():New():ActivateNavigatorView() }
   oItem:cId            := "cuentas_remesas"
   oItem:cBmp           := "gc_notebook2_16"
   oItem:cBmpBig        := "gc_notebook2_32"
   oItem:lShow          := .F.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Global"
   oGrupo:cLittleBitmap := "gc_folder2_16"
   oGrupo:cBigBitmap    := "gc_folder2_32"

   oItem                := oItemArchivo:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Cajas"
   oItem:cMessage       := "Cajas"
   oItem:bAction        := {||CajasController():New():ActivateNavigatorView() }
   oItem:cId            := "cajas"
   oItem:cBmp           := "gc_cash_register_16"
   oItem:cBmpBig        := "gc_cash_register_32"
   oItem:lShow          := .F.



   oItemCompras         := oAcceso:Add()
   oItemCompras:cPrompt := "COMPRAS"
   oItemCompras:cBmp    := "gc_folder_open_16"
   oItemCompras:cBmpBig := "gc_folder_open_32"
   oItemCompras:lShow   := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Proveedores"
   oGrupo:cLittleBitmap := "gc_businessmen2_16"
   oGrupo:cBigBitmap    := "gc_businessmen2_32"

   oItem                := oItemCompras:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Proveedores"
   oItem:cMessage       := "Solicitar proveedor"
   oItem:bAction        := {|| ProveedoresController():New():ActivateNavigatorView() }
   oItem:cId            := "proveedores"
   oItem:cBmp           := "gc_businessman_16"
   oItem:cBmpBig        := "gc_businessman_32"
   oItem:lShow          := .T.

   oItemAlmacen         := oAcceso:Add()
   oItemAlmacen:cPrompt := "ALMACENES"
   oItemAlmacen:cBmp    := "gc_folder_open_16"
   oItemAlmacen:cBmpBig := "gc_folder_open_32"
   oItemAlmacen:lShow   := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Almacenes"
   oGrupo:cLittleBitmap := "gc_package_16"
   oGrupo:cBigBitmap    := "gc_package_16"

   oItem                := oItemAlmacen:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Almacenes"
   oItem:cMessage       := "Almacenes"
   oItem:bAction        := {|| AlmacenesController():New():ActivateNavigatorView() }
   oItem:cId            := "almacenes"
   oItem:cBmp           := "gc_warehouse_16"
   oItem:cBmpBig        := "gc_warehouse_32"
   oItem:lShow          := .F.

   oItem                := oItemAlmacen:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Movimientos almacén"
   oItem:cMessage       := "Acceso a los movimientos de almacén"
   oItem:bAction        := {|| MovimientosAlmacenController():New():ActivateNavigatorView() }
   oItem:cId            := "movimientos_de_almacen"
   oItem:cBmp           := "gc_pencil_package_16"
   oItem:cBmpBig        := "gc_pencil_package_32"
   oItem:lShow          := .F.



   oItemVentas          := oAcceso:Add()
   oItemVentas:cPrompt  := "VENTAS"
   oItemVentas:cBmp     := "gc_folder_open_16"
   oItemVentas:cBmpBig  := "gc_folder_open_32"
   oItemVentas:lShow    := .T.



   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 5
   oGrupo:cPrompt       := "Clientes"
   oGrupo:cLittleBitmap := "gc_user_16"
   oGrupo:cBigBitmap    := "gc_user_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Grupos de clientes"
   oItem:cMessage       := "Grupos de clientes"
   oItem:bAction        := {|| ClientesGruposController():New():ActivateNavigatorView() }
   oItem:cId            := "grupos_clientes"
   oItem:cBmp           := "gc_users3_16"
   oItem:cBmpBig        := "gc_users3_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Rutas"
   oItem:cMessage       := "Rutas"
   oItem:bAction        := {|| RutasController():New():ActivateNavigatorView() }
   oItem:cId            := "rutas"
   oItem:cBmp           := "gc_map_route_16"
   oItem:cBmpBig        := "gc_map_route_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Clientes"
   oItem:cMessage       := "Solicitar cliente"
   oItem:bAction        := {|| ClientesController():New():ActivateNavigatorView() }
   oItem:cId            := "clientes"
   oItem:cBmp           := "gc_user_16"
   oItem:cBmpBig        := "gc_user_32"
   oItem:lShow          := .T.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Agentes"
   oItem:cMessage       := "Solicitar agente"
   oItem:bAction        := {|| AgentesController():New():ActivateNavigatorView() }
   oItem:cId            := "agentes"
   oItem:cBmp           := "gc_businessman2_16"
   oItem:cBmpBig        := "gc_businessman2_32"
   oItem:lShow          := .F.

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Entidades"
   oItem:cMessage       := "Entidades"
   oItem:bAction        := {||EntidadesController():New():ActivateNavigatorView() }
   oItem:cId            := "entidades"
   oItem:cBmp           := "gc_office_building2_16"
   oItem:cBmpBig        := "gc_office_building2_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Ventas"
   oGrupo:cLittleBitmap := "gc_notebook_user_16"
   oGrupo:cBigBitmap    := "gc_notebook_user_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Facturas de clientes"
   oItem:cMessage       := "Facturas de clientes"
   oItem:bAction        := {|| FacturasClientesController():New():ActivateNavigatorView() }
   oItem:cId            := "facturas_clientes"
   oItem:cBmp           := "gc_document_text_user_16"
   oItem:cBmpBig        := "gc_document_text_user_32"
   oItem:lShow          := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 1
   oGrupo:cPrompt       := "Cobros"
   oGrupo:cLittleBitmap := "gc_briefcase2_user_16"
   oGrupo:cBigBitmap    := "gc_briefcase2_user_32"

   oItem                := oItemVentas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Recidbos"
   oItem:cMessage       := "Recidbos"
   oItem:bAction        := {||RecibosController():New():ActivateNavigatorView() }
   oItem:cId            := "recibos"
   oItem:cBmp           := "gc_briefcase2_user_16"
   oItem:cBmpBig        := "gc_briefcase2_user_32"
   oItem:lShow          := .T.



   oItemTpv             := oAcceso:Add()
   oItemTpv:cPrompt     := "T.P.V."
   oItemTpv:cBmp        := "gc_folder_open_16"
   oItemTpv:cBmpBig     := "gc_folder_open_32"
   oItemTpv:lShow       := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "T.P.V."
   oGrupo:cLittleBitmap := "gc_cash_register_user_16"
   oGrupo:cBigBitmap    := "gc_cash_register_user_32"

   oItem                := oItemTpv:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Entradas y salidas"
   oItem:cMessage       := "Entradas y salidas"
   oItem:bAction        := {||EntradaSalidaController():New():ActivateNavigatorView() }
   oItem:cId            := "entradas_salidas"
   oItem:cBmp           := "gc_cash_register_refresh_16"
   oItem:cBmpBig        := "gc_cash_register_refresh_32"
   oItem:lShow          := .F.

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Orden de comandas"
   oItem:cMessage       := "Orden de comandas"
   oItem:bAction        := {||OrdenComandasController():New():ActivateNavigatorView() }
   oItem:cId            := "orden_comandas"
   oItem:cBmp           := "gc_sort_az_descending_16"
   oItem:cBmpBig        := "gc_sort_az_descending_32"
   oItem:lShow          := .F.

   oGrupo               := TGrupoAcceso()
   oGrupo:nLittleItems  := 1
   oGrupo:cPrompt       := "Útiles"
   oGrupo:cLittleBitmap := "gc_window_pencil_16"
   oGrupo:cBigBitmap    := "gc_window_pencil_32"

   oItem                := oItemTPV:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Balanzas"
   oItem:cMessage       := "Balanzas"
   oItem:bAction        := {||BalanzasController():New():ActivateNavigatorView() }
   oItem:cId            := "balanzas"
   oItem:cBmp           := "gc_balance_16"
   oItem:cBmpBig        := "gc_balance_32"
   oItem:lLittle        := .T.



   oItemHerramientas          := oAcceso:Add()
   oItemHerramientas:cPrompt  := "HERRAMIENTAS"
   oItemHerramientas:cBmp     := "gc_folder_open_16"
   oItemHerramientas:cBmpBig  := "gc_folder_open_32"
   oItemHerramientas:lShow    := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 3

   oGrupo:cPrompt       := "Usuarios, roles y permisos"
   oGrupo:cLittleBitmap := "gc_document_text_screw_16"
   oGrupo:cBigBitmap    := "gc_document_text_screw_32"































   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 2
   oGrupo:cPrompt       := "Útiles"
   oGrupo:cLittleBitmap := "gc_notebook2_16"
   oGrupo:cBigBitmap    := "gc_notebook2_32"

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Campos extra"
   oItem:cMessage       := "Solicitar campos extra"
   oItem:bAction        := {|| CamposExtraController():New():ActivateNavigatorView() }
   oItem:cId            := "asistencia_remota"
   oItem:cBmp           := "gc_form_plus2_16"
   oItem:cBmpBig        := "gc_form_plus2_32"
   oItem:lShow          := .F.

   oItem                := oItemHerramientas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Listín telefónico"
   oItem:cMessage       := "Acceso al listín telefónico"
   oItem:bAction        := {|| ListinController():New():ActivateNavigatorView() }
   oItem:cId            := "listin_telefonico"
   oItem:cBmp           := "gc_book_telephone_16"
   oItem:cBmpBig        := "gc_book_telephone_32"
   oItem:lShow          := .F.



   oItemAyudas          := oAcceso:Add()
   oItemAyudas:cPrompt  := "AYUDAS"
   oItemAyudas:cBmp     := "gc_folder_open_16"
   oItemAyudas:cBmpBig  := "gc_folder_open_32"
   oItemAyudas:lShow    := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 4
   oGrupo:cPrompt       := "Ayudas"
   oGrupo:cLittleBitmap := "gc_lifebelt_16"
   oGrupo:cBigBitmap    := "gc_lifebelt_32"

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Visitar web"
   oItem:cMessage       := "Visitar web"
   oItem:bAction        := {|| goWeb( "http://www.gestool.es" ) }
   oItem:cId            := "visitar_web"
   oItem:cBmp           := "gc_earth_16"
   oItem:cBmpBig        := "gc_earth_32"
   oItem:lShow          := .F.

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Acerca de..."
   oItem:cMessage       := "Datos sobre el autor"
   oItem:bAction        := {|| About() }
   oItem:cId            := "acerca_de"
   oItem:cBmp           := "gc_question_16"
   oItem:cBmpBig        := "gc_question_32"
   oItem:lShow          := .F.

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Asistencia remota"
   oItem:cMessage       := "Solicitar asistencia remota"
   oItem:bAction        := {|| RunAsistenciaRemota() }
   oItem:cId            := "asistencia_remota"
   oItem:cBmp           := "gc_user_headset_16"
   oItem:cBmpBig        := "gc_user_headset_32"
   oItem:lShow          := .F.

   oItem                := oItemAyudas:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Stock inicial"
   oItem:cMessage       := "Stock inicial"
   oItem:bAction        := {|| msgRun( "Creando el stock inicial", "Espere por favor...", {|| StocksModel():StockInit() } )  }
   oItem:cId            := "Stock inicial"
   oItem:cBmp           := "gc_user_headset_16"
   oItem:cBmpBig        := "gc_user_headset_32"
   oItem:lShow          := .F.

RETURN ( oAcceso )



FUNCTION CreateAdminSQLAcceso()

   local oItem
   local oGrupo
   local oAcceso
   local oItemGeneral

   oAcceso                             := TAcceso():New()
   oAcceso:lCreateFavoritosOfficeBar   := .F.

   oItemGeneral         := oAcceso:Add()
   oItemGeneral:cPrompt := "General"
   oItemGeneral:cBmp    := "gc_folder_open_16"
   oItemGeneral:cBmpBig := "gc_folder_open_32"
   oItemGeneral:lShow   := .T.

   oGrupo               := TGrupoAcceso()
   oGrupo:nBigItems     := 5
   oGrupo:cPrompt       := ""
   oGrupo:cLittleBitmap := "gc_factory_16"
   oGrupo:cBigBitmap    := "gc_factory_32"









































   oItem                := oItemGeneral:Add()
   oItem:oGroup         := oGrupo
   oItem:cPrompt        := "Asistencia remota"
   oItem:cMessage       := "Solicitar asistencia remota"
   oItem:bAction        := {|| RunAsistenciaRemota() }
   oItem:cId            := "asistencia_remota"
   oItem:cBmp           := "gc_user_headset_16"
   oItem:cBmpBig        := "gc_user_headset_32"
   oItem:lShow          := .F.

RETURN ( oAcceso )





FUNCTION IsReport()

RETURN ( .F. )



FUNCTION validRunReport( cOption )

   if nAnd( Auth():Level( cOption ), 1 ) == 0
      msgStop( "Acceso no permitido." )
      RETURN .F.
   end

RETURN .T.



FUNCTION cBmpVersion()

   if isNil( cBmpVersion )

      do case
         case file( FullCurDir() + "scmmrc" )

            cBmpVersion      := "gc_gestoolPrestashop"

         case file( FullCurDir() + "prfsnl" )

            cBmpVersion      := "gestoolPro"

         case file( FullCurDir() + "stndrd" )

            cBmpVersion      := "gestoolStandard"

         otherwise

            cBmpVersion      := "gestoolLite"

      end

   end

RETURN ( cBmpVersion )






FUNCTION cNameVersion()

   if IsNil( cNameVersion )

      do case
         case File( FullCurDir() + "scmmrc" )

            cNameVersion      := "Profesional"

         case File( FullCurDir() + "prfsnl" )

            cNameVersion      := "Profesional"

         case File( FullCurDir() + "stndrd" )

            cNameVersion      := "Standard"

         otherwise

            cNameVersion      := "Lite"

      end

   end

RETURN ( cNameVersion )



FUNCTION cTypeVersion( cType )

   if !empty( cType )
      cTypeVersion   := cType
   end

RETURN ( cTypeVersion )






FUNCTION IsOsCommerce()

   if IsNil( lOsCommerce )

      if File( FullCurDir() + "scmmrc" )
         lOsCommerce       := .T.
      else
         lOsCommerce       := .F.
      end

   end

RETURN lOsCommerce






FUNCTION IsProfesional()

   if IsNil( lProfesional )


      if File( FullCurDir() + "scmmrc" ) .OR. File( FullCurDir() + "prfsnl" )
         lProfesional     := .T.
      else
         lProfesional      := .F.
      end

   end

RETURN lProfesional






FUNCTION IsStandard()

   if IsNil( lStandard )



      if File( FullCurDir() + "scmmrc" ) .OR. File( FullCurDir() + "prfsnl" ) .OR. File( FullCurDir() + "stndrd" )

         lStandard     := .T.

      else
         lStandard     := .F.
      end

   end

RETURN lStandard



FUNCTION appCheckDirectory()

   local hDirectory

   for each hDirectory in getScafolding()
      checkDirectory( hDirectory )
   next



   eraseFilesInDirectory( cPatTmp(), "*.*" )
   eraseFilesInDirectory( cPatLog(), "*.*" )

RETURN ( nil )



STATIC FUNCTION checkDirectory( hDirectory )

   if empty( hget( hDirectory, "Directory" ) )
      RETURN ( nil )
   end

   if !lIsDir( hget( hDirectory, "Directory" ) )
      makedir( cNamePath( hget( hDirectory, "Directory" ) ) )
   end

   if hhaskey( hDirectory, "Subdirectory" )
      checkDirectory( hget( hDirectory, "Subdirectory" ) )
   end

RETURN ( nil )








FUNCTION Ejecutascript()

   local aScripts
   local cScript  := ""
   Local pHrb
   Local u
   Local dFecha





   dFecha         := cToD( GetPvProfString( "SCRIPT", "Fecha",    "", cIniAplication() ) )





   if dFecha  < GetSysDate()

      aScripts    := directory( cPatScript() + "*.hrb" )
      if len( aScripts ) > 0
         for each cScript in aScripts
            TScripts():RunScript( cPatScript() + cScript[1] )
         next
      end

   end





   WritePProString( "SCRIPT", "Fecha", Dtoc( GetSysDate() ), cIniAplication() )

RETURN u







FUNCTION DirectEjecutaScript()

   Local u
   Local pHrb
   local aScripts
   local cScript  := ""





   if !empty( oWnd() )
      SysRefresh(); oWnd():CloseAll(); SysRefresh()
   end





   aScripts       := Directory( cPatScript() + "*.hrb" )

   if Len( aScripts ) > 0

      for each cScript in aScripts

         TScripts():RunScript( cPatScript() + cScript[1] )

      next

   end

RETURN u



FUNCTION InitClasses()

   TShell()
   TAgenda()
   TDbf()
   TIndex()
   TInfGen()
   TMant()
   TMasDet()
   TDet()
   TCatalogo()
   TGrpCli()
   TInfoArticulo()
   TSndRecInf()
   TNotas()
   TReindex()
   TRemesas()
   TCamposExtra()
   TStock()
   TDeleleteObsoletos()
   TInternet()
   TSeaNumSer()
   TTrazarLote()
   TAlbaranesClientesSenderReciver()
   TAlbaranesProveedorSenderReciver()
   TArticuloSenderReciver()
   TFacturasClientesSenderReciver()
   TFacturasProveedorSenderReciver()
   TTiketsClientesSenderReciver()
   TClienteSenderReciver()
   TTurno()
   TInvitacion()
   TXBrowse():Register( nOr( 1, 2, 8 ) )
   TBandera():New()
   TCentroCoste()

RETURN .T.






FUNCTION lInitCheck( oMessage, oProgress )

   local oError
   local lCheck      := .T.

   CursorWait()

   if !empty( oProgress )
      oProgress:SetTotal( 4 )
   end



   if !empty( oMessage )
      oMessage:SetText( "Comprobando directorios" )
   end

   if !empty( oProgress )
      oProgress:AutoInc()
   end

   appCheckDirectory()



   if !empty( oMessage )
      oMessage:SetText( "Inicializamos las clases de la aplicación" )
   end

   if !empty( oProgress )
      oProgress:AutoInc()
   end

   InitClasses()



   if !empty( oMessage )
      oMessage:SetText( "Selección de la empresa actual" )
   end

   if !empty( oProgress )
      oProgress:AutoInc()
   end

   setEmpresa()



   if !empty( oMessage )
      oMessage:SetText( "Selección de datos de la aplicación" )
   end

   if !empty( oProgress )
      oProgress:AutoInc()
   end

   Application()



   if !empty( oMessage )
      oMessage:SetText( "Comprobaciones finalizadas" )
   end

   if !empty( oProgress )
      oProgress:AutoInc()
   end

   runEventScript( "IniciarAplicacion" )

   CursorWe()

RETURN ( lCheck )



FUNCTION InitServices()



   if oUser():lAlerta()
      SetNotas()
   end

   TScripts():New( cPatEmp() ):StartTimer()

RETURN ( nil )



FUNCTION StopServices()



   CloseInfoArticulo()



   if oUser():lAlerta()
      CloseNotas()
   end

   TScripts():EndTimer()

   PdaEnvioRecepcionController():getInstance():stopTimer()

RETURN ( nil )



FUNCTION lDemoMode( lDemo )

   if lDemo <> nil
      lDemoMode   := lDemo
   end

RETURN ( lDemoMode )



FUNCTION nAjuste( nNumber, cAdjust )

   local n
   local nAjusteDecimales
   local nAjusteIncrementa
   local nAjusteDecrementa
   local cNumber
   local nResult
   local cResult
   local aAdjust
   local aNumber        := {}

   if empty( nNumber )
      RETURN ( 0 )
   end





   nResult              := 0
   aAdjust              := hb_aTokens( cAdjust, "|" )

   for each cAdjust in aAdjust

      nAjusteDecimales  := nAjusteDecimales( cAdjust )
      nAjusteIncrementa := nAjusteIncrementa( cAdjust )
      nAjusteDecrementa := nAjusteDecrementa( cAdjust )

      if !empty(nAjusteDecimales)

        nResult         := Round( nNumber, nAjusteDecimales )

        if nResult - nNumber > 0
           nResult      += nAjusteDecrementa
        else
           nResult      += nAjusteIncrementa
        end

        aAdd( aNumber, nResult )

      end

   next

   for each n in aNumber
      if ( ( n - nNumber ) >= -0.000001 )
         nResult        := n
         exit
      end
   next

RETURN ( nResult )



Static FUNCTION nAjusteDecimales( cAjuste )

  local hAjuste
  local nAjusteDecimales

  if hHasKey( hMapaAjuste, cAjuste )
    hAjuste             := hGet( hMapaAjuste, cAjuste )
    if !empty( hAjuste )
      nAjusteDecimales  := hGet( hAjuste, "Round" )
    end
  end

RETURN ( nAjusteDecimales )



Static FUNCTION nAjusteIncrementa( cAjuste )

  local hAjuste
  local nAjusteIncrementa

  if hHasKey( hMapaAjuste, cAjuste )
    hAjuste             := hGet( hMapaAjuste, cAjuste )
    if !empty( hAjuste )
      nAjusteIncrementa := hGet( hAjuste, "Incrementa" )
    end
  end

RETURN ( nAjusteIncrementa )



Static FUNCTION nAjusteDecrementa( cAjuste )

  local hAjuste
  local nAjusteDecrementa

  if hHasKey( hMapaAjuste, cAjuste )
    hAjuste             := hGet( hMapaAjuste, cAjuste )
    if !empty( hAjuste )
      nAjusteDecrementa := hGet( hAjuste, "Decrementa" )
    end
  end

RETURN ( nAjusteDecrementa )



Static FUNCTION nAjusteCeros( cAjuste )

  local hAjuste
  local nAjusteCeros

  if hHasKey( hMapaAjuste, cAjuste )
    hAjuste             := hGet( hMapaAjuste, cAjuste )
    if !empty( hAjuste )
      nAjusteCeros      := hGet( hAjuste, "Ceros" )
    end
  end

RETURN ( nAjusteCeros )



FUNCTION lAds( lSetAds )

   if IsLogic( lSetAds )
      lAds     := lSetAds
   end

RETURN ( lAds )



FUNCTION lAIS( lSetAIS )

   if IsLogic( lSetAIS )
      lAIS     := lSetAIS
   end

RETURN ( lAIS )



FUNCTION lAdsRdd()

RETURN ( lAds() .OR. lAIS() )



FUNCTION cFieldTimeStamp()

RETURN ( if( lAdsRdd(), "Timestamp", "T" ) )



FUNCTION cAdsIp( cSetIp )

   if IsChar( cSetIp )
      cAdsIp      := cSetIp
   end

RETURN ( cAdsIp )



FUNCTION cAdsPort( cPort )

   if isChar( cPort )
      cAdsPort  := cPort
   end

RETURN ( cAdsPort )



FUNCTION cAdsData( cSetData )

   if IsChar( cSetData )
      cAdsData  := cSetData
   end

RETURN ( if( !empty( cAdsData ), cPath( cAdsData ), "" ) )



FUNCTION nAdsServer( nServer )

   if IsNum( nServer )
      nAdsServer  := nServer
   end

RETURN ( nAdsServer )



FUNCTION cAdsUNC()

RETURN ( cAdsIp() + cPath( cAdsData() ) )



FUNCTION cAdsFile( cFile )

   if ( isChar( cFile ) .AND. !empty( cFile ) )
      cAdsFile    := cFile
   end

RETURN ( cAdsFile )



FUNCTION lCdx( lSetCdx )

   if IsLogic( lSetCdx )
      lCdx     := lSetCdx
   end

RETURN ( lCdx )



FUNCTION cCodigoAgente( cAgente )

   if IsChar( cAgente )
      cCodigoAgente    := cAgente
   end

RETURN ( cCodigoAgente )



FUNCTION lPda()

RETURN ( "PDA" $ appParamsMain() )



FUNCTION SetIndexToADSCDX()

   lCdx( .F. )
   lAIS( .T. )

   RddSetDefault( "ADSCDX" )

RETURN nil



FUNCTION SetIndexToCDX()

   lCdx( .T. )
   lAIS( .F. )

   RddSetDefault( "DBFCDX" )

RETURN nil



FUNCTION SetIndexToADS()

   lCdx( .F. )
   lAIS( .T. )

   RddSetDefault( "ADS" )

RETURN nil



FUNCTION cDriver()

   if lAIS() .OR. lAds()
      RETURN ( "ADS" )
   end

RETURN ( "DBFCDX" )



FUNCTION cADSDriver()

RETURN ( "ADS" )



FUNCTION isADSDriver( cDriver )

  If( cDriver == nil, cDriver := cDriver(), ) ;

RETURN ( cDriver == "ADS" )



FUNCTION cLocalDriver()

RETURN ( "DBFCDX" )



FUNCTION cNombrePc( xValue )

   if !empty( xValue )
      cNombrePc   := xValue
   end

RETURN ( cNombrePc )



FUNCTION CacheRecords( cAlias )

   if lAdsRdd()
      ( cAlias )->( AdsCacheRecords( 50 ) )
   end

RETURN nil



FUNCTION cPathDatos()

RETURN ( "Datos" )



FUNCTION cFullPathEmpresa()

  local cCodigoEmpresa  := ""

  cCodigoEmpresa        += fullCurDir()
  cCodigoEmpresa        += cPatEmp
  cCodigoEmpresa        += "\"

RETURN ( cCodigoEmpresa )



FUNCTION cPatDat( lFull )

   If( lFull == nil, lFull := .F., ) ;

   if lAIS()
      RETURN ( if( lFull, cAdsUNC() + cPathDatos() + "\", cPathDatos() ) )
   end

RETURN ( fullCurDir() + cPathDatos() + "\" )



FUNCTION cPatADS( lFull )

   If( lFull == nil, lFull := .F., ) ;

   if lAIS()
      RETURN ( if( lFull, cAdsUNC() + getSinglePathADS(), getSinglePathADS() ) )
   end

RETURN ( fullCurDir() + getSinglePathADS() )



FUNCTION getSinglePathADS()

RETURN ( "ADS\" )



FUNCTION cPatEmpTmp( lShort )

   If( lShort == nil, lShort := .F., ) ;

   if lAds()
      RETURN ( cAdsUNC() + "EmpTmp\" )
   end

RETURN ( if( !lShort, fullCurDir(), "" ) + "EmpTmp\" )



FUNCTION cPatEmpOld( cCodEmp )

   if lAds()
      RETURN ( cAdsUNC() + "Emp" + cCodEmp + "\" )
   end

RETURN ( fullCurDir() + "Emp" + cCodEmp + "\" )



FUNCTION cPatGrpOld( cCodGrp )

   if lAds()
      RETURN ( cAdsUNC() + "Emp" + cCodGrp + "\" )
   end

RETURN ( fullCurDir() + "Emp" + cCodGrp + "\" )



FUNCTION cPatTmp()

   if !empty( cPatTmp )
      RETURN ( cPatTmp )
   end

   cPatTmp     := GetEnv( "TEMP" )

   if empty( cPatTmp )
      cPatTmp  := GetEnv( "TMP" )
   endif

   if empty( cPatTmp ) .OR. ! lIsDir( cPatTmp )
      cPatTmp  := GetWinDir()
   endif

   cPatTmp     += If( Right( cPatTmp, 1 ) == "\", "", "\" ) + "Apolo"

   if !lIsDir( cPatTmp )
      MakeDir( cPatTmp )
   endif

   if Right( cPatTmp, 1 ) <> "\"
      cPatTmp  += "\"
   end

RETURN ( cPatTmp )



FUNCTION cPatIn( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "In\" )



FUNCTION cPatInFrq( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "InFrq\" )



FUNCTION cPatScript( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Script\" )



FUNCTION cPatScriptEmp( cPath, lShort )

   If( cPath == nil, cPath := "", ) ;
   If( lShort == nil, lShort := .F., ) ;

   if !empty( cPath )
      cPatScriptEmp := "Script" + cPath
   end

RETURN ( if( !lShort, fullCurDir(), "" ) + cPatScriptEmp + "\" )



FUNCTION cPatOut( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Out\" )



FUNCTION cPatProcessed( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "processed\" )



FUNCTION cPatSafe( lShort )

   local cDirSafe  := ""

   If( lShort == nil, lShort := .F., ) ;

   if !Empty( uFieldEmpresa( "cDirSafe" ) )

      cDirSafe := AllTrim( uFieldEmpresa( "cDirSafe" ) )

      if Right( cDirSafe, 1 ) <> "\"
         cDirSafe += "\"
      end

      return ( cDirSafe )

   end

RETURN ( if( !lShort, fullCurDir(), "" ) + "Safe\" )



FUNCTION cPatBmp( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Bmp\" )



FUNCTION cPatPsion( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Psion\" )



FUNCTION cPatHtml( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Html\" )



FUNCTION cPatXml( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Xml\" )



FUNCTION PicIn()

   if empty( cDefPicIn )
      cDefPicIn   := cPirDiv( cDivEmp() )
   end

RETURN ( cDefPicIn )



FUNCTION cPatReport( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Reports\" )



FUNCTION by( uVal )

   local uRet     := uVal

RETURN ( uRet )



FUNCTION nHndCaj( nHnd )

   if nHnd <> nil
      nHndCaj  := nHnd
   end

RETURN nHndCaj



FUNCTION SelSysDate( oMenuItem )

   If( oMenuItem == nil, oMenuItem := "01084", ) ;

   if dSysDate == nil
      dSysDate       := Date()
   end





   if nAnd( Auth():Level( oMenuItem ), 1 ) == 0
      msgStop( "Acceso no permitido." )
   else
      dSysDate       := Calendario( dSysDate, "Fecha de trabajo" )
   end

RETURN ( dSysDate )



FUNCTION ExcMnuNext( cName )

   local nPos

   if cName == nil
      nPos  := len( aMnuNext )
   else
      nPos  := aScan( aMnuNext, {|c| c[1] == cName } )
   end

   if nPos <> 0

      Eval( aMnuNext[ nPos, 2 ] )



      addMnuPrev( aMnuNext[ nPos, 1 ], aMnuNext[ nPos, 2 ] )



      aDel( aMnuNext, nPos )
      aSize( aMnuNext, len( aMnuNext ) - 1 )

   end

RETURN .T.



FUNCTION MnuNext( oBtn, oWnd )

   local n
   local cText
   local oMenu
   local bAction

   If( oWnd == nil, oWnd := oWnd(), ) ;

   oMenu := MenuBegin( .T. )

   for n := 1 to len( aMnuNext )

      cText    := by( aMnuNext[ n, 1 ] )
      bAction  := bMnuNext( cText )

      MenuAddItem( cText,, .F.,, bAction,,,,,,, .F.,,, .F. )

   next

   MenuEnd()

   oMenu:Activate( 0, oBtn:nRight, oBtn )

RETURN NIL



FUNCTION addMnuPrev( cName, uAction )

   if aScan( aMnuPrev, {|c| c[1] == cName } ) == 0
      if valtype( uAction ) == "C"
         aAdd( aMnuPrev, { cName, &( "{||" + uAction + "() }" ) } )
      else
         aAdd( aMnuPrev, { cName, uAction } )
      end
   end

RETURN nil



FUNCTION ExcMnuPrev( cName )

   local nPos

   if cName == nil
      nPos  := len( aMnuPrev )
   else
      nPos  := aScan( aMnuPrev, {|c| c[1] == cName } )
   end

   if nPos <> 0

      Eval( aMnuPrev[ nPos, 2 ] )



      addMnuNext( aMnuPrev[ nPos, 1 ], aMnuPrev[ nPos, 2 ] )



      aDel( aMnuPrev, nPos )
      aSize( aMnuPrev, len( aMnuPrev ) - 1 )

   end

RETURN .T.



FUNCTION MnuPrev( oBtn, oWnd )

   local n
   local cText
   local oMenu
   local bAction

   If( oWnd == nil, oWnd := oWnd(), ) ;

   oMenu := MenuBegin( .T. )

   for n := 1 to len( aMnuPrev )

      cText    := by( aMnuPrev[ n, 1 ] )
      bAction  := bMnuPrev( cText )

      MenuAddItem( cText,, .F.,, bAction,,,,,,, .F.,,, .F. )

   next

   MenuEnd()

   oMenu:Activate( oBtn:nBottom - 1, 0, oBtn )

RETURN nil



static FUNCTION bMnuPrev( uValue )
RETURN {|| ExcMnuPrev( uValue ) }



static FUNCTION bMnuNext( uValue )
RETURN {|| ExcMnuNext( uValue ) }



FUNCTION Visor( aMsg )

   local oDlg
   local oBrwCon


   if len( aMsg ) == 0
      RETURN .F.
   end


   oDlg = TDialog():New(,,,,, "VISOR",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )

   oBrwCon                        := IXBrowse():New( oDlg )

   oBrwCon:bClrSel                := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
   oBrwCon:bClrSelFocus           := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

   oBrwCon:SetArray( aMsg, , , .F. )

   oBrwCon:nMarqueeStyle          := 5
   oBrwCon:lRecordSelector        := .F.
   oBrwCon:lHScroll               := .F.
   oBrwCon:lHeader                := .F.

   oBrwCon:CreateFromResource( 100 )

   with object ( oBrwCon:AddCol() )
      :cHeader          := Space(1)
      :bStrData         := {|| Space(1) }
      :bEditValue       := {|| aMsg[ oBrwCon:nArrayAt, 1 ] }
      :nWidth           := 20
      :SetCheck( { "Cnt16", "Nil16" } )
   end

   with object ( oBrwCon:AddCol() )
      :cHeader          := Space(1)
      :bStrData         := {|| aMsg[ oBrwCon:nArrayAt, 2 ] }
      :nWidth           := 300
   end




   TButton():ReDefine( 1, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )

    oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN NIL




FUNCTION aItmVentas()

   local aItmVta := {}

   aAdd( aItmVta, { { "CSERALB",    "CSERIE",      "CSERIE",      "CSERTIK" }, { "C", "C", "C", "C" },   1, 0, "Serie del documento" } )
   aAdd( aItmVta, { { "NNUMALB",    "NNUMFAC",     "NNUMFAC",     "CNUMTIK" }, { "N", "N", "N", "C" },   9, 0, "Número del documento" } )
   aAdd( aItmVta, { { "CSUFALB",    "CSUFFAC",     "CSUFFAC",     "CSUFTIK" }, { "C", "C", "C", "C" },   2, 0, "Sufijo del documento" } )
   aAdd( aItmVta, { { "CTURALB",    "CTURFAC",     "CTURFAC",     "CTURTIK" }, { "C", "C", "C", "C" },   6, 0, "Sesión del documento" } )
   aAdd( aItmVta, { { "DFECALB",    "DFECFAC",     "DFECFAC",     "DFECTIK" }, { "D", "D", "D", "D" },   8, 0, "Fecha del documento" } )
   aAdd( aItmVta, { { "CCODCLI",    "CCODCLI",     "CCODCLI",     "CCLITIK" }, { "C", "C", "C", "C" },  12, 0, "Código del cliente" } )
   aAdd( aItmVta, { { "CNOMCLI",    "CNOMCLI",     "CNOMCLI",     "CNOMTIK" }, { "C", "C", "C", "C" },  80, 0, "Nombre del cliente" } )
   aAdd( aItmVta, { { "CDIRCLI",    "CDIRCLI",     "CDIRCLI",     "CDIRCLI" }, { "C", "C", "C", "C" }, 100, 0, "Domicilio del cliente" } )
   aAdd( aItmVta, { { "CPOBCLI",    "CPOBCLI",     "CPOBCLI",     "CPOBCLI" }, { "C", "C", "C", "C" },  35, 0, "Población del cliente" } )
   aAdd( aItmVta, { { "CPRVCLI",    "CPRVCLI",     "CPRVCLI",     "CPRVCLI" }, { "C", "C", "C", "C" },  20, 0, "Provincia del cliente" } )
   aAdd( aItmVta, { { "CPOSCLI",    "CPOSCLI",     "CPOSCLI",     "CPOSCLI" }, { "C", "C", "C", "C" },  15, 0, "Código postal del cliente" } )
   aAdd( aItmVta, { { "CDNICLI",    "CDNICLI",     "CDNICLI",     "CDNICLI" }, { "C", "C", "C", "C" },  15, 0, "DNI/CIF del cliente" } )
   aAdd( aItmVta, { { "CCODALM",    "CCODALM",     "CCODALM",     "CALMTIK" }, { "C", "C", "C", "C" },   3, 0, "Código del almacén" } )
   aAdd( aItmVta, { { "CCODCAJ",    "CCODCAJ",     "CCODCAJ",     "CNCJTIK" }, { "C", "C", "C", "C" },   3, 0, "Código de la caja" } )
   aAdd( aItmVta, { { "CCODPAGO",   "CCODPAGO",    "CCODPAGO",    "CFPGTIK" }, { "C", "C", "C", "C" },   2, 0, "Forma de pago del documento" } )
   aAdd( aItmVta, { { "CCODOBR",    "CCODOBR",     "CCODOBR",     "CCODOBR" }, { "C", "C", "C", "C" },  10, 0, "Obra del documento" } )
   aAdd( aItmVta, { { "CCODTAR",    "CCODTAR",     "CCODTAR",     "CCODTAR" }, { "C", "C", "C", "C" },   5, 0, "Código de la tarifa" } )
   aAdd( aItmVta, { { "CCODRUT",    "CCODRUT",     "CCODRUT",     "CCODRUT" }, { "C", "C", "C", "C" },   4, 0, "Código de la ruta" } )
   aAdd( aItmVta, { { "CCODAGE",    "CCODAGE",     "CCODAGE",     "CCODAGE" }, { "C", "C", "C", "C" },   3, 0, "Código del agente" } )
   aAdd( aItmVta, { { "NPCTCOMAGE", "NPCTCOMAGE",  "NPCTCOMAGE",  "NCOMAGE" }, { "N", "N", "N", "" },    6, 2, "Comisión agente" } )
   aAdd( aItmVta, { { "NTARIFA",    "NTARIFA",     "NTARIFA",     "NTARIFA" }, { "N", "N", "N", "N" },   1, 0, "Tarifa del documento" } )
   aAdd( aItmVta, { { "NDTOESP",    "NDTOESP",     "NDTOESP",     "" },        { "N", "N", "N", "" },    6, 2, "Descuento general" } )
   aAdd( aItmVta, { { "NDPP",       "NDPP",        "NDPP",        "" },        { "N", "N", "N", "" },    6, 2, "Descuento por pronto pago" } )
   aAdd( aItmVta, { { "NDTOUNO",    "NDTOUNO",     "NDTOUNO",     "" },        { "N", "N", "N", "" },    6, 2, "Descuento definido 1" } )
   aAdd( aItmVta, { { "NDTODOS",    "NDTODOS",     "NDTODOS",     "" },        { "N", "N", "N", "" },    4, 1, "Descuento definido 2" } )
   aAdd( aItmVta, { { "LRECARGO",   "LRECARGO",    "LRECARGO",    "" },        { "L", "L", "L", "" },    1, 0, "Lógico de recargo" } )
   aAdd( aItmVta, { { "CDIVALB",    "CDIVFAC",     "CDIVFAC",     "CDIVTIK" }, { "C", "C", "C", "C" },   3, 0, "Código divisa" } )
   aAdd( aItmVta, { { "NVDVALB",    "NVDVFAC",     "NVDVFAC",     "NVDVTIK" }, { "N", "N", "N", "N" },  10, 4, "Valor divisa" } )
   aAdd( aItmVta, { { "CRETPOR",    "CRETPOR",     "CRETPOR",     "CRETPOR" }, { "C", "C", "C", "C" }, 100, 0, "Retirado por" } )
   aAdd( aItmVta, { { "CRETMAT",    "CRETMAT",     "CRETMAT",     "CRETMAT" }, { "C", "C", "C", "C" },  20, 0, "Matricula" } )
   aAdd( aItmVta, { { "LIVAINC",    "LIVAINC",     "LIVAINC",     "" },        { "L", "L", "L", "" },    1, 0, "Lógico impuestos incluido" } )
   aAdd( aItmVta, { { "NREGIVA",    "NREGIVA",     "NREGIVA",     "" },        { "N", "N", "N", "" },   20, 0, "Régimen de " + cImp() } )
   aAdd( aItmVta, { { "CCODTRN",    "CCODTRN",     "CCODTRN",     "" },        { "C", "C", "C", "" },    9, 0, "Código del transportista" } )
   aAdd( aItmVta, { { "CCODUSR",    "CCODUSR",     "CCODUSR",     "CCCJTIK" }, { "C", "C", "C", "C" },   3, 0, "Código de usuario" } )
   aAdd( aItmVta, { { "DFECCRE",    "DFECCRE",     "DFECCRE",     "DFECCRE" }, { "D", "D", "D", "D" },   8, 0, "Fecha de creación/modificación" } )
   aAdd( aItmVta, { { "CTIMCRE",    "CTIMCRE",     "CTIMCRE",     "CTIMCRE" }, { "C", "C", "C", "C" },  20, 0, "Hora de creación/modificación" } )
   aAdd( aItmVta, { { "CCODGRP",    "CCODGRP",     "CCODGRP",     ""        }, { "C", "C", "C", "" },    4, 0, "Grupo de cliente" } )
   aAdd( aItmVta, { { "lImprimido", "lImprimido",  "lImprimido",  ""        }, { "L", "L", "L", "" },    1, 0, "Lógico de imprimido" } )
   aAdd( aItmVta, { { "dFecImp",    "dFecImp",     "dFecImp",     ""        }, { "D", "D", "D", "" },    8, 0, "Fecha última impresión" } )
   aAdd( aItmVta, { { "cHorImp",    "cHorImp",     "cHorImp",     ""        }, { "C", "C", "C", "" },    5, 0, "Hora última impresión" } )
   aAdd( aItmVta, { { "cCodDlg",    "cCodDlg",     "cCodDlg",     "cCodDlg" }, { "C", "C", "C", "C" },   2, 0, "Código delegación" } )

RETURN ( aItmVta )



FUNCTION aItmCompras()

   local aItmCom := {}

   aAdd( aItmCom, { { "CSERALB",    "CSERFAC"   }, { "C", "C" },  1, 0, "Serie del documento" } )
   aAdd( aItmCom, { { "NNUMALB",    "NNUMFAC"   }, { "N", "N" },  9, 0, "Número del documento" } )
   aAdd( aItmCom, { { "CSUFALB",    "CSUFFAC"   }, { "C", "C" },  2, 0, "Sufijo del documento" } )
   aAdd( aItmCom, { { "CTURALB",    "CTURFAC"   }, { "C", "C" },  6, 0, "Sesión del documento" } )
   aAdd( aItmCom, { { "DFECALB",    "DFECFAC"   }, { "D", "D" },  8, 0, "Fecha del documento" } )
   aAdd( aItmCom, { { "CCODALM",    "CCODALM"   }, { "C", "C" },  3, 0, "Código del almacén" } )
   aAdd( aItmCom, { { "CCODCAJ",    "CCODCAJ"   }, { "C", "C" },  3, 0, "Código de la caja" } )
   aAdd( aItmCom, { { "CCODPRV",    "CCODPRV"   }, { "C", "C" }, 12, 0, "Código del proveedor" } )
   aAdd( aItmCom, { { "CNOMPRV",    "CNOMPRV"   }, { "C", "C" }, 35, 0, "Nombre del proveedor" } )
   aAdd( aItmCom, { { "CDIRPRV",    "CDIRPRV"   }, { "C", "C" }, 35, 0, "Domicilio del proveedor" } )
   aAdd( aItmCom, { { "CPOBPRV",    "CPOBPRV"   }, { "C", "C" }, 25, 0, "Población del proveedor" } )
   aAdd( aItmCom, { { "CPROPRV",    "CPROVPROV" }, { "C", "C" }, 20, 0, "Provincia del proveedor" } )
   aAdd( aItmCom, { { "CPOSPRV",    "CPOSPRV"   }, { "C", "C" },  5, 0, "Código postal del provedor" } )
   aAdd( aItmCom, { { "CDNIPRV",    "CDNIPRV"   }, { "C", "C" }, 30, 0, "DNI/CIF del proveedor" } )
   aAdd( aItmCom, { { "DFECENT",    "DFECENT"   }, { "D", "D" },  8, 0, "Fecha de entrada" } )
   aAdd( aItmCom, { { "CCODPGO",    "CCODPAGO"  }, { "C", "C" },  2, 0, "Forma de pago" } )
   aAdd( aItmCom, { { "NBULTOS",    "NBULTOS"   }, { "N", "N" },  3, 0, "Número de bultos" } )
   aAdd( aItmCom, { { "NPORTES",    "NPORTES"   }, { "N", "N" },  6, 0, "Valor de los portes" } )
   aAdd( aItmCom, { { "NDTOESP",    "NDTOESP"   }, { "N", "N" },  6, 2, "Descuento general" } )
   aAdd( aItmCom, { { "NDPP",       "NDPP"      }, { "N", "N" },  6, 2, "Descuento por pronto pago" } )
   aAdd( aItmCom, { { "LRECARGO",   "LRECARGO"  }, { "L", "L" },  1, 0, "Lógico de recargo" } )
   aAdd( aItmCom, { { "CCONDENT",   "CCONDENT"  }, { "C", "C" }, 20, 0, "Condición de entrada" } )
   aAdd( aItmCom, { { "CEXPED",     "CEXPED"    }, { "C", "C" }, 20, 0, "Expedición" } )
   aAdd( aItmCom, { { "COBSERV",    "COBSERV"   }, { "M", "M" }, 10, 0, "Observaciones" } )
   aAdd( aItmCom, { { "CDIVALB",    "CDIVFAC"   }, { "C", "C" },  3, 0, "Código de la divisa" } )
   aAdd( aItmCom, { { "NVDVALB",    "NVDVFAC"   }, { "N", "N" }, 10, 4, "Valor de la divisa" } )
   aAdd( aItmCom, { { "NDTOUNO",    "NDTOUNO"   }, { "N", "N" },  5, 2, "Descuento definido 1" } )
   aAdd( aItmCom, { { "NDTODOS",    "NDTODOS"   }, { "N", "N" },  5, 2, "Descuento definido 2" } )
   aAdd( aItmCom, { { "CCODUSR",    "CCODUSR"   }, { "C", "C" },  3, 0, "Código de usuario" } )
   aAdd( aItmCom, { { "LIMPRIMIDO", "LIMPRIMIDO"}, { "L", "L" },  1, 0, "Lógico de imprimido" } )
   aAdd( aItmCom, { { "DFECIMP",    "DFECIMP"   }, { "D", "D" },  8, 0, "Fecha de última impresión" } )
   aAdd( aItmCom, { { "CHORIMP",    "CHORIMP"   }, { "C", "C" },  5, 0, "Hora última impresión" } )
   aAdd( aItmCom, { { "DFECCHG",    "DFECCHG"   }, { "D", "D" },  8, 0, "Fecha creación/modificación" } )
   aAdd( aItmCom, { { "CTIMCHG",    "CTIMCHG"   }, { "C", "C" },  5, 0, "Hora creación/modificación" } )
   aAdd( aItmCom, { { "CCODDLG",    "CCODDLG"   }, { "C", "C" },  2, 0, "Código de la delegación" } )

RETURN ( aItmCom )



FUNCTION aEmpresa( cCodigoEmpresa, lAdministrador )

   local nView             := D():CreateView()

   If( lAdministrador == nil, lAdministrador := .F., ) ;

   setArrayEmpresa( EmpresasModel():scatter( cCodigoEmpresa ) )







   if !lAdministrador

      if !( isReport() )

         if empty( Application():codigoCaja )
            Application():getCaja()
         end

         if empty( Application():codigoAlmacen )
            Application():getAlmacen()
         end





      setAplicacionContable( uFieldEmpresa( "nExpContbl" ) )

      end





      setArrayDelegacionEmpresa( DelegacionesModel():arrayDelegaciones( cCodigoEmpresa ) )

   end

   D():DeleteView( nView )

RETURN ( .T. )



FUNCTION SetEmp( uVal, nPos )

   if nPos >= 0 .AND. nPos <= len( aEmpresa )
      aEmpresa[ nPos ]  := uVal
   end

 RETURN ( aEmpresa )



FUNCTION aRetDlgEmp() ; RETURN ( aDlgEmp )



FUNCTION setArrayDelegacionEmpresa( aDelegaciones )

   aDlgEmp  := aDelegaciones

RETURN ( aDlgEmp )



FUNCTION cCodigoEmpresaEnUso( cCodEmp )

   if cCodEmp <> nil
      cCodigoEmpresaEnUso     := cCodEmp
   end

RETURN ( cCodigoEmpresaEnUso )



FUNCTION cCodigoDelegacionEnUso( cCodDlg )

   if cCodDlg <> nil
      cCodigoDelegacionEnUso  := cCodDlg
   end

RETURN ( cCodigoDelegacionEnUso )



FUNCTION setPathEmpresa( cCodEmp )

   cPatEmp( cCodEmp )
   cPatEmp( cCodEmp, nil, .T. )
   cPatEmp( cCodEmp, nil, .T. )
   cPatEmp( cCodEmp, nil, .T. )
   cPatEmp( cCodEmp, nil, .T. )

RETURN ( nil )



FUNCTION GetCodEmp( dbfEmp )

   local oBlock
   local oError
   local nRec
   local cCodEmp
   local lClose   := .F.

   oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

   IF dbfEmp == NIL
      dbUseArea( .T., ( cDriver() ), ( cPatDat() + "EMPRESA.DBF" ), ( cCheckArea( "EMPRESA", @dbfEmp ) ), iif( .T. .OR. .F., ! .F., NIL ), .F. )
      if !lAIS() ; ordListAdd( ( cPatDat() + "EMPRESA.CDX" ) ) ; else ; ordSetFocus( 1 ) ; end
      lClose      := .T.
    end

   nRec           := ( dbfEmp )->( RecNo() )
   cCodEmp        := ""

   ( dbfEmp )->( dbGoTop() )
   while !( dbfEmp )->( eof() )
      if ( dbfEmp )->lActiva
         cCodEmp  := ( dbfEmp )->CodEmp
      end
      ( dbfEmp )->( dbSkip() )
   end





   if empty( cCodEmp )
      ( dbfEmp )->( dbGoTop() )
      cCodEmp     := ( dbfEmp )->CodEmp
   end

   ( dbfEmp )->( dbGoTo( nRec ) )

   RECOVER USING oError

      msgStop( "Imposible abrir todas las bases de datos " + Chr(13)+Chr(10) + ErrorMessage( oError ) )
      if lClose
         ( dbfEmp )->( dbCloseArea() )
      end

   end

   ErrorBlock( oBlock )

   if lClose
      ( dbfEmp )->( dbCloseArea() )
   end

RETURN ( cCodEmp )







FUNCTION mkReport( cPath, lAppend, cPathOld, oMeter )

   If( lAppend == nil, lAppend := .F., ) ;

   IF oMeter <> NIL
        oMeter:cText        := "Generando Bases"
      sysRefresh()
    end

   CreateDbfReport( cPath )

   rxReport( cPath, oMeter )

   if lAppend .AND. lIsDir( cPathOld )
      AppDbf( cPathOld, cPath, "CfgCar" )
   end

   if lAppend .AND. lIsDir( cPathOld )
      AppDbf( cPathOld, cPath, "CfgFav" )
   end

RETURN .T.



FUNCTION rxReport( cPath, oMeter )

   local dbfFolder
   local dbfFavorito

   If( cPath == nil, cPath := cPatEmp(), ) ;


   if !lExistTable( cPath + "CfgCar.Dbf" ) .OR. !lExistTable( cPath + "CfgFav.Dbf" )

      CreateDbfReport( cPath )

   end

   fEraseIndex( cPath + "CFGCAR.CDX" )

   dbUseArea( .T., cDriver(), cPath + "CFGCAR.DBF", cCheckArea( "CFGCAR", @dbfFolder ), .F. )
   if !( dbfFolder )->( neterr() )
      ( dbfFolder )->( __dbPack() )

      ( dbfFolder )->( ordCondSet("!Deleted()", {||!Deleted()}  ) )
      ( dbfFolder )->( ordCreate( cPath + "CFGCAR.CDX", "CUSRNOM", "CCODUSR + CNOMBRE", {|| Field->CCODUSR + Field->CNOMBRE } ) )

      ( dbfFolder )->( dbCloseArea() )

   else

      msgStop( "Imposible abrir en modo exclusivo la tabla de configuraciones" )

   end

   fEraseIndex( cPath + "CFGFAV.CDX" )

   dbUseArea( .T., cDriver(), cPath + "CFGFAV.DBF", cCheckArea( "CFGFAV", @dbfFavorito ), .F. )
   if !( dbfFavorito )->( neterr() )
      ( dbfFavorito )->( __dbPack() )

      ( dbfFavorito )->( ordCondSet("!Deleted()", {||!Deleted()}  ) )
      ( dbfFavorito )->( ordCreate( cPath + "CFGFAV.CDX", "CUSRFAV", "CCODUSR + CNOMFAV", {|| Field->CCODUSR + Field->CNOMFAV } ) )

      ( dbfFavorito )->( ordCondSet("!Deleted()", {||!Deleted()}  ) )
      ( dbfFavorito )->( ordCreate( cPath + "CFGFAV.CDX", "CUSRCAR", "CCODUSR + CCARPETA", {|| Field->CCODUSR + Field->CCARPETA } ) )

      ( dbfFavorito )->( ordCondSet("!Deleted()", {||!Deleted()}  ) )
      ( dbfFavorito )->( ordCreate( cPath + "CFGFAV.CDX", "CUSRRPT", "CCODUSR + CCARPETA + CNOMRPT", {|| Field->CCODUSR + Field->CCARPETA + Field->CNOMRPT } ) )

      ( dbfFavorito )->( ordCondSet("!Deleted()", {||!Deleted()}  ) )
      ( dbfFavorito )->( ordCreate( cPath + "CFGFAV.CDX", "CUSRCARFAV", "CCODUSR + CCARPETA + CNOMFAV", {|| Field->CCODUSR + Field->CCARPETA + Field->CNOMFAV } ) )

      ( dbfFavorito )->( dbCloseArea() )

   else

      msgStop( "Imposible abrir en modo exclusivo la tabla de configuraciones" )

   end

RETURN nil



FUNCTION CreateDbfReport( cPath )

   If( cPath == nil, cPath := cPatEmp(), ) ;

   if !lExistTable( cPath + "CFGCAR.DBF" )
      dbCreate( cPath + "CFGCAR.DBF", aSqlStruct( aItmDbfReport() ), cDriver() )
   end

   if !lExistTable( cPath + "CFGFAV.DBF" )
      dbCreate( cPath + "CFGFAV.DBF", aSqlStruct( aItmDbfFavoritos() ), cDriver() )
   end

RETURN nil



FUNCTION aItmDbfReport()

   local aBase := {}

   aAdd( aBase, { "cCodUsr",  "C",   3, 0, "Código de usuario" } )
   aAdd( aBase, { "cNombre",  "C", 100, 0, "Nombre de la carpeta" } )

RETURN ( aBase )



FUNCTION aItmDbfFavoritos()

   local aBase := {}

   aAdd( aBase, { "cCodUsr",  "C",   3, 0, "Código de usuario" } )
   aAdd( aBase, { "cCarpeta", "C", 100, 0, "Nombre de la carpeta" } )
   aAdd( aBase, { "cNomFav",  "C", 100, 0, "Descripción para favoritos" } )
   aAdd( aBase, { "cNomRpt",  "C", 100, 0, "Descripción original" } )

RETURN ( aBase )



FUNCTION lTactilMode()

RETURN ( "TACTIL" $ appParamsMain() )



FUNCTION lTpvMode()

RETURN ( "TPV" $ appParamsMain() )



FUNCTION ImgArtWeb( cDir )

   local oDlg
   local oActiveX
   local cEvents  := ""
   local oWndChild

   oDlg = TDialog():New(,,,,, "IMGARTWEB",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )

   oActiveX = THActiveX():ReDefine( 100, oDlg, "Shell.Explorer" )

   TButton():ReDefine( 2, {||oDlg:End()}, oDlg,,, .F.,,,, .F. )


   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|oActiveX:Do( "Navigate2", "http://www.google.com" )}, oDlg:bRClicked,,, )

RETURN nil



FUNCTION GoogleMaps( cStreetTo, cCityTo, cCountryTo )

   local oDlg
   local oWebMap
   local oActiveX

   local oStreetFrom
   local cStreetFrom
   local oCityFrom
   local cCityFrom
   local oCountryFrom
   local cCountryFrom

   cStreetTo         := Padr( cStreetTo, 200 )
   cCityTo           := Padr( cCityTo, 200 )

   if empty( cCountryTo )
      cCountryTo     := Padr( "Spain", 100 )
   end

   cStreetFrom       := Space( 200 )
   cCityFrom         := Space( 200 )
   cCountryFrom      := Space( 100 )

   oWebMap           := WebMap():new()

   oDlg = TDialog():New(,,,,, "GoogleMap",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )

   oActiveX := TActiveX():Redefine( 100, oDlg, "Shell.Explorer" )

   oStreetFrom := TGetHlp():ReDefine( 200, { | u | If( PCount()==0, cStreetFrom, cStreetFrom:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,, {|Self|load( oStreetFrom, oCityFrom, oCountryFrom )}, nil, "gc_factory_16",, )

   oCityFrom := TGetHlp():ReDefine( 210, { | u | If( PCount()==0, cCityFrom, cCityFrom:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )

   oCountryFrom := TGetHlp():ReDefine( 220, { | u | If( PCount()==0, cCountryFrom, cCountryFrom:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )

   TGetHlp():ReDefine( 300, { | u | If( PCount()==0, cStreetTo, cStreetTo:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )

   TGetHlp():ReDefine( 310, { | u | If( PCount()==0, cCityTo, cCityTo:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )

   TGetHlp():ReDefine( 320, { | u | If( PCount()==0, cCountryTo, cCountryTo:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )

   TButton():ReDefine( 1, {||ShowInWin( cStreetFrom, cCityFrom, cCountryFrom, cStreetTo, cCityTo, cCountryTo, oWebMap, oActiveX )}, oDlg,,, .F.,,,, .F. )

   TButton():ReDefine( 3, {||ShowInExplorer( cStreetFrom, cCityFrom, cCountryFrom, cStreetTo, cCityTo, cCountryTo, oWebMap, oActiveX )}, oDlg,,, .F.,,,, .F. )

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|ShowInWin( cStreetFrom, cCityFrom, cCountryFrom, cStreetTo, cCityTo, cCountryTo, oWebMap, oActiveX )}, oDlg:bRClicked,,, )

RETURN nil



static FUNCTION Load( oStreetFrom, oCityFrom, oCountryFrom )

   oStreetFrom:cText(   Padr( cDomEmp(), 200 ) )
   oCityFrom:cText(     Padr( Rtrim( cPobEmp() ) + Space( 1 ) + Rtrim( cPrvEmp() ), 200 ) )
   oCountryFrom:cText(  Padr( "Spain", 100 ) )

RETURN nil



static FUNCTION ShowInWin( cStreetFrom, cCityFrom, cCountryFrom, cStreetTo, cCityTo, cCountryTo, oWebMap, oActiveX )

   oWebMap:aAddress  := {}

   if !empty( cStreetFrom )
      oWebMap:AddStopSep( cStreetFrom, cCityFrom, , , cCountryFrom )
   end

   oWebMap:AddStopSep( cStreetTo, cCityTo, , , cCountryTo )

   oWebMap:GenLink()

   if !empty( oWebMap:cLink )
      oActiveX:Do( "Navigate", oWebMap:cLink )
      sysrefresh()
   end

RETURN nil



static FUNCTION ShowInExplorer( cStreetFrom, cCityFrom, cCountryFrom, cStreetTo, cCityTo, cCountryTo, oWebMap, oActiveX )

   oWebMap:aAddress  := {}

   if !empty( cStreetFrom )
      oWebMap:AddStopSep( cStreetFrom, cCityFrom, , , cCountryFrom )
   end

   oWebMap:AddStopSep( cStreetTo, cCityTo, , , cCountryTo )

   oWebMap:ShowMap()

RETURN nil



FUNCTION cUnidadMedicion( cDbf, lParentesis )

   local cUnidad        := ""

   If( lParentesis == nil, lParentesis := .F., ) ;

   if !empty( ( cDbf )->nMedUno )
      cUnidad           += AllTrim( Trans( ( cDbf )->nMedUno, MasUnd() ) )
   end

   if !empty( ( cDbf )->nMedDos )
      cUnidad           += " x "
      cUnidad           += AllTrim( Trans( ( cDbf )->nMedDos, MasUnd() ) )
   end

   if !empty( ( cDbf )->nMedTre )
      cUnidad           += " x "
      cUnidad           += AllTrim( Trans( ( cDbf )->nMedTre, MasUnd() ) )
   end

   if lParentesis .AND. !empty( cUnidad )
      cUnidad           := "(" + cUnidad + ")"
   end

RETURN ( cUnidad )



FUNCTION sErrorBlock( bBlock )

   nError++

   titulo( str( nError ) )
   logwrite( "suma control del errores 1:" + procname(1) + "2:" + procname(2) + str( nError ) )

RETURN ( ErrorBlock( {| oError | ApoloBreak( oError ) } ) )

FUNCTION rErrorBlock( oBlock )

   nError--

   titulo( str( nError ) )
   logwrite( "resta control del errores 1:" + procname(1) + "2:" + procname(2) + str( nError ) )

RETURN ( ErrorBlock( oBlock ) )



FUNCTION appSettings()

   Set( 4, "dd/mm/yyyy" )
   Set( 116, "hh:mm:ss" )
   Set( 11, "ON" )
   Set( 8, "OFF" )
   Set( 5, 2000 )
   Set( 44, "ON" )
   Set( 1, "ON" )
   Set( 45, "ON" )
   Set( 46, 1 )
   Set( 3, 6 )

   setHandleCount( 240 )

   setResDebug( .T. )

   fwNumFormat( "E", .T. )

RETURN nil



FUNCTION appLoadAds()

   if !file( cIniAplication() ) .AND. file( fullCurDir() + "Gestion.Ini" )
      fRename( fullCurDir() + "Gestion.Ini", cIniAplication() )
   end

   cAdsIp(     GetPvProfString(  "ADS",      "Ip",       hb_curdrive() + ":\", cIniAplication() ) )
   cAdsData(   GetPvProfString(  "ADS",      "Data",     curdir() + if( !empty( curdir() ), "\", "" ), cIniAplication() ) )
   cAdsPort(   GetPvProfString(  "ADS",      "Port",     "",   cIniAplication() ) )
   nAdsServer( GetPvProfInt(     "ADS",      "Server",   7,    cIniAplication() ) )
   cAdsFile(   GetPvProfString(  "ADS",      "File",     "gestool.add",   cIniAplication() ) )

RETURN nil



FUNCTION AppSql( cEmpDbf, cEmpSql, cFile )

   local oBlock
   local oError
   local dbfOld
    local dbfTmp
   local dbfDbf      := fullCurDir() + cEmpDbf + "\" + cFile + ".Dbf"
   local cdxDbf      := fullCurDir() + cEmpDbf + "\" + cFile + ".Cdx"
   local dbfSql      := cEmpSql + "\" + cFile + ".Dbf"
   local cdxSql      := cEmpSql + "\" + cFile + ".Cdx"

   if !File( dbfDbf )
      RETURN nil
   end

   if !lExistTable( dbfSql )
      RETURN nil
   end

   oBlock            := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE



      dbUseArea( .T., ( cLocalDriver() ), ( dbfDbf ), ( cCheckArea( "OLD", @dbfOld ) ), iif( .F. .OR. .F., ! .F., NIL ), .F. )
      if File( cdxDbf )
         if !lAIS() ; ordListAdd( ( cdxDbf ) ) ; else ; ordSetFocus( 1 ) ; end
      end



      dbUseArea( .T., "SQLRDD", ( dbfSql ), ( cCheckArea( "TMP", @dbfTmp ) ), iif( .F. .OR. .F., ! .F., NIL ), .F. )
      if lExistIndex( cdxSql )
         if !lAIS() ; ordListAdd( ( cdxSql ) ) ; else ; ordSetFocus( 1 ) ; end
      end





      while !( dbfOld )->( eof() )
         dbPass( dbfOld, dbfTmp, .T. )
         ( dbfOld )->( dbSkip() )
         sysRefresh()
      end

   RECOVER USING oError

      msgStop( "Imposible abrir todas las bases de datos " + Chr(13)+Chr(10) + ErrorMessage( oError ) )

   end

   ErrorBlock( oBlock )

    ( dbfOld )->( dbCloseArea() )
    ( dbfTmp )->( dbCloseArea() )

RETURN NIL




FUNCTION cSqlTableName( cTableName )

   if cTableName[2] == ":"
      cTableName  := SubStr( cTableName, 3 )
   endif

   cTableName     := StrTran( AllTrim( Lower( cTableName ) ), ".dbf", "_dbf" )
   cTableName     := StrTran( cTableName, ".ntx", "" )
   cTableName     := StrTran( cTableName, ".cdx", "" )
   cTableName     := StrTran( cTableName, "\", "_" )

   if cTableName[1] == "/"
      cTableName  := SubStr( cTableName, 2 )
   endif

   cTableName     := StrTran( cTableName, "/", "_" )
   cTableName     := StrTran( cTableName, ".", "_" )
   cTableName     := AllTrim( cTableName )

   if len( cTableName ) > 30
      cTableName  := SubStr( cTableName, len( cTableName ) - 30 + 1 )
   endif

RETURN ( cTableName )



FUNCTION PrinterPreferences( oGet )



   PrinterSetup()

   if !empty( oGet )
      oGet:cText( ImpresoraDefectoUsuario() )
   end

RETURN ( Nil )



FUNCTION DateTimeRich( oRTF )

   local aLbx := REGetDateTime()
   local nLbx := 1
   local oDlg, oLbx

   oDlg = TDialog():New(,,,,, "DateRich",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )

   oLbx := TListBox():ReDefine( 101, { | u | If( PCount()==0, nLbx, nLbx:= u ) }, aLbx,, oDlg,,,,,,,,, .F.,, )

   TButton():ReDefine( 201, {||( oDlg:End( 1 ) )},,,, .F.,,,, .F. )

   TButton():ReDefine( 202, {||( oDlg:End() )},,,, .F.,,,, .F. )

   oDlg:AddFastKey( 116, {|| oDlg:End( 1 ) } )

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

   if oDlg:nResult == 1
      oRTF:InsertRTF( aLbx[ nLbx ] )
   endif

RETURN nil



FUNCTION FindRich( oRTF )

   local oDlg
   local oFind
   local cFind    := Space( 100 )
   local nDir     := 1
   local lCase    := .F.
   local lWord    := .T.

   oDlg = TDialog():New(,,,,, "FindRich",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )

   oFind := TGetHlp():ReDefine( 101, { | u | If( PCount()==0, cFind, cFind:= u ) }, oDlg,,,,,,,,, .T.,,, .F., .F.,,,,,, nil,,, )

   TRadMenu():Redefine( { | u | If( PCount()==0, nDir, nDir:= u ) }, oDlg,, { 102, 103 },,,,, .F.,, )

   TCheckBox():ReDefine( 104, { | u | If( PCount()==0, lCase, lCase:= u ) }, oDlg,,,,,,, .F.,, .F. )

   TCheckBox():ReDefine( 105, { | u | If( PCount()==0, lWord, lWord:= u ) }, oDlg,,,,,,, .F.,, .F. )

   TButton():ReDefine( 201, {||( oRTF:SetFocus(), oRTF:Find( AllTrim( cFind ), ( nDir == 1 ), lCase, lWord ) )},,,, .F.,,,, .F. )

   TButton():ReDefine( 202, {||( oDlg:End() )},,,, .F.,,,, .F. )

   oDlg:bStart := { || oDlg:SetFocus() }

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,, ! .T.,, oDlg:bRClicked,,, )

RETURN nil



FUNCTION ReportBackLine( oInf, nLines )

   If( nLines == nil, nLines := 1, ) ;

   if !empty( oInf )
      oInf:BackLine( nLines )
   end

RETURN ( "" )



FUNCTION SetBrwOpt( cName, cOption )

RETURN ( writePProString( "browse", cName, cValToChar( cOption ), cIniEmpresa() ) )



FUNCTION GetBrwOpt( cName )

RETURN ( GetPvProfInt( "browse", cName, 2, cIniEmpresa() ) )



FUNCTION setGridOrder( cName, cOption )

RETURN ( writePProString( "grid", cName, cValToChar( cOption ), cIniEmpresa() ) )



FUNCTION getGridOrder( cName )

RETURN ( getPvProfString( "grid", cName, "", cIniEmpresa() ) )



FUNCTION cPatPc( cPath )

   if !empty( cPath )
      cPathPC     := cPath
   end

RETURN ( cPathPc )



FUNCTION cEmpUsr( cEmp )

   if cEmp <> nil
      cEmpUsr  := cEmp
   end

RETURN cEmpUsr



FUNCTION lGrupoEmpresa( cCodEmp, dbfEmpresa )

   local oBlock
   local oError
   local lClose   := .F.
   local lGrupo   := .F.

   oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

   if empty( dbfEmpresa )
      dbUseArea( .T., ( cDriver() ), ( cPatDat() + "EMPRESA.DBF" ), ( cCheckArea( "EMPRESA", @dbfEmpresa ) ), iif( .T. .OR. .F., ! .F., NIL ), .F. )
      if !lAIS() ; ordListAdd( ( cPatDat() + "EMPRESA.CDX" ) ) ; else ; ordSetFocus( 1 ) ; end
      lClose      := .T.
   end

   if dbSeekInOrd( cCodEmp, "CodEmp", dbfEmpresa )
      lGrupo      := ( dbfEmpresa )->lGrupo
   end

   RECOVER USING oError

      msgStop( ErrorMessage( oError ), "Imposible abrir todas las bases de datos" )

      if lClose
         ( dbfEmpresa )->( dbCloseArea() )
      end

   end

   ErrorBlock( oBlock )

   if lClose
      ( dbfEmpresa )->( dbCloseArea() )
   end

RETURN ( lGrupo )



FUNCTION cCodigoGrupo( cCodEmp, dbfEmpresa )

   local nRec
   local oBlock
   local oError
   local lClose   := .F.
   local cGrupo   := ""

   oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

   if empty( dbfEmpresa )
      dbUseArea( .T., ( cDriver() ), ( cPatDat() + "Empresa.Dbf" ), ( cCheckArea( "Empresa", @dbfEmpresa ) ), .T. )
      if !lAIS() ; ( dbfEmpresa )->( ordListAdd( ( cPatDat() + "Empresa.Cdx" ) ) ) ; else ; ordSetFocus( 1 ) ; end

      lClose      := .T.
   else
      nRec        := ( dbfEmpresa )->( Recno() )
   end

   if dbSeekInOrd( cCodEmp, "CodEmp", dbfEmpresa )
      cGrupo      := ( dbfEmpresa )->cCodGrp
   end

   RECOVER USING oError

      msgStop( ErrorMessage( oError ), "Imposible abrir todas las bases de datos" )

      if lClose
         ( dbfEmpresa )->( dbCloseArea() )
      else
         ( dbfEmpresa )->( dbGoTo( nRec ) )
      end

   end

   ErrorBlock( oBlock )

   if lClose
      ( dbfEmpresa )->( dbCloseArea() )
   else
      ( dbfEmpresa )->( dbGoTo( nRec ) )
   end

RETURN ( cGrupo )



FUNCTION cItemsToReport( aItems )

   local aItem
   local cString  := ""

   for each aItem in aItems
      if !empty( aItem[ 5 ] )
         cString  += aItem[ 1 ] + "=" + aItem[ 5 ] + ";"
      end
   next

RETURN ( cString )



FUNCTION cObjectsToReport( oDbf )

   local oItem
   local cString  := ""

   for each oItem in oDbf:aTField

      if !empty( oItem:cComment ) .AND. !( oItem:lCalculate )
         cString  += oItem:cName + "=" + oItem:cComment + ";"
      end

   next

RETURN ( cString )



FUNCTION aEmpGrp( cCodGrp, dbfEmp, lEmpresa )

   local nRec
   local nOrd
   local lClose            := .F.

   If( lEmpresa == nil, lEmpresa := .F., ) ;

   if !empty( cCodGrp )

      if empty( dbfEmp )

         dbUseArea( .T., ( cDriver() ), ( cPatDat() + "EMPRESA.DBF" ), ( cCheckArea( "EMPRESA", @dbfEmp ) ), iif( .T. .OR. .F., ! .F., NIL ), .F. )
         if !lAIS() ; ordListAdd( ( cPatDat() + "EMPRESA.CDX" ) ) ; else ; ordSetFocus( 1 ) ; end

         ( dbfEmp )->( OrdSetFocus( "cCodGrp" ) )

         lClose            := .T.

      else

         nOrd              := ( dbfEmp )->( OrdSetFocus( "cCodGrp" ) )
         nRec              := ( dbfEmp )->( Recno() )

      end

      aEmpresasGrupo       := {}

      if lEmpresa

         aAdd( aEmpresasGrupo, cCodGrp )

      else

         if ( dbfEmp )->( dbSeek( cCodGrp ) )

            while ( dbfEmp )->cCodGrp == cCodGrp .AND. !( dbfEmp )->( Eof() )

               aAdd( aEmpresasGrupo, ( dbfEmp )->CodEmp )

               ( dbfEmp )->( dbSkip() )

            end

         end

      end

      if lClose

         ( dbfEmp )->( dbCloseArea() )

      else

         ( dbfEmp )->( OrdSetFocus( nOrd ) )
         ( dbfEmp )->( dbGoTo( nRec ) )

      end

   end

RETURN ( aEmpresasGrupo )



FUNCTION cPatStk( cPath, lPath, lShort, lGrp )

   If( lPath == nil, lPath := .T., ) ;
   If( lShort == nil, lShort := .F., ) ;
   If( lGrp == nil, lGrp := .F., ) ;

   if lAds()
      RETURN ( cAdsUNC() + if( lGrp, "Emp", "Emp" ) + cPath + if( lPath, "\", "" ) )
   end

RETURN ( if( !lShort, fullCurDir(), "" ) + if( lGrp, "Emp", "Emp" ) + cPath + if( lPath, "\", "" ) )






FUNCTION Descrip( cFacCliL, cFacCliS )

   local cKey
   local cRETURN     := ""

   if !empty( ( cFacCliL )->cDetalle )
      cRETURN        := Rtrim( ( cFacCliL )->cDetalle )
   else
      cRETURN        := Rtrim( ( cFacCliL )->mLngDes )
   end

   if !empty( cFacCliS )

      ckey           := ( cFacCliL )->( fieldget( 1 ) ) + Str( ( cFacCliL )->( fieldget( 2 ) ) ) + ( cFacCliL )->( fieldget( 3 ) ) + Str( ( cFacCliL )->nNumLin, 4 )

      cRETURN        += SerialDescrip( cKey, cFacCliS )

   end

RETURN ( cRETURN )



FUNCTION DescripLeng( cFacCliL, cFacCliS, cArtLeng )

    local nOrd
    local cKey
    local cRETURN     := ""
    local nOrdAnt     := ( cArtLeng )->( OrdSetFocus( "CARTLEN" ) )

    if !( cArtLeng )->( dbSeek( ( cFacCliL )->cRef + getLenguajeSegundario() ) )

      if !empty( ( cFacCliL )->cDetalle )
        cRETURN       := Rtrim( ( cFacCliL )->cDetalle )
      else
        cRETURN       := Rtrim( ( cFacCliL )->mLngDes )
      end

    else

      if !empty( ( cArtLeng )->cDesArt )
        cRETURN       := AllTrim( ( cArtLeng )->cDesArt )
      else
        cRETURN       := AllTrim( ( cArtLeng )->cDesTik )
      end

    end

    if !empty( cFacCliS )

        nOrd           := ( cFacCliL )->( OrdSetFocus( 1 ) )
        cKey           := ( cFacCliL )->( OrdKeyVal() ) + Str( ( cFacCliL )->nNumLin, 4 )

        cRETURN        += SerialDescrip( cKey, cFacCliS )

        ( cFacCliL )->( OrdSetFocus( nOrd ) )

    end

  ( cArtLeng )->( OrdSetFocus( "nOrdAnt" ) )

RETURN ( cRETURN )



FUNCTION SerialDescrip( cKey, cFacCliS )

   local nOrd
   local nInc
   local nLast
   local cLast
   local nPrior
   local cPrior
   local cRETURN           := ""

   nInc                    := 0
   nOrd                    := ( cFacCliS )->( OrdSetFocus( 1 ) )

   if ( cFacCliS )->( dbSeek( cKey ) )

      while ( ( cFacCliS )->( ordKeyVal() ) == cKey .AND. !( cFacCliS )->( eof() ) )

         if empty( nPrior )
            nInc           := 0
            cPrior         := ( cFacCliS )->cNumSer
            nPrior         := SpecialVal( ( cFacCliS )->cNumSer )
         else
            nInc++
         end

         if !empty( nPrior ) .AND. ( nInc <> 0 )

            if ( SpecialVal( ( cFacCliS )->cNumSer ) == nPrior + nInc )

               cLast       := ( cFacCliS )->cNumSer
               nLast       := SpecialVal( ( cFacCliS )->cNumSer )

            else

               cRETURN     += Alltrim( cPrior )

               if !empty( nLast )
                  cRETURN  += "-"
                  cRETURN  += Alltrim( cLast )
               end

               cRETURN     += ","

               nInc        := 0
               nLast       := nil
               cPrior      := ( cFacCliS )->cNumSer
               nPrior      := SpecialVal( ( cFacCliS )->cNumSer )

            end

         end

         ( cFacCliS )->( dbSkip() )

      end

      if !empty( nPrior )
         cRETURN           += Alltrim( cPrior )
      end

      if !empty( nLast )
         cRETURN           += "-"
         cRETURN           += Alltrim( cLast )
      end

      cRETURN              := Space( 1 ) + "[" + cRETURN + "]"

   end

   ( cFacCliS )->( OrdSetFocus( nOrd ) )

RETURN ( cRETURN )



FUNCTION AppDbf( cEmpOld, cEmpTmp, cFile, aStruct )

   local oBlock
   local oError
   local dbfOld
    local dbfTmp
   local dbfNamOld   := cEmpOld + cFile + ".Dbf"
   local dbfNamTmp   := cEmpTmp + cFile + ".Dbf"
   local cdxNamOld   := cEmpOld + cFile + ".Cdx"
   local cdxNamTmp   := cEmpTmp + cFile + ".Cdx"

   IF !File( dbfNamOld )
      MsgStop( "No existe : " + dbfNamOld )
      RETURN NIL
    end

   IF !File( dbfNamTmp )
      MsgStop( "No existe : " + dbfNamTmp )
      RETURN NIL
    end

   oBlock            := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

   dbUseArea( .T., ( cDriver() ), ( dbfNamOld ), ( cCheckArea( "OLD", @dbfOld ) ), iif( .F. .OR. .T., ! .T., NIL ), .F. )
   if File( cdxNamOld )
      if !lAIS() ; ordListAdd( ( cdxNamOld ) ) ; else ; ordSetFocus( 1 ) ; end
   end

   dbUseArea( .T., ( cDriver() ), ( dbfNamTmp ), ( cCheckArea( "TMP", @dbfTmp ) ), iif( .F. .OR. .T., ! .T., NIL ), .F. )
   if File( cdxNamTmp )
      if !lAIS() ; ordListAdd( ( cdxNamTmp ) ) ; else ; ordSetFocus( 1 ) ; end
   end

   if !empty( aStruct )

      while !( dbfOld )->( eof() )
         dbAppendDefault( dbfOld, dbfTmp, aStruct )
         ( dbfOld )->( dbSkip() )
      end

   else

      while !( dbfOld )->( eof() )
         dbPass( dbfOld, dbfTmp, .T. )
         ( dbfOld )->( dbSkip() )
      end

   end

   RECOVER USING oError

      msgStop( "Error en el trasbase de registros " + Chr(13)+Chr(10) + ErrorMessage( oError ) )

   end

   ErrorBlock( oBlock )

    ( dbfOld )->( dbCloseArea() )
    ( dbfTmp )->( dbCloseArea() )

RETURN NIL



FUNCTION GetSysDate()

RETURN ( if( dSysDate <> nil, dSysDate, Date() ) )



FUNCTION aEmp() ; RETURN ( aEmpresa )



FUNCTION getArrayEmpresa() ; RETURN ( aEmpresa )



FUNCTION setArrayEmpresa( aEmp )

   aEmpresa    := aEmp

RETURN ( aEmpresa )



FUNCTION cPathEmpresa()

RETURN ( cPatEmp )



FUNCTION cPatEmp( cPath, lFull )

   If( cPath == nil, cPath := "", ) ;
   If( lFull == nil, lFull := .F., ) ;

   if !empty( cPath )
      cPatEmp     := "Emp" + cPath
   end

   if lAds()
      RETURN ( cAdsUNC() + cPatEmp + "\" )
   end

   if lAIS() .AND. lFull
      RETURN ( cAdsUNC() + cPatEmp + "\" )
   end

   if lAIS() .AND. !lFull
      RETURN ( cPatEmp )
   end

   if lCdx()
      RETURN ( fullCurDir() + cPatEmp + "\" )
   end

RETURN ( if( lFull, fullCurDir(), "" ) + cPatEmp + "\" )



FUNCTION appParamsMain( paramsMain )

   if !empty( paramsMain )
      appParamsMain     := upper( paramsMain )
   end

RETURN ( appParamsMain )



FUNCTION appParamsSecond( paramsSecond )

   if !empty( paramsSecond )
      appParamsSecond   := upper( paramsSecond )
   end

RETURN ( appParamsSecond )



FUNCTION appParamsThird( paramsThird )

   if !empty( paramsThird )
      appParamsThird   := upper( paramsThird )
   end

RETURN ( appParamsThird )



FUNCTION appConnectADS()

   local TDataCenter

   lAIS( .T. )

   rddRegister( "ADS", 1 )
   rddSetDefault( "ADSCDX" )

   adsSetServerType( nAdsServer() )
   adsSetFileType( 2 )
   adsRightsCheck( .F. )

   adsLocking( .T. )


   adsSetDeleted( .T. )



   TDataCenter          := TDataCenter()

   TDataCenter:ConnectDataDictionary()

RETURN ( TDataCenter:lAdsConnection )



FUNCTION appConnectCDX()

    lCdx( .T. )
    rddSetDefault( "DBFCDX" )

RETURN ( .T. )



FUNCTION runReportGalery( cFastReport )

   local nLevel         := Auth():Level( "galeria_de_informes" )

   If( cFastReport == nil, cFastReport := "", ) ;

   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      RETURN nil
   end

   if DirChange( fullCurDir() ) <> 0
      MsgStop( "No puedo cambiar al directorio " + fullCurDir() )
      RETURN nil
   end

   if file( fullCurDir() + "RptApolo.Exe" )

      nHndReport        := winExec( fullCurDir() + "RptApolo.Exe " + cCodEmp() + " " + Auth():Codigo() + " " + cFastReport, 1 )

      if !( nHndReport > 21 .OR. nHndReport < 0 )
         msgStop( "Error en la ejecución de la galeria de informes" )
      end

   end

RETURN nil



FUNCTION runFastGallery( cFastReport )

   local nLevel         := Auth():Level( "01119" )

   If( cFastReport == nil, cFastReport := "", ) ;

   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      RETURN nil
   end

   if dirchange( fullCurDir() ) <> 0
      MsgStop( "No puedo cambiar al directorio " + fullCurDir() )
      RETURN nil
   end

   if file( fullCurDir() + "gestool.exe" )
      nHndReport        := winExec( fullCurDir() + "gestool.exe " + Auth():Uuid() + " " + cCodEmp() + " " + cFastReport, 1 )

      if !( nHndReport > 21 .OR. nHndReport < 0 )
         msgStop( "Error en la ejecución de la galeria de informes" )
      end
   end

RETURN nil



FUNCTION cIniEmpresa()

RETURN ( cPath( cPatEmp() ) + "Empresa.Ini" )



FUNCTION cIniAplication()

RETURN ( fullCurDir() + "GstApolo.Ini" )



FUNCTION IsMuebles()

RETURN ( "MUEBLES" $ appParamsMain() )



FUNCTION ChmHelp( cTema )

RETURN WinExec( ( "HH " + cPatHelp() + "HELP.CHM::/" + AllTrim( cTema ) + ".HTM" ) )



FUNCTION cPatHelp()

RETURN ( fullCurDir() + "Help\" )



FUNCTION cPatReporting()

RETURN ( fullCurDir() + "Reporting\" )



FUNCTION cPatDocuments( cSubDirectory )

   if !empty( cSubDirectory )
      RETURN ( fullCurDir() + "Documents\" + cSubDirectory + "\" )
   end

RETURN ( fullCurDir() + "Documents\" )



FUNCTION cPatLabels( cSubDirectory )

   if !empty( cSubDirectory )
      RETURN ( fullCurDir() + "Labels\" + cSubDirectory + "\" )
   end

RETURN ( fullCurDir() + "Labels\" )



FUNCTION cPatUserReporting()

RETURN ( fullCurDir() + "UserReporting\" )



FUNCTION cPatConfig()

RETURN ( fullCurDir() + "Config\" )



FUNCTION HtmlHelp()

RETURN ( "" )



FUNCTION lUsrMaster()

RETURN ( Auth():Codigo() == "000" )



FUNCTION IsPda()

RETURN ( "PDA" $ appParamsMain() )



FUNCTION cPatSnd( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Snd\" )



FUNCTION cEmpTmp( lPath, lShort )

   If( lPath == nil, lPath := .T., ) ;
   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "EmpTmp" + if( lPath, "\", "" ) )



FUNCTION cPatUsr()

RETURN ( fullCurDir() + "Usr\" )



FUNCTION cImp()

   local cImp  := uFieldEmpresa( "cNomImp" )

   if !IsChar( cImp )
      cImp     := ""
   end

RETURN ( cImp )



FUNCTION addMnuNext( cName, uAction )

   if aScan( aMnuNext, {|c| c[1] == cName } ) == 0
      if valtype( uAction ) == "C"
         aAdd( aMnuNext, { cName, &( "{||" + uAction + "() }" ) } )
      else
         aAdd( aMnuNext, { cName, uAction } )
      end
   end

RETURN .T.



FUNCTION cValToChar( uVal )

   local cType := ValType( uVal )

   do case
      case cType == "C" .OR. cType == "M"
           RETURN uVal

      case cType == "D"
           RETURN DToC( uVal )

      case cType == "L"
           RETURN If( uVal, ".T.", ".F." )

      case cType == "N"
           RETURN AllTrim( Str( uVal ) )

      case cType == "B"
           RETURN "{|| ... }"

      case cType == "A"
           RETURN "{ ... }"

      case cType == "O"
           RETURN "Object"

      otherwise
           RETURN ""
   endcase

RETURN nil



FUNCTION cCharToVal( xVal, cType )

   local cTemp      := ""

   If( cType == nil, cType := ValType( xVal ), ) ;

   do case
      case cType == "C" .OR. cType == "M"

         if !empty( xVal )
            cTemp   := Padr( Rtrim( xVal ), 100 )
         end









      case cType == "N"
         cTemp    := Val( cValToChar( xVal ) )

      case cType == "D"

         cTemp    := Ctod( Rtrim( cValToChar( xVal ) ) )

      case cType == "L"
         if "S" $ Rtrim( Upper( xVal ) )
            cTemp := .T.
         else
            cTemp := .F.
         end

   end

RETURN ( cTemp )



FUNCTION cValToText( uVal, lBarraFecha )

   local cType             := ValType( uVal )

   If( lBarraFecha == nil, lBarraFecha := .F., ) ;

   do case
      case cType == "C" .OR. cType == "M"
           RETURN uVal

      case cType == "D"
           if lBarraFecha
               RETURN DToC( uVal )
           else
               RETURN StrTran( DToC( uVal ), "/", "" )
           end

      case cType == "L"
           RETURN If( uVal, "S", "N" )

      case cType == "N"
           RETURN AllTrim( Str( uVal ) )

      case cType == "B"
           RETURN "{|| ... }"

      case cType == "A"
           RETURN "{ ... }"

      case cType == "O"
           RETURN "Object"

      otherwise
           RETURN ""
   endcase

RETURN nil



FUNCTION dToIso( dDate )

   local cDate := ""

   if Valtype( dDate ) <> "D"
      dDate    := Date()
   endif

   cDate       := Alltrim( Str( Year( dDate ) ) + "-" + StrZero( Month( dDate ), 2 ) + "-" + StrZero( Day( dDate ), 2 ) )

RETURN ( cDate )



FUNCTION LogWrite( cText, cFileName )

   local nHand

   If( cFileName == nil, cFileName := "Trace.Log", ) ;

   if !empty( cText )

      if !File( cFileName )
         nHand       := fCreate( cFileName )
      else
        nHand        := fOpen( cFileName, 1 )
      endif

      fSeek( nHand, 0 , 2 )

      fWrite( nHand, Time() + "-" + Trans( Seconds(), "999999.9999" ) + Space( 1 ) )
      fWrite( nHand, cValToChar( cText ) + Chr(13)+Chr(10) )

      fClose( nHand )

   end

RETURN NIL





_HB_CLASS ApoloBtnBmp ; function ApoloBtnBmp ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ApoloBtnBmp", iif( .T., { @TBtnBmp() }, { @HBObject() } ), @ApoloBtnBmp() ) ) ;

   _HB_MEMBER aGrad(); oClass:AddInline( "aGrad", {|Self | ( ( Self ) ), Eval( If( ::bClrGrad == nil, ::oWnd:bClrGrad, ::bClrGrad ), ( ::lMOver .OR. ::lBtnDown ) )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ApoloBtnBmp ;



FUNCTION PicOut()

   if empty( cDefPicOut )
      cDefPicOut  := cPorDiv( cDivEmp() )
   end

RETURN ( cDefPicOut )



FUNCTION cUsrTik( cCodUsr )

   if !empty( cCodUsr )
      cUsrTik     := cCodUsr
   end

RETURN cUsrTik



FUNCTION cDelUsrTik( cCodUsr )

   cUsrTik     := Space(3)

RETURN .T.



FUNCTION cPatLog( lShort )

   If( lShort == nil, lShort := .F., ) ;

RETURN ( if( !lShort, fullCurDir(), "" ) + "Log\" )



FUNCTION cCodigoEmpresa( xValue )

   if !empty( xValue )
      cCodEmp     := xValue
   end

RETURN ( cCodEmp )


Static FUNCTION lControlAcceso()

   if lCheckPerpetuoMode()

      lDemoMode( .F. )

      RETURN .T.

   end

RETURN .F.



FUNCTION lCheckPerpetuoMode( nSerialUSR )

   local n
   local cFileIni
   local oSerialHD
   local nSerialHD      := Val( AllTrim( Str( Abs( nSerialHD() ) ) + getExeDate() ) )
   local aSerialCRC     := {}
   local nSerialCRC     := 0

   if empty( nSerialHD )
      RETURN .F.
   end

   cFileIni             := FullCurDir() + "2K21.Num"



   for n := 1 to 50

      nSerialCRC        := Val( GetPvProfString( "Main", "Access code " + Str( n, 2 ), "0", cFileIni ) )

      if !empty( nSerialCRC )

         aAdd( aSerialCRC, nSerialCRC )

         if nSerialCRC == nXor( nSerialHD, 12345677654321 )

            RETURN .T.

         end

      end

   next



   if !empty( nSerialUSR )

      if nSerialUSR == nXor( nSerialHD, 12345677654321 )

         aAdd( aSerialCRC, nSerialUSR )

         for n := 1 to len( aSerialCRC )
            WritePProString( "Main", "Access code " + Str( n, 2 ), cValToChar( aSerialCRC[ n ] ), cFileIni )
         next

         RETURN .T.

      end

   end

RETURN .F.



PROCEDURE xmlIterator( cFileName, cNode, cAttrib, cValue, cData )

   LOCAL hFile, cXml
   LOCAL oDoc, oNode, oIter, lFind
   LOCAL cText    := ""

   Set( 1, "OFF" )

   InvalidateRect( GetActiveWindow(), 0, .T. )

   cText          += "X H A R B O U R - XML ITERATOR test "

   IF cFileName == NIL
      cFileName := "xmltest.xml"
   ENDIF


   IF ValType( cNode ) == "C" .AND. Len( cNode ) == 0
      cNode := NIL
   ENDIF


   IF ValType( cAttrib ) == "C" .AND. Len( cAttrib ) == 0
      cAttrib := NIL
   ENDIF


   IF ValType( cValue ) == "C" .AND. Len( cValue ) == 0
      cValue := NIL
   ENDIF

   cText          +=  "Processing file " + cFileName + "..." + Chr(13)+Chr(10)

   oDoc := TXmlDocument():New( cFileName )

   IF oDoc:nStatus <> 1
      cText       +=  "Error While Processing File: "+cFileName
      cText       +=  "On Line: " + AllTrim( Str( oDoc:nLine ) )
      cText       +=  "Error: " + oDoc:ErrorMsg
      cText       +=  "Program Terminating, press any key"
      RETURN
   ENDIF

   lFind := ( cNode <> NIL .OR. cAttrib <> NIL .OR. cValue <> NIL .OR. cData <> NIL )

   cText          += "Navigating all nodes with a base iterator" + Chr(13)+Chr(10)

   oNode := oDoc:CurNode

if ! lFind

   while oNode <> NIL
      cXml := oNode:Path()
      IF cXml == NIL
         cXml :=  "(Node without path)"
      ENDIF

      cText       += Alltrim( Str( oNode:nType ) ) + ", " + cValToChar( oNode:cName ) + ", " + ValToPrg( oNode:aAttributes ) + ", " + cValToChar( oNode:cData ) + ": " + cValToChar( cXml ) + Chr(13)+Chr(10)

      oNode       := oDoc:Next()
   ENDDO

else
      cText       += "Iterator - Navigating all nodes" +  cValToChar( cNode ) +  "," + cValToChar( cAttrib ) + "=" + cValToChar( cValue ) + " with data having " + cValToChar( cData ) + Chr(13)+Chr(10)

      oIter := TXmlIterator():New( oDoc:oRoot )
      oIter:lRegex := .T.

      IF cNode <> NIL
         cNode := HB_RegexComp( cNode )
      ENDIF

      IF cAttrib <> NIL
         cAttrib := HB_RegexComp( cAttrib )
      ENDIF

      IF cValue <> NIL
         cValue := HB_RegexComp( cValue )
      ENDIF

      IF cData <> NIL
         cData := HB_RegexComp( cData )
      ENDIF

      oNode := oIter:Find( cNode, cAttrib, cValue, cData )

      WHILE oNode <> NIL
         cText    += "Found node " + oNode:Path() + ValToPrg( oNode:ToArray() ) + Chr(13)+Chr(10)
         oNode    := oIter:FindNext()
      ENDDO

endif

   cText          += "Terminated. Press any key to continue"

RETURN



FUNCTION lBancas()

RETURN ( "BANCAS" $ appParamsMain() )



FUNCTION GetOleObject( cApp )

   local oObj

   BEGIN SEQUENCE WITH {| oErr | Break( oErr ) }
      oObj  := GetActiveObject( cApp )
   RECOVER
      BEGIN SEQUENCE WITH {| oErr | Break( oErr ) }
         oObj  := CreateObject( cApp )
      RECOVER
      END
   END

RETURN oObj



FUNCTION WinWordObj()

   local lInstalled
   local oWord

   if !( lInstalled == .F. )
      lInstalled  := ( ( oWord := GetOleObject( "Word.Application" ) ) <> nil )
   endif

RETURN oWord



FUNCTION ExcelObj()

   local lInstalled
   local oExcel

   if !( lInstalled == .F. )
      lInstalled  := ( ( oExcel := GetOleObject( "Excel.Application" ) ) <> nil )
   endif

RETURN oExcel



FUNCTION SunCalcObj()

   local lInstalled
   local oCalc

   if !( lInstalled == .F. )
      lInstalled  := ( ( oCalc := GetOleObject( "com.sun.star.ServiceManager" ) ) <> nil )
   endif

RETURN oCalc



FUNCTION GetExcelRange( cBook, cSheet, acRange )

   local oExcel, oBook, oSheet, oRange

   if ( oExcel := ExcelObj() ) <> nil
      if ( oBook := GetExcelBook( cBook ) ) <> nil
         BEGIN SEQUENCE WITH {| oErr | Break( oErr ) }
            oSheet   := oBook:WorkSheets( cSheet )
            if ValType( acRange ) == "A"

               oRange   := oSheet:Range( oSheet:Cells( acRange[ 1 ], acRange[ 2 ] ),  oSheet:Cells( acRange[ 3 ], acRange[ 4 ] ) )
            else
               oRange   := oSheet:Range( acRange )
            endif
         RECOVER
         END
      endif
   endif

RETURN oRange



FUNCTION GetExcelBook( cBook )

   local oExcel, oBook
   local c, n, nBooks

   cBook := Upper( cFilePath( cBook ) + cFileNoExt( cBook ) )
   if ( oExcel := ExcelObj() ) <> nil
      nBooks   := oExcel:WorkBooks:Count()
      for n := 1 to nBooks
         c  := oExcel:WorkBooks( n ):FullName
         if cBook == Upper( cFilePath( c ) + cFileNoExt( c ) )
            RETURN oExcel:WorkBooks( n )
         endif
      next
      BEGIN SEQUENCE WITH {| oErr | Break( oErr ) }
         oBook := oExcel:WorkBooks:Open( cBook )
      RECOVER
      END
   endif

RETURN oBook



FUNCTION SpecialVal( cNumber )

   local cChar
   local cResult  := ""

   cNumber        := Alltrim( cNumber )

   for each cChar in cNumber
      if Str( Val( cChar ) ) == cChar
         cResult  += cChar
      end
   next

RETURN ( Val( cResult ) )



FUNCTION ApoloMsgNoYes( cText, cTitle, lTactil )

   local oDlg
   local oBtnOk
   local oBtnCancel

   If( cText == nil, cText := "¿Desea eliminar el registro en curso?", ) ;
   If( cTitle == nil, cTitle := "Confirme", ) ;
   If( lTactil == nil, lTactil := .F., ) ;

   if lTactil
      oDlg = TDialog():New(,,,, ( cTitle ), "DeleteRecnoTct",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )
   else
      oDlg = TDialog():New(,,,, ( cTitle ), "DeleteRecno",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )
   end

   TSay():ReDefine( 100, {|| cText}, oDlg,,,, .F.,, .F., .F., )

   oBtnOk := TButton():ReDefine( 1, {||( oDlg:end( 1 ) )}, oDlg,,, .F.,,,, .F. )

   oBtnCancel := TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )

   oDlg:AddFastKey( 116, {|| oDlg:end( 1 ) } )

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN ( oDlg:nResult == 1 )



FUNCTION ApoloMsgStop( cText, cTitle )

   local oDlg
   local oBtnOk

   If( cText == nil, cText := "¿Desea eliminar el registro en curso?", ) ;
   If( cTitle == nil, cTitle := "¡Atención!", ) ;

   oDlg = TDialog():New(,,,, ( cTitle ), "MsgStopTCT",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )

   TSay():ReDefine( 100, {|| cText}, oDlg,,,, .F.,, .F., .F., )

   oBtnOk := TButton():ReDefine( 1, {||( oDlg:end( 1 ) )}, oDlg,,, .F.,,,, .F. )

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN ( oDlg:nResult == 1 )



FUNCTION ApoloErrorMsgStop( cText, cTitle )

   ApoloMsgStop( cText, cTitle )

RETURN ( .F. )



FUNCTION ApoloWaitSeconds( nSecs )

   local n

   for n := 1 to nSecs
      WaitSeconds( 1 )
      SysRefresh()
   next

RETURN nil



FUNCTION ApoloDescend( uParam )

RETURN ( Descend( uParam ) )



FUNCTION CreateFastReport()

   if empty( oFastReport )

      oFastReport    := frReportManager():new()

      oFastReport:LoadLangRes( "Spanish.Xml" )
      oFastReport:SetIcon( 1 )

   end

RETURN ( oFastReport )



FUNCTION DestroyFastReport()

   if empty( oFastReport )
      oFastReport:DestroyFR()
   end

RETURN ( nil )



FUNCTION cDirectorioImagenes()

  local cDirectorio := AllTrim( uFieldEmpresa( "CDIRIMG" ) )

  if Right( cDirectorio, 1 ) <> "\"
    cDirectorio     := cDirectorio + "\"
  end

RETURN ( cDirectorio )






FUNCTION RgbToRgbHex( nColorRgb )

   local cRgbHex  := ""

   cRgbHex        += "#"
   cRgbHex        += NumToHex( nRgbRed( nColorRgb ), 2 )
   cRgbHex        += NumToHex( nRgbGreen( nColorRgb ), 2 )
   cRgbHex        += NumToHex( nRgbBlue( nColorRgb ), 2 )

RETURN cRgbHex



FUNCTION InfoStack()

   local i
   local cStack

   i              := 2
   cStack         := ""

   while !empty( ProcName( i ) )
      cStack      += "Llamado desde " + Trim( ProcName( i ) ) + "(" + LTrim( Str( ProcLine( i ) ) ) + ")" + Chr(13)+Chr(10)
      i++
   enddo

   MsgInfo( cStack )

RETURN nil



FUNCTION lValidMail( cMail )

RETURN ( HB_RegExMatch( "[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}", cMail, .F. ) )



FUNCTION hashRecord( dbf )

  local n
  local hHash   := {=>}

  for n := 1 to ( dbf )->( fcount() )
    hSet( hHash, ( dbf )->( fieldname( n ) ), ( dbf )->( fieldget( n ) ) )
  next

RETURN ( hHash )



FUNCTION appendHashRecord( hHash, dbf, aExclude )

  ( dbf )->( dbappend() )
  if !( dbf )->( neterr() )
    writeHashRecord( hHash, dbf, aExclude )
  end

RETURN ( hHash )



FUNCTION writeHashRecord( hHash, dbf, aExclude )

  local n

  If( aExclude == nil, aExclude := {}, ) ;

  for n := 1 to ( dbf )->( fcount() )
    if hHasKey( hHash, ( dbf )->( fieldname( n ) ) ) .AND. aScan( aExclude, ( dbf )->( fieldname( n ) ) ) == 0
      ( dbf )->( fieldput( n, hGet( hHash, ( dbf )->( fieldname( n ) ) ) ) )
    end
  next

RETURN ( hHash )



FUNCTION readHashDictionary( hashTable, dbf )

  local hash      := {=>}

  hEval( hashTable, {|key,value| hSet( hash, key, ( dbf )->( fieldget( ( dbf )->( fieldPos( value ) ) ) ) ) } )

RETURN ( hash )



FUNCTION writeHashDictionary( hashValue, hashTable, dbf )

   local h
   local value

   for each h in hashValue
      value     := getValueHashDictionary( h:__enumKey(), hashTable )
      if value <> nil
         ( dbf )->( fieldput( ( dbf )->( fieldname( value ) ), h:__enumValue() ) )
      end
   next

RETURN ( nil )



FUNCTION getValueHashDictionary( key, hashTable )

   local n
   local value

   n  := hScan( hashTable, {|k,v,i| k == key } )
   if n <> 0
      value   := haaGetValueAt( hashTable, n )
   end

RETURN ( value )



FUNCTION hashDictionary( aItems )

   local aItem
   local hash        := {=>}

   for each aItem in aItems
      if !empty( aItem[6] )
         hSet( hash, aItem[6], aItem[1] )
      end
   next

RETURN ( hash )



FUNCTION hashDefaultValue( aItems )

  local aItem
  local hash        := {=>}

  for each aItem in aItems
    if !empty( aItem[6] ) .AND. isBlock( aItem[9] )
      hSet( hash, aItem[6], aItem[9] )
    end
  next

RETURN ( hash )



FUNCTION hashIndex( aItems )

   local aItem
   local hash        := {=>}

   for each aItem in aItems
      if !empty( aItem[1] )
         hSet( hash, aItem[1], aItem[2] )
      end
   next

RETURN ( hash )




FUNCTION getFieldNameFromDictionary( cName, hashDictionary )

  local cFieldName  := ""

  if empty( hashDictionary )
    RETURN ( cFieldName )
  end

  if hhaskey( hashDictionary, cName )
    cFieldName      := hGet( hashDictionary, cName )
  end

RETURN ( cFieldName )



FUNCTION cAlmUsr( cAlm )

   if cAlm <> nil .AND. oMsgAlmacen <> nil
      oMsgAlmacen:SetText( "Almacén : " + RTrim( cAlm ) )
   end

RETURN ( cAlm )



FUNCTION HtmlConvertChars( cString, cQuote_style, aTranslations )

   If( cQuote_style == nil, cQuote_style := "ENT_COMPAT", ) ;

   do case
      case cQuote_style == "ENT_COMPAT"
         aAdd( aTranslations, { '"', "&quot;"  } )
      case cQuote_style == "ENT_QUOTES"
         aAdd( aTranslations, { '"', "&quot;"  } )
         aAdd( aTranslations, { "'", "&#039;"  } )
      case cQuote_style == "ENT_NOQUOTES"
   end

RETURN TranslateStrings( cString, aTranslations )

FUNCTION TranslateStrings( cString, aTranslate )

   local aTran

   for each aTran in aTranslate
      if aTran[ 2 ] $ cString
         cString  := StrTran( cString, aTran[ 2 ], aTran[ 1 ] )
      endif
   next

RETURN cString

FUNCTION HtmlEntities( cString, cQuote_style )

   local i
   local aTranslations := {}

   for i := 160 TO 255
      aAdd( aTranslations, { Chr( i ), "&#" + Str( i, 3 ) + ";" } )
   next

RETURN HtmlConvertChars( cString, cQuote_style, aTranslations )



FUNCTION dateTimeToString( dDate, cTime )

RETURN ( dtoc( dDate ) + space( 1 ) + trans( cTime, "@R 99:99:99" ) )



FUNCTION dateTimeToTimeStamp( dDate, cTime )

   if at( ":", cTime ) == 0
      cTime    := trans( cTime, "@R 99:99:99" )
   end

RETURN ( hb_dtot( dDate, cTime ) )



FUNCTION validTime( uTime )

   local cTime
   local nHour
   local nMinutes
   local nSeconds

   if isObject( uTime )
      cTime       := uTime:varGet()
   else
      cTime       := uTime
   end

   nHour          := val( substr( cTime, 1, 2 ) )
   nMinutes       := val( substr( cTime, 3, 2 ) )
   nSeconds       := val( substr( cTime, 5, 2 ) )

   if !validHour( nHour )
      RETURN .F.
   end

   if !validMinutesSeconds( nMinutes )
      RETURN .F.
   end

   if !validMinutesSeconds( nSeconds )
      RETURN .F.
   end

RETURN ( .T. )

FUNCTION validHour( nHour )

RETURN ( nHour >= 0 .AND. nHour <= 23 )

FUNCTION validMinutesSeconds( nMinutes )

RETURN ( nMinutes >= 0 .AND. nMinutes <= 59 )



FUNCTION validHourMinutes( uTime )

   local cTime
   local nHour
   local nMinutes

   if isObject( uTime )
      cTime       := uTime:varGet()
   else
      cTime       := uTime
   end

   nHour          := val( substr( cTime, 1, 2 ) )
   nMinutes       := val( substr( cTime, 3, 2 ) )

   if !validHour( nHour )
      RETURN .F.
   end

   if !validMinutesSeconds( nMinutes )
      RETURN .F.
   end

RETURN ( .T. )



FUNCTION getSysTime()

RETURN ( strtran( time(), ":", "" ) )



FUNCTION getHoraInicioEmpresa()

RETURN ( uFieldEmpresa( "cIniJor" ) + "00")



FUNCTION DownLoadFileToUrl( cUrl, cName )

RETURN DOWNLOADFILE( cUrl, cName )



FUNCTION trimNif( cNif )

   cNif   := strtran( cNif, " ", "" )
   cNif   := strtran( cNif, ".", "" )
   cNif   := strtran( cNif, "-", "" )
   cNif   := strtran( cNif, "_", "" )

RETURN( cNif )



FUNCTION CreateAdminSQLWindow( oIconApp )

   if !( lInitCheck() )
      RETURN nil
   end









   oWnd := TMdiFrame():New( 0, 0, 26, 82, "Administrador : " + "Gestool" + Space( 1 ) + "2K25 (2025)",, ( BuildMenu() ),, oIconApp, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 231 + ( 234 * 256 ) + ( 238 * 65536 ) ),,,,,,, "oWnd",, )

   oWndBar                    := CreateAdminSQLAcceso( oWnd )
   oWndBar:CreateButtonBar( oWnd )



   oWnd:Cargo                 := appParamsMain()

   oWnd:bKeyDown              := { | nKey | StdKey( nKey ) }



   oWnd:oMsgBar               := TMsgBar():New( oWnd, "(c) Gestool 2025" + Space(2) + cNameVersion(), .F., .F., .F., .F., ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), , .F. )
   oWnd:oMsgBar:setFont( oFontLittelTitle() )






   oWnd:Activate( Upper("MAXIMIZED"), oWnd:bLClicked, oWnd:bRClicked, oWnd:bMoved, oWnd:bResized := { | nSizeType, nWidth, nHeight | ( WndResize( oWnd ) ) }, oWnd:bPainted := { | hDC, cPS | ( WndPaint( hDC, oWnd ) ) }, oWnd:bKeyDown, oWnd:bInit,,,,,,,,,,, oWnd:bLButtonUp, .F. )

   SysRefresh()

RETURN nil



FUNCTION aNombreTarifas()

   local n
   local aNombreTarifas   := {}

   for n := 1 to 6

      if uFieldEmpresa( "lShwTar" + alltrim( str( n ) ) ) .OR. ( n == 1 )
         aadd( aNombreTarifas, uFieldEmpresa( "cTxtTar" + alltrim( str( n ) ), "Precio " + alltrim( str( n ) ) ) )
      endif

   next

RETURN ( aNombreTarifas )



FUNCTION nNumeroTarifa( cNombreTarifa )

   local n

   for n := 1 to 6


      if ( uFieldEmpresa( "lShwTar" + alltrim( str( n ) ) ) .OR. ( n == 1 ) ) .AND.  alltrim( uFieldEmpresa( "cTxtTar" + alltrim( str( n ) ) ) ) == cNombreTarifa
         RETURN ( n )
      endif

   next

RETURN ( 1 )

FUNCTION inicializateHashVariables()

   hVariables := {=>}

RETURN ( .T. )



FUNCTION setVariablesInHash( cClave, uValor )

   hset( hVariables, cClave, uValor )

RETURN ( .T. )



FUNCTION getVariablesToHash( cClave )

   local uVariable   := ""

   if hhaskey( hVariables, cClave )
      uVariable      := hGet( hVariables, cClave )
   end

RETURN ( uVariable )



Function cTextRichText( cText )

   local nLen     := 0
   local nPos     := 1
   local cFormat  := ""
   local cTexto   := ""

   nLen           := At( "\rtf", SubStr( cText, nPos ) )
   nPos           += nLen
   cFormat        := Upper( SubStr( cText, nPos, 3 ) )

   if cFormat == "RTF"
      cTexto      := RTFToGTF( cText )
   end

Return cTexto



Function fwBmpAsc()

RETURN ( LoadBitMap( GetResources(), "Up16" ) )



Function fwBmpDes()

RETURN ( LoadBitMap( GetResources(), "Down16" ) )



Function formatoFechaSql( dFecha )

Return ( quoted( SubStr( dtos( dFecha ), 1, 4 ) + "-" + SubStr( dtos( dFecha ), 5, 2 ) + "-" + SubStr( dtos( dFecha ), 7, 2 ) ) )



static Function getScafolding()










































   local hScafolding    := {  {  "Directory"    => cPatDat(), "Backup"       => .T. }, {  "Directory"    => cPatADS(), "Backup"       => .T. }, {  "Directory"    => cPatScript(), "Backup"       => .T. }, {  "Directory"    => cPatConfig(), "Backup"       => .T. }, {  "Directory"    => cPatDocuments(), "Backup"       => .T., "Subdirectory" =>  { "Directory"  => cPatDocuments() + "Movimientos almacen\" } }, {  "Directory"    => cPatLabels(), "Backup"       => .T., "Subdirectory" =>  { "Directory"  => cPatLabels() + "Movimientos almacen\" } }, {  "Directory"    => cPatReporting(), "Backup"       => .T. }, {  "Directory"    => cPatUserReporting(), "Backup"       => .T. }, {  "Directory"    => cPatIn(), "Backup"       => .F. }, {  "Directory"    => cPatOut(), "Backup"       => .F. }, {  "Directory"    => cPatProcessed(), "Backup"       => .F. }, {  "Directory"    => cPatTmp(), "Backup"       => .F. }, {  "Directory"    => cPatSnd(), "Backup"       => .F. }, {  "Directory"    => cPatLog(), "Backup"       => .F. }, {  "Directory"    => cPatBmp(), "Backup"       => .F. }, {  "Directory"    => cPatHtml(), "Backup"       => .F. }, {  "Directory"    => cPatXml(), "Backup"       => .F. }, {  "Directory"    => cPatSafe(), "Backup"       => .F. }, {  "Directory"    => cPatEmpTmp(), "Backup"       => .F. } }

RETURN ( hScafolding )








#pragma BEGINDUMP

#include "windows.h"
#include "shlobj.h"
#include "hbapi.h" 
#include "math.h"
#include "hbvm.h"
#include "hbstack.h"
#include "hbapiitm.h"
#include "hbapigt.h"
#include "hbstack.h"
#include "urlmon.h"

HB_MAXUINT hb_dateMilliSeconds( void );

HB_FUNC ( SHOWTASKBAR ) //Habilita o botao INICIAR
{
HWND hWnd = FindWindow("Shell_TrayWnd", "");

ShowWindow( hWnd, 1 );
}

HB_FUNC ( HIDETASKBAR ) //Desabilita o botao Iniciar
{
HWND hWnd = FindWindow("Shell_TrayWnd", "");

ShowWindow( hWnd, 0 );
}

HB_FUNC ( FLASHWINDOW ) // VAI PISCAR O SEU EXE NA BARRA
{
HWND Handle = GetForegroundWindow();

FlashWindow(Handle,TRUE); // VAI PISCAR O SEU EXE NA BARRA

Sleep(300); // TEMPO DE ESPERA
}

HB_FUNC ( DISABLECLOSEWINDOWS ) // DESABILITA O X da janela
{
HMENU MenuH = GetSystemMenu(GetForegroundWindow(),FALSE);

EnableMenuItem(MenuH,SC_CLOSE,MF_GRAYED);
}

HB_FUNC ( ENABLECLOSEWINDOWS ) // HABILITA O X da janela

{
HMENU MenuH = GetSystemMenu(GetForegroundWindow(),TRUE);

EnableMenuItem(MenuH,SC_CLOSE,MF_GRAYED);
}

HB_FUNC( DOWNLOADFILE )
{
   HRESULT hr;

   hr = URLDownloadToFileA( NULL, hb_parc( 1 ), hb_parc( 2 ), 0, NULL );
  
   hb_retnl( hr ) ;
}

HB_FUNC( HB_MILLISECONDS )
{
   hb_retnl( hb_dateMilliSeconds() );
}

#pragma ENDDUMP
