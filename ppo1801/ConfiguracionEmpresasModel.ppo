#line 91 "\fwh1801\include\fivewin.ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\Prg\Models\ConfiguracionEmpresasModel.prg"
_HB_CLASS SQLConfiguracionEmpresasModel ; function SQLConfiguracionEmpresasModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLConfiguracionEmpresasModel", iif( .T., { @SQLBaseModel() }, { @HBObject() } ), @SQLConfiguracionEmpresasModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "configuracion_empresas", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLConfiguracionEmpresasModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SeederToADS(); oClass:AddMethod( "SeederToADS", @SQLConfiguracionEmpresasModel_SeederToADS(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLConfiguracionEmpresasModel ;



static FUNCTION SQLConfiguracionEmpresasModel_getColumns( ) ; local Self AS CLASS SQLConfiguracionEmpresasModel := QSelf() AS CLASS SQLConfiguracionEmpresasModel





















    ::hColumns                        :=    {    "id"        =>    {    "create"        =>    "INTEGER PRIMARY KEY AUTO_INCREMENT",    "text"            =>    "Identificador" ,    "header"        =>    "Id" ,    "visible"        =>     .F. } , "empresa"   =>     {     "create"        =>     "CHAR ( 4 ) NOT NULL" ,    "text"          =>     "Empresa" ,    "visible"       =>     .F. } ,    "name"        =>    {    "create"        =>    "VARCHAR(50) NOT NULL" ,    "text"            =>    "Nombre de la configuración" ,    "header"        =>    "Nombre" ,    "visible"        =>     .T. ,    "width"            =>    200 ,    "type"            =>     "C" ,    "len"            =>     50 } ,    "value"        =>    {    "create"        =>    "VARCHAR(50) NOT NULL" ,    "text"            =>    "Valor de la configuración" ,    "header"        =>    "Valor" ,    "visible"        =>     .T. ,    "width"            =>    200 ,    "type"            =>     "C" ,    "len"            =>     50 } }

RETURN ( ::hColumns )



static FUNCTION SQLConfiguracionEmpresasModel_SeederToADS( ) ; local Self AS CLASS SQLConfiguracionEmpresasModel := QSelf() AS CLASS SQLConfiguracionEmpresasModel

   local cSql  := "SELECT * FROM " + ::getTableName()

RETURN ( getSQLDataBase():selectFetchHash( cSql ) )
