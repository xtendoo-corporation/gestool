#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\ConfiguracionesController.prg"
_HB_CLASS ConfiguracionesController ; function ConfiguracionesController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ConfiguracionesController", iif( .T., { @SQLBaseController() }, { @HBObject() } ), @ConfiguracionesController() ) ) ;

   _HB_MEMBER { cSerie } ; oClass:AddMultiData(, space( 1 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSerie"}, .F. )

   _HB_MEMBER { cTabla } ; oClass:AddMultiData(, space( 1 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTabla"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @ConfiguracionesController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setTabla(); oClass:AddInline( "setTabla", {|Self, cTabla | ( ( Self ) ), ( ::cTabla := cTabla ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setSerie(); oClass:AddInline( "setSerie", {|Self, cSerie | ( ( Self ) ), ( ::cSerie := cSerie ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Edit(); oClass:AddMethod( "Edit", @ConfiguracionesController_Edit(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER loadedBlankBuffer(); oClass:AddMethod( "loadedBlankBuffer", @ConfiguracionesController_loadedBlankBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ConfiguracionesController ;



static FUNCTION ConfiguracionesController_New( oController ) ; local Self AS CLASS ConfiguracionesController := QSelf() AS CLASS ConfiguracionesController

   ::Super:New( oController )

   ::oModel                := SQLConfiguracionesModel():New( self )

   ::oDialogView           := ConfiguracionesView():New( self )

   ::oRepository           := ConfiguracionesRepository():New( self )

RETURN ( Self )



static FUNCTION ConfiguracionesController_Edit( ) ; local Self AS CLASS ConfiguracionesController := QSelf() AS CLASS ConfiguracionesController

   ::oDialogView:setItems( ::oModel:getItemsMovimientosAlmacen() )

   if ::oDialogView:Activate()
      ::oModel:setItemsMovimientosAlmacen()
   end

RETURN ( nil )



static FUNCTION ConfiguracionesController_loadedBlankBuffer( ) ; local Self AS CLASS ConfiguracionesController := QSelf() AS CLASS ConfiguracionesController

   hset( ::oModel:hBuffer, "tabla", ::cTabla )

   hset( ::oModel:hBuffer, "serie", ::cSerie )

RETURN ( Self )
