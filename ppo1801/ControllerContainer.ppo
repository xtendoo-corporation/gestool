#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\Prg\Services\ControllerContainer.prg"
_HB_CLASS ControllerContainer ; function ControllerContainer ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ControllerContainer", iif( .F., { }, { @HBObject() } ), @ControllerContainer() ) ) ;

    _HB_MEMBER { hControllers } ; oClass:AddMultiData(, {=>}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hControllers"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @ControllerContainer_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER add(); oClass:AddInline( "add", {|Self, cController, oController | ( ( Self ) ), ( hset( ::hControllers, cController, oController ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER get(); oClass:AddInline( "get", {|Self, cController | ( ( Self ) ), ( hget( ::hControllers, cController ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getControllers(); oClass:AddInline( "getControllers", {|Self | ( ( Self ) ), ( ::hControllers ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ControllerContainer ;



static FUNCTION ControllerContainer_New( ) ; local Self AS CLASS ControllerContainer := QSelf() AS CLASS ControllerContainer

   ::hControllers                                     := {=>}

RETURN ( Self )
