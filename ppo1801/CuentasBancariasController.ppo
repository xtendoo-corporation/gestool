#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\CuentasBancariasController.prg"
_HB_CLASS CuentasBancariasController ; function CuentasBancariasController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CuentasBancariasController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @CuentasBancariasController() ) ) ;

   _HB_MEMBER { oCamposExtraValoresController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraValoresController"}, .F. )

   _HB_MEMBER CalculaIBAN(); oClass:AddMethod( "CalculaIBAN", @CuentasBancariasController_CalculaIBAN(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CalculaDigitoControl(); oClass:AddMethod( "CalculaDigitoControl", @CuentasBancariasController_CalculaDigitoControl(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER gettingSelectSentence(); oClass:AddMethod( "gettingSelectSentence", @CuentasBancariasController_gettingSelectSentence(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER loadBlankBuffer(); oClass:AddInline( "loadBlankBuffer", {|Self | ( ( Self ) ), ( ::oModel:loadBlankBuffer() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER insertBuffer(); oClass:AddInline( "insertBuffer", {|Self | ( ( Self ) ), ( ::oModel:insertBuffer() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER loadedCurrentBuffer( uuidEntidad); oClass:AddMethod( "loadedCurrentBuffer", @CuentasBancariasController_loadedCurrentBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER updateBuffer( uuidEntidad); oClass:AddMethod( "updateBuffer", @CuentasBancariasController_updateBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER loadedDuplicateCurrentBuffer( uuidEntidad); oClass:AddMethod( "loadedDuplicateCurrentBuffer", @CuentasBancariasController_loadedDuplicateCurrentBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER loadedDuplicateBuffer( uuidEntidad); oClass:AddMethod( "loadedDuplicateBuffer", @CuentasBancariasController_loadedDuplicateBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER deleteBuffer( aUuidEntidades); oClass:AddMethod( "deleteBuffer", @CuentasBancariasController_deleteBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER New(); oClass:AddMethod( "New", @CuentasBancariasController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @CuentasBancariasController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CuentasBancariasController ;



static FUNCTION CuentasBancariasController_New( oSenderController ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   ::Super:New( oSenderController )

   ::cTitle                      := "Cuentas"

   ::cName                       := "cuenta_bancaria"



   ::hImage                      := {  "16" => "gc_central_bank_euro_16", "32" => "gc_central_bank_euro_32", "48" => "gc_central_bank_euro_48" }

   ::nLevel                      := Auth():Level( ::cName )

   ::oModel                      := SQLCuentasBancariasModel():New( self )

   ::oBrowseView                 := CuentasBancariasBrowseView():New( self )

   ::oDialogView                 := CuentasBancariasView():New( self )

   ::oValidator                  := CuentasBancariasValidator():New( self, ::oDialogView )

   ::oCamposExtraValoresController  := CamposExtraValoresController():New( self, ::oModel:cTableName )

   ::oGetSelector                := GetSelector():New( self )

   ::oFilterController:setTableToFilter( ::oModel:cTableName )

   ::setEvent( "appended",                            {|| ::oBrowseView:Refresh() } )
   ::setEvent( "edited",                              {|| ::oBrowseView:Refresh() } )
   ::setEvent( "deletedSelection",                    {|| ::oBrowseView:Refresh() } )


RETURN ( Self )



static FUNCTION CuentasBancariasController_CalculaIBAN( ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController






   lIbanDigit( ::oModel:hBuffer[ "iban_codigo_pais" ], ::oModel:hBuffer[ "cuenta_codigo_entidad" ] , ::oModel:hBuffer[ "cuenta_codigo_oficina" ], ::oModel:hBuffer[ "cuenta_digito_control" ], ::oModel:hBuffer[ "cuenta_numero" ], ::oDialogView:oIBAN )

RETURN ( .T. )



static FUNCTION CuentasBancariasController_CalculaDigitoControl( ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController






   lCalcDC( ::oModel:hBuffer[ "cuenta_codigo_entidad" ], ::oModel:hBuffer[ "cuenta_codigo_oficina" ], ::oModel:hBuffer[ "cuenta_digito_control" ], ::oModel:hBuffer[ "cuenta_numero" ], ::oDialogView:oDigitoControl, ::oModel:hBuffer[ "iban_codigo_pais" ] )

   ::oDialogView:oIBAN:lValid()

RETURN ( .T. )



static FUNCTION CuentasBancariasController_End( ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oGetSelector:End()

   ::oCamposExtraValoresController:End()

   ::Super:End()

RETURN ( Self )



static FUNCTION CuentasBancariasController_gettingSelectSentence( ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   local uuid        := ::getSenderController():getUuid()

   if !empty( uuid )
      ::oModel:setGeneralWhere( "parent_uuid = " + quoted( uuid ) )
   end

RETURN ( Self )



static FUNCTION CuentasBancariasController_loadedCurrentBuffer( uuidEntidad ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   local idCuentaBanco

   if empty( uuidEntidad )
      ::oModel:insertBuffer()
   end

   idCuentaBanco          := ::oModel:getIdWhereParentUuid( uuidEntidad )
   if empty( idCuentaBanco )
      idCuentaBanco       := ::oModel:insertBlankBuffer()
   end

   ::oModel:loadCurrentBuffer( idCuentaBanco )

RETURN ( self )



static FUNCTION CuentasBancariasController_updateBuffer( uuidEntidad ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   local idCuentaBanco

   idCuentaBanco          := ::oModel:getIdWhereParentUuid( uuidEntidad )
   if empty( idCuentaBanco )
      ::oModel:insertBuffer()
      RETURN ( self )
   end

   ::oModel:updateBuffer()

RETURN ( self )



static FUNCTION CuentasBancariasController_loadedDuplicateCurrentBuffer( uuidEntidad ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   local idCuentaBanco

   idCuentaBanco          := ::oModel:getIdWhereParentUuid( uuidEntidad )
   if empty( idCuentaBanco )
      ::oModel:insertBuffer()
      RETURN ( self )
   end

   ::oModel:loadDuplicateBuffer( idCuentaBanco )

RETURN ( self )



static FUNCTION CuentasBancariasController_loadedDuplicateBuffer( uuidEntidad ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   hset( ::oModel:hBuffer, "parent_uuid", uuidEntidad )

RETURN ( self )



static FUNCTION CuentasBancariasController_deleteBuffer( aUuidEntidades ) ; local Self AS CLASS CuentasBancariasController := QSelf() AS CLASS CuentasBancariasController

   if empty( aUuidEntidades )
      RETURN ( self )
   end

   ::oModel:deleteWhereParentUuid( aUuidEntidades )

RETURN ( self )







_HB_CLASS CuentasBancariasBrowseView ; function CuentasBancariasBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CuentasBancariasBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @CuentasBancariasBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @CuentasBancariasBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER formatoCuenta(); oClass:AddMethod( "formatoCuenta", @CuentasBancariasBrowseView_formatoCuenta(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CuentasBancariasBrowseView ;



static FUNCTION CuentasBancariasBrowseView_addColumns( ) ; local Self AS CLASS CuentasBancariasBrowseView := QSelf() AS CLASS CuentasBancariasBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 50
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "nombre_banco"
      :cHeader             := "Nombre"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "nombre_banco" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Cuenta"
      :nWidth              := 300
      :bEditValue          := {|| ::formatoCuenta() }
   end

Return ( nil )



static FUNCTION CuentasBancariasBrowseView_formatoCuenta( ) ; local Self AS CLASS CuentasBancariasBrowseView := QSelf() AS CLASS CuentasBancariasBrowseView

   local cCuenta  := ""

      cCuenta     += ::getRowSet():fieldGet( "iban_codigo_pais" )
      cCuenta     += ::getRowSet():fieldGet( "iban_digito_control" )
      cCuenta     += " - "
      cCuenta     += ::getRowSet():fieldGet( "cuenta_codigo_entidad" )
      cCuenta     += " - "
      cCuenta     += ::getRowSet():fieldGet( "cuenta_codigo_oficina" )
      cCuenta     += " - "
      cCuenta     += ::getRowSet():fieldGet( "cuenta_digito_control" )
      cCuenta     += " - "
      cCuenta     += ::getRowSet():fieldGet( "cuenta_numero" )

RETURN ( cCuenta )









_HB_CLASS CuentasBancariasView ; function CuentasBancariasView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CuentasBancariasView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @CuentasBancariasView() ) ) ;

   _HB_MEMBER { oGetProvincia } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetProvincia"}, .F. )
   _HB_MEMBER { oGetPoblacion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetPoblacion"}, .F. )
   _HB_MEMBER { oGetPais } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetPais"}, .F. )
   _HB_MEMBER { oGetDni } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetDni"}, .F. )

   _HB_MEMBER { oSayCamposExtra } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayCamposExtra"}, .F. )

   _HB_MEMBER { oIBAN } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oIBAN"}, .F. )
   _HB_MEMBER { oDigitoControl } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDigitoControl"}, .F. )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @CuentasBancariasView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ExternalRedefine( oDialog); oClass:AddMethod( "ExternalRedefine", @CuentasBancariasView_ExternalRedefine(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CuentasBancariasView ;









static FUNCTION CuentasBancariasView_Activate( ) ; local Self AS CLASS CuentasBancariasView := QSelf() AS CLASS CuentasBancariasView

   local oSayCamposExtra



   ::oDialog = TDialog():New(,,,, ::LblTitle() + "cuenta bancaria", "BANCOS_SQL",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )





   ::oBitmap := TBitmap():ReDefine( 900, ::oController:getImage( "48" ),, ::oDialog,,, .F., .F.,,, .F.,,, .T. )




   ::oMessage := TSay():ReDefine( 800,, ::oDialog,,,, .F., getBoldFont(), .F., .F., )

   ::ExternalRedefine( ::oDialog )







      ::oSayCamposExtra := TSay():ReDefine( 200, {||      "Campos extra..."}, ::oDialog,, ( 10 + ( 152 * 256 ) + ( 234 * 65536 ) ),, .F., getBoldFont(), .F., .F., )
   ::oSayCamposExtra:lWantClick  := .T.
   ::oSayCamposExtra:OnClick     := {|| ::oController:oCamposExtraValoresController:Edit( ::oController:getUuid() ) }





   TButton():ReDefine( 1, {||( if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 116, {|| if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) } )
   end

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

   ::oBitmap:end()

RETURN ( ::oDialog:nResult )



static FUNCTION CuentasBancariasView_ExternalRedefine( oDialog ) ; local Self AS CLASS CuentasBancariasView := QSelf() AS CLASS CuentasBancariasView





   TGetHlp():ReDefine( 1010, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre_banco" ], ::oController:oModel:hBuffer[ "nombre_banco" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "nombre_banco" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )







   TGetHlp():ReDefine( 1020, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "iban_codigo_pais" ], ::oController:oModel:hBuffer[ "iban_codigo_pais" ]:= u ) }, ::oDialog,, "@!", {||       ::oController:CalculaIBAN()},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )






   ::oIBAN := TGetHlp():ReDefine( 1021, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "iban_digito_control" ], ::oController:oModel:hBuffer[ "iban_digito_control" ]:= u ) }, ::oDialog,,, {||       ::oController:CalculaIBAN()},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 1022, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "cuenta_codigo_entidad" ], ::oController:oModel:hBuffer[ "cuenta_codigo_entidad" ]:= u ) }, ::oDialog,,, {||       ::oController:CalculaDigitoControl()},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 1023, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "cuenta_codigo_oficina" ], ::oController:oModel:hBuffer[ "cuenta_codigo_oficina" ]:= u ) }, ::oDialog,,, {||       ::oController:CalculaDigitoControl()},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )






   ::oDigitoControl := TGetHlp():ReDefine( 1024, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "cuenta_digito_control" ], ::oController:oModel:hBuffer[ "cuenta_digito_control" ]:= u ) }, ::oDialog,,, {||       ::oController:CalculaDigitoControl()},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 1025, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "cuenta_numero" ], ::oController:oModel:hBuffer[ "cuenta_numero" ]:= u ) }, ::oDialog,,, {||       ::oController:CalculaDigitoControl()},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )

RETURN ( Self )








_HB_CLASS CuentasBancariasValidator ; function CuentasBancariasValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CuentasBancariasValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @CuentasBancariasValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @CuentasBancariasValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CuentasBancariasValidator ;



static FUNCTION CuentasBancariasValidator_getValidators( ) ; local Self AS CLASS CuentasBancariasValidator := QSelf() AS CLASS CuentasBancariasValidator


   ::hValidators  := {  "nombre_banco" =>         {  "required"           => "El nombre es un dato requerido", "unique"             => "El nombre introducido ya existe" } }

RETURN ( ::hValidators )










_HB_CLASS SQLCuentasBancariasModel ; function SQLCuentasBancariasModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLCuentasBancariasModel", iif( .T., { @SQLBaseModel() }, { @HBObject() } ), @SQLCuentasBancariasModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "cuentas_bancarias", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getIdWhereParentUuid(); oClass:AddInline( "getIdWhereParentUuid", {|Self, uuid | ( ( Self ) ), ( ::getField( "id", "parent_uuid", uuid ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getParentUuidAttribute( value); oClass:AddMethod( "getParentUuidAttribute", @SQLCuentasBancariasModel_getParentUuidAttribute(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getSelectByOrder(); oClass:AddInline( "getSelectByOrder", {|Self, cSQLSelect | ( ( Self ) ), (cSQLSelect) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLCuentasBancariasModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLCuentasBancariasModel ;



static FUNCTION SQLCuentasBancariasModel_getColumns( ) ; local Self AS CLASS SQLCuentasBancariasModel := QSelf() AS CLASS SQLCuentasBancariasModel


   hset( ::hColumns, "id",                      {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",                    {  "create"    => "VARCHAR(40) NOT NULL UNIQUE"             , "default"   => {|| win_uuidcreatestring() } }            )


   hset( ::hColumns, "parent_uuid",             {  "create"    => "VARCHAR( 40 ) NOT NULL"                  , "default"   => {|| space( 40 ) } }                       )

   ::getEmpresaColumns()


   hset( ::hColumns, "nombre_banco",            {  "create"    => "VARCHAR( 140 )"                          , "default"   => {|| space( 140 ) } }                      )


   hset( ::hColumns, "iban_codigo_pais",        {  "create"    => "VARCHAR( 2 )"                            , "default"   => {|| space( 2 ) } }                        )


   hset( ::hColumns, "iban_digito_control",     {  "create"    => "VARCHAR( 2 )"                            , "default"   => {|| space( 2 ) } }                        )


   hset( ::hColumns, "cuenta_codigo_entidad",   {  "create"    => "VARCHAR( 4 )"                            , "default"   => {|| space( 4 ) } }                        )


   hset( ::hColumns, "cuenta_codigo_oficina",   {  "create"    => "VARCHAR( 4 )"                            , "default"   => {|| space( 4 ) } }                        )


   hset( ::hColumns, "cuenta_digito_control",   {  "create"    => "VARCHAR( 2 )"                            , "default"   => {|| space( 2 ) } }                        )


   hset( ::hColumns, "cuenta_numero",           {  "create"    => "VARCHAR( 10 )"                           , "default"   => {|| space( 10 ) } }                       )

RETURN ( ::hColumns )



static FUNCTION SQLCuentasBancariasModel_getParentUuidAttribute( value ) ; local Self AS CLASS SQLCuentasBancariasModel := QSelf() AS CLASS SQLCuentasBancariasModel

   if empty( ::oController )
      RETURN ( value )
   end

   if empty( ::oController:oSenderController )
      RETURN ( value )
   end

RETURN ( ::oController:oSenderController:getUuid() )












_HB_CLASS CuentasBancariasRepository ; function CuentasBancariasRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CuentasBancariasRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @CuentasBancariasRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLCuentasBancariasModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombres(); oClass:AddMethod( "getNombres", @CuentasBancariasRepository_getNombres(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombreWhereUuid(); oClass:AddInline( "getNombreWhereUuid", {|Self, Uuid | ( ( Self ) ), ( ::getColumnWhereUuid( Uuid, "nombre" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUuidWhereNombre(); oClass:AddInline( "getUuidWhereNombre", {|Self, cNombre | ( ( Self ) ), ( ::getUuidWhereColumn( cNombre, "nombre", "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CuentasBancariasRepository ;



static FUNCTION CuentasBancariasRepository_getNombres( ) ; local Self AS CLASS CuentasBancariasRepository := QSelf() AS CLASS CuentasBancariasRepository

   local aNombres    := ::getDatabase():selectFetchHash( "SELECT nombre FROM " + ::getTableName() )
   local aResult     := {}

   if !empty( aNombres )
      aeval( aNombres, {| h | aadd( aResult, alltrim( hGet( h, "nombre" ) ) ) } )
   end

RETURN ( aResult )
