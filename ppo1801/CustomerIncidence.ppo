#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\terceros\CustomerIncidence.prg"
_HB_CLASS CustomerIncidence ; function CustomerIncidence ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CustomerIncidence", iif( .T., { @Editable() }, { @HBObject() } ), @CustomerIncidence() ) ) ;

   _HB_MEMBER { oSender } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSender"}, .F. )

   _HB_MEMBER { idClient } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"idClient"}, .F. )

   _HB_MEMBER { cNombreIncidencia } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cNombreIncidencia"}, .F. )

   _HB_MEMBER New( oSender); oClass:AddMethod( "New", @CustomerIncidence_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setEnviroment(); oClass:AddInline( "setEnviroment", {|Self | ( ( Self ) ), ( ::setDataTable( "CliInc" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setScope(); oClass:AddInline( "setScope", {|Self, id | ( ( Self ) ), ( D():setScopeClientesIncidencias( id, ::nView ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER quitScope(); oClass:AddInline( "quitScope", {|Self | ( ( Self ) ), ( D():quitScopeClientesIncidencias( ::nView ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER showNavigator(); oClass:AddMethod( "showNavigator", @CustomerIncidence_showNavigator(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddInline( "Resource", {|Self | ( ( Self ) ), ( ::oViewEdit:Resource() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onPostGetDocumento(); oClass:AddMethod( "onPostGetDocumento", @CustomerIncidence_onPostGetDocumento(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER onPreSaveAppend(); oClass:AddMethod( "onPreSaveAppend", @CustomerIncidence_onPreSaveAppend(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER startDialog(); oClass:AddInline( "startDialog", {|Self | ( ( Self ) ), ( msginfo( ::oViewEdit:getTitleDocumento() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onPreSaveEdit(); oClass:AddInline( "onPreSaveEdit", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER onPreEnd(); oClass:AddInline( "onPreEnd", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CustomerIncidence ;



static FUNCTION CustomerIncidence_New( oSender ) ; local Self AS CLASS CustomerIncidence := QSelf() AS CLASS CustomerIncidence

   ::oSender               := oSender

   ::nView                 := oSender:nView

   ::oViewEdit             := CustomerIncidenceView():New( self )
   ::oViewEdit:setTitleDocumento( "incidencias" )

   ::oViewNavigator        := CustomerIncidenceViewNavigator():New( self )
   ::oViewNavigator:setTitleDocumento( "Incidencias clientes" )

   ::setEnviroment()

Return ( self )



static FUNCTION CustomerIncidence_showNavigator( ) ; local Self AS CLASS CustomerIncidence := QSelf() AS CLASS CustomerIncidence

   ::idClient              := D():ClientesId( ::nView )

   ::setScope( ::idClient )

   ::oViewNavigator:showView()

   ::quitScope()

Return ( self )



static FUNCTION CustomerIncidence_onPostGetDocumento( ) ; local Self AS CLASS CustomerIncidence := QSelf() AS CLASS CustomerIncidence

   local cTipo := hGet( ::hDictionaryMaster, "Tipo" )

   if !empty( cTipo )
      ::cNombreIncidencia  := D():getNombreTipoIncicencias( cTipo, ::nView )
   end

Return ( .T. )



static FUNCTION CustomerIncidence_onPreSaveAppend( ) ; local Self AS CLASS CustomerIncidence := QSelf() AS CLASS CustomerIncidence

   local cTipo := ""

   if !empty( ::cNombreIncidencia )
      cTipo    := D():getCodigoTipoIncicencias( ::cNombreIncidencia, ::nView )
   end

   hSet( ::hDictionaryMaster, "Código", ::idClient )
   hSet( ::hDictionaryMaster, "Tipo", cTipo )

Return ( .T. )
