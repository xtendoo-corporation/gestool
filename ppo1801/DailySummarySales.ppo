#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\documentos\ventas\DailySummarySales.prg"
_HB_CLASS DailySummarySales ; function DailySummarySales ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "DailySummarySales", iif( .T., { @DocumentsSales() }, { @HBObject() } ), @DailySummarySales() ) ) ;

   _HB_MEMBER { oDailySummarySales } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDailySummarySales"}, .F. )

   _HB_MEMBER { cAgente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cAgente"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @DailySummarySales_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runNavigator(); oClass:AddMethod( "runNavigator", @DailySummarySales_runNavigator(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CalculatePedido(); oClass:AddMethod( "CalculatePedido", @DailySummarySales_CalculatePedido(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CalculateAlbaran(); oClass:AddMethod( "CalculateAlbaran", @DailySummarySales_CalculateAlbaran(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CalculateFactura(); oClass:AddMethod( "CalculateFactura", @DailySummarySales_CalculateFactura(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CalculateTotal(); oClass:AddMethod( "CalculateTotal", @DailySummarySales_CalculateTotal(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CalculateGeneral(); oClass:AddMethod( "CalculateGeneral", @DailySummarySales_CalculateGeneral(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onPreRunNavigator(); oClass:AddInline( "onPreRunNavigator", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS DailySummarySales ;



static FUNCTION DailySummarySales_New( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   ::cAgente       := UsuariosModel():getUsuarioAgenteExclusivo( Auth():uuid )

   if Empty( ::cAgente )
      ::cAgente    := GetPvProfString( "Tablet", "Agente", "", cIniAplication() )
   end

   if !::OpenFiles()
      Return ( self )
   end

   ::oDailySummarySales    := DailySummarySalesView():New( self )
   ::oDailySummarySales:setTitleDocumento( "Resumen de ventas diario" )

Return( self )



static FUNCTION DailySummarySales_runNavigator( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   if !empty( ::oDailySummarySales )
      ::oDailySummarySales:Resource()
   end

Return( self )



static FUNCTION DailySummarySales_CalculatePedido( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   ::oDailySummarySales:nPedido                 := 0
   ::oDailySummarySales:nPedidoTotal            := 0

   D():getStatusPedidosClientes( ::nView )

   ( D():PedidosClientes( ::nView ) )->( ordSetFocus( "DFECPED" ) )

   while !( D():PedidosClientes( ::nView ) )->( eof() )


      if ( ( D():PedidosClientes( ::nView ) )->dFecPed >= ::oDailySummarySales:dFecIni .AND. ( D():PedidosClientes( ::nView ) )->dFecPed <= ::oDailySummarySales:dFecFin ) .AND. ( Empty( ::cAgente ) .OR. ( D():PedidosClientes( ::nView ) )->cCodAge == ::cAgente )

         ::oDailySummarySales:nPedido           += 1

         ::oDailySummarySales:nPedidoTotal      += ( D():PedidosClientes( ::nView ) )->nTotPed

      end

      ( D():PedidosClientes( ::nView ) )->( dbSkip() )

   end

   D():setStatusPedidosClientes( ::nView )

Return( self )



static FUNCTION DailySummarySales_CalculateAlbaran( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   ::oDailySummarySales:nAlbaran                := 0
   ::oDailySummarySales:nAlbaranTotal           := 0

   D():getStatusAlbaranesClientes( ::nView )



   while !( D():AlbaranesClientes( ::nView ) )->( eof() )

      if ( ( D():AlbaranesClientes( ::nView ) )->dFecAlb >= ::oDailySummarySales:dFecIni .AND. ( D():AlbaranesClientes( ::nView ) )->dFecAlb <= ::oDailySummarySales:dFecFin )
         ( Empty( ::cAgente ) .OR. ( D():AlbaranesClientes( ::nView ) )->cCodAge == ::cAgente )

         ::oDailySummarySales:nAlbaran           += 1

         ::oDailySummarySales:nAlbaranTotal      += ( D():AlbaranesClientes( ::nView ) )->nTotAlb

      end

      ( D():AlbaranesClientes( ::nView ) )->( dbSkip() )

   end

   D():setStatusAlbaranesClientes( ::nView )

Return( self )



static FUNCTION DailySummarySales_CalculateFactura( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   ::oDailySummarySales:nFactura                := 0
   ::oDailySummarySales:nFacturaTotal           := 0

   D():getStatusFacturasClientes( ::nView )

   ( D():FacturasClientes( ::nView ) )->( ordSetFocus( "DFECFAC" ) )

   while !( D():FacturasClientes( ::nView ) )->( eof() )


      if ( ( D():FacturasClientes( ::nView ) )->dFecFac >= ::oDailySummarySales:dFecIni .AND. ( D():FacturasClientes( ::nView ) )->dFecFac <= ::oDailySummarySales:dFecFin ) .AND. ( Empty( ::cAgente ) .OR. ( D():FacturasClientes( ::nView ) )->cCodAge == ::cAgente )

         ::oDailySummarySales:nFactura           += 1

         ::oDailySummarySales:nFacturaTotal      += ( D():FacturasClientes( ::nView ) )->nTotFac

      end

      ( D():FacturasClientes( ::nView ) )->( dbSkip() )

   end

   D():setStatusFacturasClientes( ::nView )

Return( self )



static FUNCTION DailySummarySales_CalculateTotal( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   ::oDailySummarySales:nTotal        := 0

   ::oDailySummarySales:nTotal        += ::oDailySummarySales:nPedidoTotal
   ::oDailySummarySales:nTotal        += ::oDailySummarySales:nAlbaranTotal
   ::oDailySummarySales:nTotal        += ::oDailySummarySales:nFacturaTotal

   ::oDailySummarySales:oPedido:Refresh()
   ::oDailySummarySales:oAlbaran:Refresh()
   ::oDailySummarySales:oFactura:Refresh()

   ::oDailySummarySales:oPedidoTotal:Refresh()
   ::oDailySummarySales:oAlbaranTotal:Refresh()
   ::oDailySummarySales:oFacturaTotal:Refresh()
   ::oDailySummarySales:oTotal:Refresh()

Return( self )



static FUNCTION DailySummarySales_CalculateGeneral( ) ; local Self AS CLASS DailySummarySales := QSelf() AS CLASS DailySummarySales

   ::CalculatePedido()
   ::CalculateAlbaran()
   ::CalculateFactura()
   ::CalculateTotal()

Return ( Self )
