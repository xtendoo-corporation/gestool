#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\terceros\Directions.prg"
_HB_CLASS Directions ; function Directions ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "Directions", iif( .T., { @Editable() }, { @HBObject() } ), @Directions() ) ) ;

   _HB_MEMBER { oSender } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSender"}, .F. )

   _HB_MEMBER { oGridDirections } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGridDirections"}, .F. )

   _HB_MEMBER { idCustomer } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"idCustomer"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @Directions_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Init( oSender); oClass:AddMethod( "Init", @Directions_Init(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @Directions_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CloseFiles(); oClass:AddInline( "CloseFiles", {|Self | ( ( Self ) ), ( D():DeleteView( ::nView ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setEnviroment(); oClass:AddInline( "setEnviroment", {|Self | ( ( Self ) ), ( ::setDataTable( "ObrasT" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setIdCustomer(); oClass:AddInline( "setIdCustomer", {|Self, id | ( ( Self ) ), ( ::idCustomer := id ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getIdCustomer(); oClass:AddInline( "getIdCustomer", {|Self | ( ( Self ) ), ( ::idCustomer ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER putFilter(); oClass:AddMethod( "putFilter", @Directions_putFilter(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER quitFilter(); oClass:AddMethod( "quitFilter", @Directions_quitFilter(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS Directions ;



static FUNCTION Directions_New( ) ; local Self AS CLASS Directions := QSelf() AS CLASS Directions

   if ::OpenFiles()
      ::setEnviroment()
   end

Return ( self )



static FUNCTION Directions_Init( oSender ) ; local Self AS CLASS Directions := QSelf() AS CLASS Directions

   ::oSender                                 := oSender

   ::nView                                   := oSender:nView

   ::oGridDirections                         := DirectionsViewSearchNavigator():New( self )
   ::oGridDirections:setSelectorMode()
   ::oGridDirections:setTitleDocumento( "Seleccione dirección de cliente" )
   ::oGridDirections:setDblClickBrowseGeneral( {|| ::oGridDirections:endView() } )

   ::setEnviroment()

Return ( self )



static FUNCTION Directions_OpenFiles( ) ; local Self AS CLASS Directions := QSelf() AS CLASS Directions

   local oError
   local oBlock
   local lOpenFiles     := .T.

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      ::nView           := D():CreateView()

      D():Clientes( ::nView )

      D():ClientesDirecciones( ::nView )

   RECOVER USING oError

      lOpenFiles        := .F.

      ApoloMsgStop( "Imposible abrir todas las bases de datos" + Chr(13)+Chr(10) + ErrorMessage( oError ) )

   end

   ErrorBlock( oBlock )

   if !lOpenFiles
      ::CloseFiles( "" )
   end

Return ( lOpenFiles )



static FUNCTION Directions_putFilter( ) ; local Self AS CLASS Directions := QSelf() AS CLASS Directions

   if lAIS()
      ( D():ClientesDirecciones( ::nView ) )->( adsSetAOF( "Field->cCodCli == '" + ::getIdCustomer() + "'" ) )
   else
      ( D():ClientesDirecciones( ::nView ) )->( dbsetfilter( {|| Field->cCodCli == ::getIdCustomer() }, "cCodCli" ) )
   end

   ( D():ClientesDirecciones( ::nView ) )->( dbgotop() )

Return ( .T. )



static FUNCTION Directions_quitFilter( ) ; local Self AS CLASS Directions := QSelf() AS CLASS Directions

   ( D():ClientesDirecciones( ::nView ) )->( dbsetfilter() )

Return ( self )
