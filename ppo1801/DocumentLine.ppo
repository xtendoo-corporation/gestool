#line 91 "\fwh1801\include\Fivewin.ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\DocumentLine.prg"
_HB_CLASS DocumentLine ; function DocumentLine ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "DocumentLine", iif( .T., { @DocumentBase() }, { @HBObject() } ), @DocumentLine() ) ) ;

   _HB_MEMBER { oDocumentHeader } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDocumentHeader"}, .F. )

   _HB_MEMBER newBuildDictionary( oSender); oClass:AddMethod( "newBuildDictionary", @DocumentLine_newBuildDictionary(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getClone(); oClass:AddInline( "getClone", {|Self | ( ( Self ) ), ( oClone( Self ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setSerieMaster(); oClass:AddInline( "setSerieMaster", {|Self, hDictionary | ( ( Self ) ), ( ::setValueFromDictionary( hDictionary, "Serie" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setNumeroMaster(); oClass:AddInline( "setNumeroMaster", {|Self, hDictionary | ( ( Self ) ), ( ::setValueFromDictionary( hDictionary, "Numero" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setSufijoMaster(); oClass:AddInline( "setSufijoMaster", {|Self, hDictionary | ( ( Self ) ), ( ::setValueFromDictionary( hDictionary, "Sufijo" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setAlmacenMaster( hDictionary); oClass:AddMethod( "setAlmacenMaster", @DocumentLine_setAlmacenMaster(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setFechaMaster(); oClass:AddInline( "setFechaMaster", {|Self, hDictionary | ( ( Self ) ), ( ::setValueFromDictionary( hDictionary, "Fecha" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setHoraMaster(); oClass:AddInline( "setHoraMaster", {|Self, hDictionary | ( ( Self ) ), ( ::setValueFromDictionary( hDictionary, "Hora" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setClient(); oClass:AddInline( "setClient", {|Self, Client | ( ( Self ) ), ( ::setValue( "Cliente", Client ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getClient(); oClass:AddInline( "getClient", {|Self | ( ( Self ) ), ( ::getValue( "Cliente" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNumeroLinea(); oClass:AddInline( "getNumeroLinea", {|Self | ( ( Self ) ), ( ::getValue( "NumeroLinea" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setNumeroLinea(); oClass:AddInline( "setNumeroLinea", {|Self, NumeroLinea | ( ( Self ) ), ( ::setValue( "NumeroLinea", NumeroLinea ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setPosicionImpresion(); oClass:AddInline( "setPosicionImpresion", {|Self, PosicionImpresion | ( ( Self ) ), ( ::setValue( "PosicionImpresion", PosicionImpresion ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getCode(); oClass:AddInline( "getCode", {|Self | ( ( Self ) ), ( ::getValue( "Articulo" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getProductId(); oClass:AddInline( "getProductId", {|Self | ( ( Self ) ), ( ::getValue( "Articulo" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER getDescription(); oClass:AddInline( "getDescription", {|Self | ( ( Self ) ), ( if(   !empty( ::getCode() ), ::getValue( "DescripcionArticulo" ), ::getValue( "DescripcionAmpliada" ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getIsKit(); oClass:AddInline( "getIsKit", {|Self | ( ( Self ) ), ( ::getValue( "LineaPertenecienteEscandallo" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getAlmacen(); oClass:AddInline( "getAlmacen", {|Self | ( ( Self ) ), ( ::getValue( "Almacen") ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCodeFirstProperty(); oClass:AddInline( "getCodeFirstProperty", {|Self | ( ( Self ) ), ( ::getValue( "CodigoPropiedad1" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCodeSecondProperty(); oClass:AddInline( "getCodeSecondProperty", {|Self | ( ( Self ) ), ( ::getValue( "CodigoPropiedad2" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueFirstProperty(); oClass:AddInline( "getValueFirstProperty", {|Self | ( ( Self ) ), ( ::getValue( "ValorPropiedad1" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueSecondProperty(); oClass:AddInline( "getValueSecondProperty", {|Self | ( ( Self ) ), ( ::getValue( "ValorPropiedad2" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getNameFirstProperty(); oClass:AddInline( "getNameFirstProperty", {|Self | ( ( Self ) ), ( nombrePropiedad( ::getCodeFirstProperty(), ::getValueFirstProperty(), ::getView() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getNameSecondProperty(); oClass:AddInline( "getNameSecondProperty", {|Self | ( ( Self ) ), ( nombrePropiedad( ::getCodeSecondProperty(), ::getValueSecondProperty(), ::getView() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getLote(); oClass:AddInline( "getLote", {|Self | ( ( Self ) ), ( ::getValue( "Lote" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCodeProvider(); oClass:AddInline( "getCodeProvider", {|Self | ( ( Self ) ), ( ::getValue( "CodigoArticuloProveedor" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getBoxes(); oClass:AddInline( "getBoxes", {|Self | ( ( Self ) ), ( ::getValue( "Cajas" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setBoxes(); oClass:AddInline( "setBoxes", {|Self, Boxes | ( ( Self ) ), ( ::setValue( "Cajas", Boxes ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getUnits(); oClass:AddInline( "getUnits", {|Self | ( ( Self ) ), ( ::getValue( "Unidades" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setUnits(); oClass:AddInline( "setUnits", {|Self, Units | ( ( Self ) ), ( ::setValue( "Unidades", Units ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTotalUnits(); oClass:AddMethod( "getTotalUnits", @DocumentLine_getTotalUnits(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getMeasurementUnit(); oClass:AddInline( "getMeasurementUnit", {|Self | ( ( Self ) ), ( ::getValue( "UnidadMedicion" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPrice(); oClass:AddInline( "getPrice", {|Self | ( ( Self ) ), ( ::getValue( "PrecioVenta" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getNetPrice(); oClass:AddMethod( "getNetPrice", @DocumentLine_getNetPrice(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getPercentageDiscount(); oClass:AddInline( "getPercentageDiscount", {|Self | ( ( Self ) ), ( ::getValue( "DescuentoPorcentual" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPercentagePromotion(); oClass:AddInline( "getPercentagePromotion", {|Self | ( ( Self ) ), ( ::getValue( "DescuentoPromocion" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPercentageTax(); oClass:AddInline( "getPercentageTax", {|Self | ( ( Self ) ), ( ::getValue( "PorcentajeImpuesto" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getMonetaryDiscount(); oClass:AddInline( "getMonetaryDiscount", {|Self | ( ( Self ) ), ( ::getValue( "DescuentoLineal", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTipoIva(); oClass:AddInline( "getTipoIva", {|Self | ( ( Self ) ), ( ::getValue( "TipoIva" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPrecioVenta(); oClass:AddInline( "getPrecioVenta", {|Self | ( ( Self ) ), ( round( ::getValue(  "PrecioVenta" ), nDouDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPortes(); oClass:AddInline( "getPortes", {|Self | ( ( Self ) ), ( ::getValue( "Portes", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getCajas(); oClass:AddInline( "getCajas", {|Self | ( ( Self ) ), ( ::getValue( "Cajas" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUnidades(); oClass:AddInline( "getUnidades", {|Self | ( ( Self ) ), ( ::getValue( "Unidades" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setUnidades(); oClass:AddInline( "setUnidades", {|Self, nUnidades | ( ( Self ) ), ( ::setValue( "Unidades", nUnidades ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getDescuento(); oClass:AddInline( "getDescuento", {|Self | ( ( Self ) ), ( ::getValue( "Descuento" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getRecargoEquivalencia(); oClass:AddInline( "getRecargoEquivalencia", {|Self | ( ( Self ) ), ( ::getValue( "RecargoEquivalencia" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getDescuentoPorcentual(); oClass:AddInline( "getDescuentoPorcentual", {|Self | ( ( Self ) ), ( ::getValue( "DescuentoPorcentual", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getDescuentoPromocion(); oClass:AddInline( "getDescuentoPromocion", {|Self | ( ( Self ) ), ( ::getValue( "DescuentoPromocion", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER isSpecialTaxInclude(); oClass:AddInline( "isSpecialTaxInclude", {|Self | ( ( Self ) ), ( ::getValue( "LineaImpuestoIncluido", .F. ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER isVolumenSpecialTax(); oClass:AddInline( "isVolumenSpecialTax", {|Self | ( ( Self ) ), ( ::getValue( "VolumenImpuestosEspeciales", .F. ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getSpecialTax(); oClass:AddInline( "getSpecialTax", {|Self | ( ( Self ) ), ( ::getValue( "ImporteImpuestoEspecial", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getBruto(); oClass:AddMethod( "getBruto", @DocumentLine_getBruto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getBase(); oClass:AddMethod( "getBase", @DocumentLine_getBase(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getTotalSpecialTax(); oClass:AddMethod( "getTotalSpecialTax", @DocumentLine_getTotalSpecialTax(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getVolumen(); oClass:AddInline( "getVolumen", {|Self | ( ( Self ) ), ( ::getValue( "Volumen", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPuntoVerde(); oClass:AddInline( "getPuntoVerde", {|Self | ( ( Self ) ), ( ::getValue( "PuntoVerde", 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getHeaderClient(); oClass:AddInline( "getHeaderClient", {|Self | ( ( Self ) ), ( ::oDocumentHeader:getClient() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getHeaderClientName(); oClass:AddInline( "getHeaderClientName", {|Self | ( ( Self ) ), ( ::oDocumentHeader:getClientName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getHeaderDate(); oClass:AddInline( "getHeaderDate", {|Self | ( ( Self ) ), ( ::oDocumentHeader:getDate() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS DocumentLine ;



static FUNCTION DocumentLine_newBuildDictionary( oSender ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   ::new( oSender )

   ::setDictionary( D():getHashFromAlias( oSender:getLineAlias(), oSender:getLineDictionary() ) )

   ::oDocumentHeader    := DocumentHeader():newBuildDictionary( oSender )

Return ( Self )



static FUNCTION DocumentLine_getTotalUnits( ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   local totalUnidades  := 0

   if empty( ::getDictionary() )
      Return ( totalUnidades )
   end

   totalUnidades        := notCaja( ::getBoxes() )
   totalUnidades        *= notCero( ::getUnidades() )
   totalUnidades        *= notCero( ::getValue( "UnidadesKit" ) )
   totalUnidades        *= notCero( ::getValue( "Medicion1" ) )
   totalUnidades        *= notCero( ::getValue( "Medicion2" ) )
   totalUnidades        *= notCero( ::getValue( "Medicion3" ) )

Return ( totalUnidades )



static FUNCTION DocumentLine_getBruto( ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   local Bruto       := 0

   if empty( ::getDictionary() )
      Return ( Bruto )
   end

   Bruto             := ::getNetPrice() * ::getTotalUnits()

   if ::getPortes() <> 0
      Bruto          += ::getPortes() * ::getTotalUnits()
   endif

   Bruto             += ::getTotalSpecialTax()







Return ( Bruto )



static FUNCTION DocumentLine_getNetPrice( ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   local Price       := 0

   if empty( ::getDictionary() )
      Return ( Price )
   end

   Price             := ::getPrice()

   Price             -= ::getMonetaryDiscount()

   if ::getPercentageDiscount() <> 0
      Price          -= Price * ::getPercentageDiscount() / 100
   end

   if ::getPercentagePromotion() <> 0
      Price          -= Price * ::getPercentagePromotion() / 100
   end

Return ( Price )



static FUNCTION DocumentLine_getBase( ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   local Base        := 0

   if empty( ::getDictionary() )
      Return ( Base )
   end

   Base              := ::getNetPrice()

   if !empty( ::oSender ) .AND. ( __objHasMethod( ::oSender, "hGetMaster" ) ) .AND. ( ::oSender:hGetMaster( "PorcentajeDescuento1" ) <> 0 )
      Base           -= Base * ::oSender:hGetMaster( "PorcentajeDescuento1" ) / 100
   end

   Base              *= ::getTotalUnits()

Return ( Base )



static FUNCTION DocumentLine_getTotalSpecialTax( ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   Local specialTax  := 0

   if empty( ::getDictionary() )
      Return ( specialTax )
   end

   if ::isSpecialTaxInclude()
      Return ( specialTax )
   end

   if ::isVolumenSpecialTax()
      specialTax     := ::getSpecialTax() * notCero( ::getVolumen() )
   else
      specialTax     := ::getSpecialTax()
   end

Return ( specialTax )



static FUNCTION DocumentLine_setAlmacenMaster( hDictionary ) ; local Self AS CLASS DocumentLine := QSelf() AS CLASS DocumentLine

   if empty( ::getValueFromDictionary( hDictionary, "Almacen" ) )
      Return ( ::setValueFromDictionary( hDictionary, "Almacen" ) )
   end

Return ( nil )









_HB_CLASS SupplierDeliveryNoteDocumentLine ; function SupplierDeliveryNoteDocumentLine ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SupplierDeliveryNoteDocumentLine", iif( .T., { @DocumentLine() }, { @HBObject() } ), @SupplierDeliveryNoteDocumentLine() ) ) ;

   _HB_MEMBER newFromDictionary( oSender, hDictionary); oClass:AddMethod( "newFromDictionary", @SupplierDeliveryNoteDocumentLine_newFromDictionary(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setUnitsReceived(); oClass:AddInline( "setUnitsReceived", {|Self | ( ( Self ) ), ( ::setValue( "UnitsReceived", nUnidadesRecibidasPedPrv( ::getDocumentId(), ::getCode(), ::getValueFirstProperty(), ::getValueSecondProperty(), ::getCodeProvider(), D():AlbaranesProveedoresLineas( ::getView() ) ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getUnitsReceived(); oClass:AddInline( "getUnitsReceived", {|Self | ( ( Self ) ), ( ::getValue( "UnitsReceived" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getUnitsAwaitingReception(); oClass:AddInline( "getUnitsAwaitingReception", {|Self | ( ( Self ) ), ( ::getTotalUnits() - ::getUnitsReceived() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SupplierDeliveryNoteDocumentLine ;



static FUNCTION SupplierDeliveryNoteDocumentLine_newFromDictionary( oSender, hDictionary ) ; local Self AS CLASS SupplierDeliveryNoteDocumentLine := QSelf() AS CLASS SupplierDeliveryNoteDocumentLine

   ::Super():newFromDictionary( oSender, hDictionary )

   ::setUnitsReceived()

Return ( Self )









_HB_CLASS CustomerOrderDocumentLine ; function CustomerOrderDocumentLine ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "CustomerOrderDocumentLine", iif( .T., { @DocumentLine() }, { @HBObject() } ), @CustomerOrderDocumentLine() ) ) ;

   _HB_MEMBER new( oSender) AS CLASS CustomerOrderDocumentLine; oClass:AddMethod( "new", @CustomerOrderDocumentLine_new(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setUnitsReceived(); oClass:AddMethod( "setUnitsReceived", @CustomerOrderDocumentLine_setUnitsReceived(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getUnitsReceived(); oClass:AddMethod( "getUnitsReceived", @CustomerOrderDocumentLine_getUnitsReceived(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getUnitsAwaitingReception(); oClass:AddMethod( "getUnitsAwaitingReception", @CustomerOrderDocumentLine_getUnitsAwaitingReception(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setCustomerNumberId(); oClass:AddMethod( "setCustomerNumberId", @CustomerOrderDocumentLine_setCustomerNumberId(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS CustomerOrderDocumentLine ;



static FUNCTION CustomerOrderDocumentLine_new( oSender ) ; local Self AS CLASS CustomerOrderDocumentLine := QSelf() AS CLASS CustomerOrderDocumentLine

   local hDictionary

   ::Super:new( oSender )

   ::oDocumentHeader    := DocumentHeader():newBuildDictionary( oSender )

   hDictionary          := D():getHashFromAlias( oSender:getLineAlias(), oSender:getLineDictionary() )

   ::setDictionary( hDictionary )

   ::setUnitsReceived()

   ::setCustomerNumberId()

Return ( Self )



static FUNCTION CustomerOrderDocumentLine_getUnitsReceived( ) ; local Self AS CLASS CustomerOrderDocumentLine := QSelf() AS CLASS CustomerOrderDocumentLine

Return ( ::getValue( "UnitsReceived" ) )



static FUNCTION CustomerOrderDocumentLine_getUnitsAwaitingReception( ) ; local Self AS CLASS CustomerOrderDocumentLine := QSelf() AS CLASS CustomerOrderDocumentLine

Return ( ::getTotalUnits() - ::getUnitsReceived() )



static FUNCTION CustomerOrderDocumentLine_setUnitsReceived( ) ; local Self AS CLASS CustomerOrderDocumentLine := QSelf() AS CLASS CustomerOrderDocumentLine

   local nUnitsRecived     := AlbaranesClientesLineasModel():nUnidadesEntregadas( ::getDocumentId(), ::getCode(), ::getCodeFirstProperty(), ::getCodeSecondProperty(), ::getValueFirstProperty(), ::getValueSecondProperty() )
   nUnitsRecived           += FacturasClientesLineasModel():nUnidadesEntregadas( ::getDocumentId(), ::getCode(), ::getCodeFirstProperty(), ::getCodeSecondProperty(), ::getValueFirstProperty(), ::getValueSecondProperty() )

   ::setValue( "UnitsReceived", nUnitsRecived )

Return ( nUnitsRecived )



static FUNCTION CustomerOrderDocumentLine_setCustomerNumberId( ) ; local Self AS CLASS CustomerOrderDocumentLine := QSelf() AS CLASS CustomerOrderDocumentLine

   ::setValue( "NumeroPedido", ::getDocumentId() )

Return ( Self )









_HB_CLASS DeliveryNoteDocumentLine ; function DeliveryNoteDocumentLine ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "DeliveryNoteDocumentLine", iif( .T., { @DocumentLine() }, { @HBObject() } ), @DeliveryNoteDocumentLine() ) ) ;

   _HB_MEMBER new( oSender); oClass:AddMethod( "new", @DeliveryNoteDocumentLine_new(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setUnitsProvided(); oClass:AddMethod( "setUnitsProvided", @DeliveryNoteDocumentLine_setUnitsProvided(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS DeliveryNoteDocumentLine ;



static FUNCTION DeliveryNoteDocumentLine_new( oSender ) ; local Self AS CLASS DeliveryNoteDocumentLine := QSelf() AS CLASS DeliveryNoteDocumentLine

   local hDictionary

   ::Super:new( oSender )

   ::oDocumentHeader    := DocumentHeader():newBuildDictionary( oSender )

   hDictionary          := D():getHashBlankAlbaranesClientesLineas( oSender:nView )

   ::setDictionary( hDictionary )

   ::setUnitsProvided()

Return ( Self )



static FUNCTION DeliveryNoteDocumentLine_setUnitsProvided( ) ; local Self AS CLASS DeliveryNoteDocumentLine := QSelf() AS CLASS DeliveryNoteDocumentLine

   local nUnitsProvided    := 0

   if ( __objHasMethod( Self, "getView()" ) )

      nUnitsProvided       := nUnidadesRecibidasAlbaranesClientesNoFacturados( ::getDocumentId(), ::getCode(), ::getValueFirstProperty(), ::getValueSecondProperty(), D():AlbaranesClientesLineas( ::getView() ) )
      nUnitsProvided       += nUnidadesRecibidasFacturasClientes( ::getDocumentId(), ::getCode(), ::getValueFirstProperty(), ::getValueSecondProperty(), D():FacturasClientesLineas( ::getView() ) )

      ::setValue( "UnitsProvided", nUnitsProvided )

   end

Return ( Self )









_HB_CLASS DictionaryDocumentLine ; function DictionaryDocumentLine ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "DictionaryDocumentLine", iif( .T., { @DocumentLine() }, { @HBObject() } ), @DictionaryDocumentLine() ) ) ;

   _HB_MEMBER new( oSender, hDictionary); oClass:AddMethod( "new", @DictionaryDocumentLine_new(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getRecno(); oClass:AddInline( "getRecno", {|Self | ( ( Self ) ), ( 0 ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getValueMaster(); oClass:AddInline( "getValueMaster", {|Self | ( ( Self ) ), ( ::hDictionaryMaster ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER hGetMaster(); oClass:AddInline( "hGetMaster", {|Self, key | ( ( Self ) ), ( hGet( ::getValueMaster(), key ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER hSetMaster(); oClass:AddInline( "hSetMaster", {|Self, key, value | ( ( Self ) ), ( hSet( ::getValueMaster(), key, value ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER hGetDetail(); oClass:AddInline( "hGetDetail", {|Self, key | ( ( Self ) ), ( hGet( ::oSender:oDocumentLineTemporal:hDictionary, key ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER hSetDetail(); oClass:AddInline( "hSetDetail", {|Self, key, value | ( ( Self ) ), ( hSet( ::oSender:oDocumentLineTemporal:hDictionary, key, value ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS DictionaryDocumentLine ;



static FUNCTION DictionaryDocumentLine_new( oSender, hDictionary ) ; local Self AS CLASS DictionaryDocumentLine := QSelf() AS CLASS DictionaryDocumentLine

   ::oSender            := oSender

   ::setDictionary( hDictionary )

Return ( Self )







_HB_CLASS AliasDocumentLine ; function AliasDocumentLine ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "AliasDocumentLine", iif( .T., { @DocumentLine() }, { @HBObject() } ), @AliasDocumentLine() ) ) ;

   _HB_MEMBER getAlias(); oClass:AddInline( "getAlias", {|Self | ( ( Self ) ), ( ::oSender:getLineAlias() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getDictionary(); oClass:AddInline( "getDictionary", {|Self | ( ( Self ) ), ( ::oSender:getLineDictionary() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getValue(); oClass:AddInline( "getValue", {|Self, key, uDefault | ( ( Self ) ), ( D():getFieldFromAliasDictionary( key, ::getAlias(), ::getDictionary(), uDefault ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setValue(); oClass:AddInline( "setValue", {|Self, key, value | ( ( Self ) ), ( hSet( ::hDictionary, key, value ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS AliasDocumentLine ;