#line 91 "\fwh1801\include\fivewin.ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 3 ".\.\Prg\Dotnetco.prg"
_HB_CLASS TDotNetColumn ; function TDotNetColumn ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TDotNetColumn", iif( .F., { }, { @HBObject() } ), @TDotNetColumn() ) ) ;

      _HB_MEMBER { oGrupo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGrupo"}, .F. )
      _HB_MEMBER { oCarpeta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCarpeta"}, .F. )
      _HB_MEMBER { oParent } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oParent"}, .F. )
      _HB_MEMBER { AS ARRAY aItems } ; oClass:AddMultiData( "ARRAY", {}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aItems"}, .F. )

      _HB_MEMBER New( oGrupo) AS CLASS TDotNetColumn; oClass:AddMethod( "New", @TDotNetColumn_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER AddItem(); oClass:AddInline( "AddItem", {|Self, oItem | ( ( Self ) ), aadd( ::aItems, oItem ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER Paint( hDC); oClass:AddMethod( "Paint", @TDotNetColumn_Paint(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER MaxWidthOfCol(); oClass:AddMethod( "MaxWidthOfCol", @TDotNetColumn_MaxWidthOfCol(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TDotNetColumn ;


   static FUNCTION TDotNetColumn_New( oGrupo ) ; local Self AS CLASS TDotNetColumn := QSelf() AS CLASS TDotNetColumn


   ::oGrupo      := oGrupo
   ::oCarpeta    := oGrupo:oCarpeta
   ::oParent     := oGrupo:oCarpeta:oParent

   aadd( ::oGrupo:aColumns, self )

return self


   static FUNCTION TDotNetColumn_Paint( hDC ) ; local Self AS CLASS TDotNetColumn := QSelf() AS CLASS TDotNetColumn




return 0


   static FUNCTION TDotNetColumn_MaxWidthOfCol( ) ; local Self AS CLASS TDotNetColumn := QSelf() AS CLASS TDotNetColumn

local nMax := 0
local n

 for n := 1 to len( ::aItems )
     nMax := max( nMax, ::aItems[ n ]:nWidth )
 next

return nMax
