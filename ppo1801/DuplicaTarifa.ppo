#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 5 ".\.\Prg\DuplicaTarifa.prg"
_HB_CLASS DuplicaTarifa ; function DuplicaTarifa ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "DuplicaTarifa", iif( .F., { }, { @HBObject() } ), @DuplicaTarifa() ) ) ;

   _HB_MEMBER { oDlg } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDlg"}, .F. )

   _HB_MEMBER { oClienteOrigen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oClienteOrigen"}, .F. )
   _HB_MEMBER { cClienteOrigen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cClienteOrigen"}, .F. )

   _HB_MEMBER { oClienteDestino } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oClienteDestino"}, .F. )
   _HB_MEMBER { cClienteDestino } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cClienteDestino"}, .F. )

   _HB_MEMBER { oBrowse } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBrowse"}, .F. )

   _HB_MEMBER { aAtipicas } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aAtipicas"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @DuplicaTarifa_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @DuplicaTarifa_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lValidClienteOrigen(); oClass:AddMethod( "lValidClienteOrigen", @DuplicaTarifa_lValidClienteOrigen(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lValidClienteDestino(); oClass:AddMethod( "lValidClienteDestino", @DuplicaTarifa_lValidClienteDestino(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER LoadAtipica(); oClass:AddMethod( "LoadAtipica", @DuplicaTarifa_LoadAtipica(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER excute(); oClass:AddMethod( "excute", @DuplicaTarifa_excute(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS DuplicaTarifa ;



static FUNCTION DuplicaTarifa_New( ) ; local Self AS CLASS DuplicaTarifa := QSelf() AS CLASS DuplicaTarifa

   ::aAtipicas          := {}























   aAdd( ::aAtipicas,   {  "lSel" => .T., "codigocliente" => "", "nombrecliente" => "", "codigoarticulo" => "", "nombrearticulo" => "", "codigoFamilia" => "", "nTipAtp" => 0, "dFecIni" => ctod( "" ), "dFecFin" => ctod( "" ), "costo" => 0, "precio1" => 0, "precio2" => 0, "precio3" => 0, "precio4" => 0, "precio5" => 0, "precio6" => 0, "prciva1" => 0, "prciva2" => 0, "prciva3" => 0, "prciva4" => 0, "prciva5" => 0, "prciva6" => 0, "ndto" => 0 } )

   ::cClienteOrigen     := Space( 12 )
   ::cClienteDestino    := Space( 12 )

RETURN ( Self )



static FUNCTION DuplicaTarifa_Resource( ) ; local Self AS CLASS DuplicaTarifa := QSelf() AS CLASS DuplicaTarifa

   local oBmp

   if oWnd() <> nil
      oWnd():CloseAll()
   end

   ::oDlg = TDialog():New(,,,,, "DUPLTARIFA",, .F.,,,,, oWnd(), .F.,,,,,, .F.,, "::oDlg", nil, )

      oBmp := TBitmap():ReDefine( 600, "gc_symbol_euro_48",, ::oDlg,,, .F., .F.,,, .F.,,, .T. )





      ::oClienteOrigen := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::cClienteOrigen, ::cClienteOrigen:= u ) }, ::oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "LUPA",, 111 )

      ::oClienteOrigen:bHelp     := {|| BrwClient( ::oClienteOrigen, ::oClienteOrigen:oHelpText ) }
      ::oClienteOrigen:bValid    := {|| ::lValidClienteOrigen() }





      ::oClienteDestino := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::cClienteDestino, ::cClienteDestino:= u ) }, ::oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "LUPA",, 121 )

      ::oClienteDestino:bHelp     := {|| BrwClient( ::oClienteDestino, ::oClienteDestino:oHelpText ) }
      ::oClienteDestino:bValid    := {|| ::lValidClienteDestino() }

      ::oBrowse                        := IXBrowse():New( ::oDlg )

      ::oBrowse:bClrSel                := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
      ::oBrowse:bClrSelFocus           := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

      ::oBrowse:SetArray( ::aAtipicas, , , .F. )

      ::oBrowse:nMarqueeStyle          := 5
      ::oBrowse:lRecordSelector        := .F.
      ::oBrowse:lHScroll               := .F.

      ::oBrowse:CreateFromResource( 130 )

      ::oBrowse:bLDblClick             := {|| hSet( ::aAtipicas[ ::oBrowse:nArrayAt ], "lSel", !hget( ::aAtipicas[ ::oBrowse:nArrayAt ], "lSel" ) ), ::oBrowse:refresh() }

      with object ( ::oBrowse:AddCol() )
         :cHeader          := "Sel"
         :bStrData         := {|| "" }
         :bEditValue       := {|| hGet( ::aAtipicas[ ::oBrowse:nArrayAt ], "lSel" ) }
         :nWidth           := 20
         :SetCheck( { "Sel16", "Nil16" } )
      end

      with object ( ::oBrowse:AddCol() )
         :cHeader          := "Artículo"
         :bEditValue       := {|| AllTrim( hGet( ::aAtipicas[ ::oBrowse:nArrayAt ], "codigoarticulo" ) ) + " - " + AllTrim( hGet( ::aAtipicas[ ::oBrowse:nArrayAt ], "nombrearticulo" ) ) }
         :nWidth           := 200
      end

      with object ( ::oBrowse:AddCol() )
         :cHeader          := "Familia"
         :bEditValue       := {|| AllTrim( hGet( ::aAtipicas[ ::oBrowse:nArrayAt ], "codigoFamilia" ) ) }
         :nWidth           := 150
      end

      with object ( ::oBrowse:AddCol() )
         :cHeader          := "Precio 1"
         :bStrData         := {|| hGet( ::aAtipicas[ ::oBrowse:nArrayAt ], "precio1" ) }
         :cEditPicture     := "@E 999.99"
         :nWidth           := 76
         :nDataStrAlign    := 1
         :nHeadStrAlign    := 1
      end

      with object ( ::oBrowse:AddCol() )
         :cHeader          := "Descuento"
         :bStrData         := {|| hGet( ::aAtipicas[ ::oBrowse:nArrayAt ], "ndto" ) }
         :cEditPicture     := "@E 999.99"
         :nWidth           := 76
         :nDataStrAlign    := 1
         :nHeadStrAlign    := 1
      end

      TButton():ReDefine( 1, {||( ::excute() )}, ::oDlg,,, .F.,,,, .F. )
      TButton():ReDefine( 2, {||( ::oDlg:end() )}, ::oDlg,,, .F.,,,, .F. )

   ::oDlg:AddFastKey( 116, {|| ::excute() } )

   ::oDlg:Activate( ::oDlg:bLClicked, ::oDlg:bMoved, ::oDlg:bPainted, .T.,,,, ::oDlg:bRClicked,,, )

   oBmp:End()

RETURN ( Self )



static FUNCTION DuplicaTarifa_lValidClienteOrigen( ) ; local Self AS CLASS DuplicaTarifa := QSelf() AS CLASS DuplicaTarifa

   cClient( ::oClienteOrigen, , ::oClienteOrigen:oHelpText )

   if !Empty( ::cClienteOrigen )
      ::LoadAtipica()
   end

RETURN ( .T. )



static FUNCTION DuplicaTarifa_lValidClienteDestino( ) ; local Self AS CLASS DuplicaTarifa := QSelf() AS CLASS DuplicaTarifa

   cClient( ::oClienteDestino, , ::oClienteDestino:oHelpText )

RETURN ( .T. )



static FUNCTION DuplicaTarifa_LoadAtipica( ) ; local Self AS CLASS DuplicaTarifa := QSelf() AS CLASS DuplicaTarifa

   local aAtp    := AtipicasModel():getAtipicasFromCliente( ::cClienteOrigen )

   if hb_isarray( aAtp ) .AND. len( aAtp ) > 0

      ::aAtipicas      := aAtp

      ::oBrowse:SetArray( aAtp )
      ::oBrowse:Refresh()

   end

RETURN ( .T. )



static FUNCTION DuplicaTarifa_excute( ) ; local Self AS CLASS DuplicaTarifa := QSelf() AS CLASS DuplicaTarifa

   if Empty( ::cClienteOrigen )
      MsgStop( "Cliente de Origen no puede estar vacío" )
      ::oClienteOrigen:SetFocus()
      Return .F.
   end

   if Empty( ::cClienteDestino )
      MsgStop( "Cliente de destino no puede estar vacío" )
      ::oClienteDestino:SetFocus()
      Return .F.
   end

   if ::cClienteOrigen == ::cClienteDestino
      MsgStop( "Cliente de origen y destino tienen que ser distintos" )
      ::oClienteDestino:SetFocus()
      Return .F.
   end

   aEval( ::aAtipicas, {|h| if( hget( h, "lSel" ), AtipicasModel():setAtipicasFromDplCliente( h, ::cClienteDestino ), ) } )

   MsgInfo( "Proceso realizado con éxito" )

   ::oDlg:End()

RETURN ( .T. )







FUNCTION DupTarifa( oMenuItem, oWnd )

   local oDupTarifa
   local nLevel   := Auth():Level( oMenuItem )
   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      return ( nil )
   end

   oDupTarifa       := DuplicaTarifa():New():Resource()

RETURN nil
