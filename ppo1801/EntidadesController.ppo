#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\EntidadesController.prg"
_HB_CLASS EntidadesController ; function EntidadesController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "EntidadesController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @EntidadesController() ) ) ;

   _HB_MEMBER { oCamposExtraValoresController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraValoresController"}, .F. )

   _HB_MEMBER { oDireccionesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDireccionesController"}, .F. )

   _HB_MEMBER { oContactosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oContactosController"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @EntidadesController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @EntidadesController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS EntidadesController ;



static FUNCTION EntidadesController_New( oSenderController ) ; local Self AS CLASS EntidadesController := QSelf() AS CLASS EntidadesController

   ::Super:New( oSenderController )

   ::cTitle                               := "Entidades"

   ::cName                                := "entidades"



   ::hImage                               := {  "16" => "gc_office_building2_16", "32" => "gc_office_building2_32", "48" => "gc_office_building2_48" }

   ::nLevel                               := Auth():Level( ::cName )

   ::oModel                               := SQLEntidadesModel():New( self )

   ::oBrowseView                          := EntidadesBrowseView():New( self )

   ::oDialogView                          := EntidadesView():New( self )

   ::oValidator                           := EntidadesValidator():New( self, ::oDialogView )

   ::oDireccionesController               := DireccionesController():New( self )

   ::oDireccionesController:oValidator    := DireccionesEntidadesValidator():New( ::oDireccionesController, ::oDialogView )

   ::oCamposExtraValoresController        := CamposExtraValoresController():New( self, ::oModel:cTableName )


   ::oContactosController                 := ContactosController():New( self )

   ::oRepository                          := TransportistasRepository():New( self )

   ::oGetSelector                         := GetSelector():New( self )

   ::oFilterController:setTableToFilter( ::oModel:cTableName )

   ::oModel:setEvent( "loadedBlankBuffer",            {|| ::oDireccionesController:loadBlankBuffer() } )
   ::oModel:setEvent( "insertedBuffer",               {|| ::oDireccionesController:insertBuffer() } )

   ::oModel:setEvent( "loadedCurrentBuffer",          {|| ::oDireccionesController:loadedCurrentBuffer( ::getUuid() ) } )
   ::oModel:setEvent( "updatedBuffer",                {|| ::oDireccionesController:updateBuffer( ::getUuid() ) } )

   ::oModel:setEvent( "loadedDuplicateCurrentBuffer", {|| ::oDireccionesController:loadedDuplicateCurrentBuffer( ::getUuid() ) } )
   ::oModel:setEvent( "loadedDuplicateBuffer",        {|| ::oDireccionesController:loadedDuplicateBuffer( ::getUuid() ) } )

   ::oModel:setEvent( "deletedSelection",             {|| ::oDireccionesController:deleteBuffer( ::getUuidFromRecno( ::oBrowseView:getBrowse():aSelected ) ) } )

   ::oModel:setEvent( "loadedBlankBuffer",            {|| ::oContactosController:loadBlankBuffer() } )
   ::oModel:setEvent( "insertedBuffer",               {|| ::oContactosController:insertBuffer() } )

   ::oModel:setEvent( "loadedCurrentBuffer",          {|| ::oContactosController:loadedCurrentBuffer( ::getUuid() ) } )
   ::oModel:setEvent( "updatedBuffer",                {|| ::oContactosController:updateBuffer( ::getUuid() ) } )

   ::oModel:setEvent( "loadedDuplicateCurrentBuffer", {|| ::oContactosController:loadedDuplicateCurrentBuffer( ::getUuid() ) } )
   ::oModel:setEvent( "loadedDuplicateBuffer",        {|| ::oContactosController:loadedDuplicateBuffer( ::getUuid() ) } )

   ::oModel:setEvent( "deletedSelection",             {|| ::oContactosController:deleteBuffer( ::getUuidFromRecno( ::oBrowseView:getBrowse():aSelected ) ) } )

RETURN ( Self )



static FUNCTION EntidadesController_End( ) ; local Self AS CLASS EntidadesController := QSelf() AS CLASS EntidadesController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oDireccionesController:End()

   ::oContactosController:End()

   ::oCamposExtraValoresController:End()

   ::oRepository:End()

   ::oGetSelector:End()

   ::Super:End()

RETURN ( Self )











_HB_CLASS EntidadesBrowseView ; function EntidadesBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "EntidadesBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @EntidadesBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @EntidadesBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS EntidadesBrowseView ;



static FUNCTION EntidadesBrowseView_addColumns( ) ; local Self AS CLASS EntidadesBrowseView := QSelf() AS CLASS EntidadesBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "codigo"
      :cHeader             := "Código"
      :nWidth              := 100
      :bEditValue          := {|| ::getRowSet():fieldGet( "codigo" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "descripcion"
      :cHeader             := "Descripción"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "descripcion" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "nombre"
      :cHeader             := "Nombre"
      :nWidth              := 200
      :bEditValue          := {|| ::getRowSet():fieldGet( "nombre" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "direccion"
      :cHeader             := "Dirección"
      :nWidth              := 200
      :bEditValue          := {|| ::getRowSet():fieldGet( "direccion" )  }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "codigo_postal"
      :cHeader             := "Código postal"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "codigo_postal" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "poblacion"
      :cHeader             := "Población"
      :nWidth              := 200
      :bEditValue          := {|| ::getRowSet():fieldGet( "poblacion" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "provincia"
      :cHeader             := "Provincia"
      :nWidth              := 100
      :bEditValue          := {|| ::getRowSet():fieldGet( "provincia" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end









RETURN ( self )









_HB_CLASS EntidadesView ; function EntidadesView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "EntidadesView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @EntidadesView() ) ) ;

   _HB_MEMBER { oSayCamposExtra } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayCamposExtra"}, .F. )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @EntidadesView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER StartDialog(); oClass:AddMethod( "StartDialog", @EntidadesView_StartDialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS EntidadesView ;



static FUNCTION EntidadesView_Activate( ) ; local Self AS CLASS EntidadesView := QSelf() AS CLASS EntidadesView

   local oSayCamposExtra



   ::oDialog = TDialog():New(,,,, ::LblTitle() + "entidades", "ENTIDAD",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )






   ::oBitmap := TBitmap():ReDefine( 900, ::oController:getImage( "48" ),, ::oDialog,,, .F., .F.,,, .F.,,, .T. )



    ::oMessage := TSay():ReDefine( 800,, ::oDialog,,,, .F., getBoldFont(), .F., .F., )






   TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo" ], ::oController:oModel:hBuffer[ "codigo" ]:= u ) }, ::oDialog,, "@! NNNNNNNNNNNNNNNNNNNN", {||       ( ::oController:validate( "codigo" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "descripcion" ], ::oController:oModel:hBuffer[ "descripcion" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "descripcion" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre" ], ::oController:oModel:hBuffer[ "nombre" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "nombre" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "gnl_fisico" ], ::oController:oModel:hBuffer[ "gnl_fisico" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "gnl_fisico" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 140, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "punto_logico_op" ], ::oController:oModel:hBuffer[ "punto_logico_op" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "punto_logico_op" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )



   ::oController:oDireccionesController:oDialogView:ExternalCoreRedefine( ::oDialog )



   ::oController:oContactosController:oDialogView:ExternalRedefine( ::oDialog )




   TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "web" ], ::oController:oModel:hBuffer[ "web" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TGetHlp():ReDefine( 160, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo_ine" ], ::oController:oModel:hBuffer[ "codigo_ine" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TGetHlp():ReDefine( 170, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "cno_cnae" ], ::oController:oModel:hBuffer[ "cno_cnae" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TGetHlp():ReDefine( 180, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "otros" ], ::oController:oModel:hBuffer[ "otros" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )







   ::oSayCamposExtra := TSay():ReDefine( 190, {||      "Campos extra..."}, ::oDialog,, ( 10 + ( 152 * 256 ) + ( 234 * 65536 ) ),, .F., getBoldFont(), .F., .F., )
   ::oSayCamposExtra:lWantClick  := .T.
   ::oSayCamposExtra:OnClick     := {|| ::oController:oCamposExtraValoresController:Edit( ::oController:getUuid() ) }





   TButton():ReDefine( 1, {||( if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

      ::oDialog:bStart  := {|| ::StartDialog() }

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 116, {|| if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) } )
   end

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

   ::oBitmap:end()

RETURN ( ::oDialog:nResult )



static FUNCTION EntidadesView_StartDialog( ) ; local Self AS CLASS EntidadesView := QSelf() AS CLASS EntidadesView

   ::oController:oDireccionesController:oDialogView:StartDialog()

   ::oController:oContactosController:oDialogView( ::oDialog )

RETURN ( nil )








_HB_CLASS EntidadesValidator ; function EntidadesValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "EntidadesValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @EntidadesValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @EntidadesValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS EntidadesValidator ;



static FUNCTION EntidadesValidator_getValidators( ) ; local Self AS CLASS EntidadesValidator := QSelf() AS CLASS EntidadesValidator







   ::hValidators  := {  "codigo" =>          {  "required"     => "El código es un dato requerido", "unique"       => "El código introducido ya existe" } , "descripcion" =>     {  "required"     => "La descripción es un dato requerido" } , "gnl_fisico" =>      {  "required"     => "GNL físico es un dato requerido" } , "punto_logico_op" => {  "required"     => "Punto lógico op es un dato requerido" } , "nombre" =>          {  "required"     => "El nombre es un dato requerido"  }, "unique"       => "El nombre introducido ya existe"  }

RETURN ( ::hValidators )










_HB_CLASS SQLEntidadesModel ; function SQLEntidadesModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLEntidadesModel", iif( .T., { @SQLCompanyModel() }, { @HBObject() } ), @SQLEntidadesModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "entidades", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLEntidadesModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getInitialSelect(); oClass:AddMethod( "getInitialSelect", @SQLEntidadesModel_getInitialSelect(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLEntidadesModel ;



static FUNCTION SQLEntidadesModel_getInitialSelect( ) ; local Self AS CLASS SQLEntidadesModel := QSelf() AS CLASS SQLEntidadesModel


















   local cSelect  := "SELECT entidades.id,"                                                               + " " +  "entidades.uuid,"                                                                 + " " +  "entidades.codigo,"                                                               + " " +  "entidades.descripcion,"                                                          + " " +  "entidades.nombre,"                                                               + " " +  "entidades.gnl_fisico,"                                                           + " " +  "entidades.punto_logico_op,"                                                      + " " +  "entidades.web,"                                                                  + " " +  "entidades.codigo_ine,"                                                           + " " +  "entidades.cno_cnae,"                                                             + " " +  "entidades.otros,"                                                                + " " +  "direcciones.direccion as direccion,"                                             + " " +  "direcciones.codigo_postal as codigo_postal,"                                     + " " +  "direcciones.poblacion as poblacion,"                                             + " " +  "direcciones.provincia as provincia,"                                             + " " +  "direcciones.codigo_pais as codigo_pais"                                          + " " +  "FROM  entidades"                                                                    + " " +  "INNER JOIN direcciones ON entidades.uuid = direcciones.parent_uuid"              + " "

RETURN ( cSelect )



static FUNCTION SQLEntidadesModel_getColumns( ) ; local Self AS CLASS SQLEntidadesModel := QSelf() AS CLASS SQLEntidadesModel


   hset( ::hColumns, "id",                {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",              {  "create"    => "VARCHAR(40) NOT NULL UNIQUE"             , "default"   => {|| win_uuidcreatestring() } }            )

   ::getEmpresaColumns()


   hset( ::hColumns, "codigo",            {  "create"    => "VARCHAR( 20 ) NOT NULL"                   , "default"   => {|| space( 20 ) } }                        )


   hset( ::hColumns, "descripcion",       {  "create"    => "VARCHAR( 200 )"                          , "default"   => {|| space( 200 ) } }                      )


   hset( ::hColumns, "nombre",            {  "create"    => "VARCHAR( 200 )"                          , "default"   => {|| space( 200 ) } }                      )


   hset( ::hColumns, "gnl_fisico",        {  "create"    => "VARCHAR( 200 )"                           , "default"   => {|| space( 200 ) } }                       )


   hset( ::hColumns, "punto_logico_op",   {  "create"    => "VARCHAR( 200 )"                           , "default"   => {|| space( 200 ) } }                       )


   hset( ::hColumns, "web",               {  "create"    => "VARCHAR( 200 )"                           , "default"   => {|| space( 200 ) } }                       )


   hset( ::hColumns, "codigo_ine",        {  "create"    => "VARCHAR( 20 )"                           , "default"   => {|| space( 20 ) } }                       )


   hset( ::hColumns, "cno_cnae",          {  "create"    => "VARCHAR( 20 )"                           , "default"   => {|| space( 20 ) } }                       )


   hset( ::hColumns, "otros",             {  "create"    => "VARCHAR( 200 )"                           , "default"   => {|| space( 200 ) } }                       )

RETURN ( ::hColumns )











_HB_CLASS EntidadesRepository ; function EntidadesRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "EntidadesRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @EntidadesRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLEntidadesModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS EntidadesRepository ;