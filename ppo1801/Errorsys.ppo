#line 8 ".\.\Prg\Errorsys.prg"
Procedure ErrorSys()

   ErrorBlock( { | oError | DefError( oError ) } )

Return




Function DefError( oError )

   Local nHandle
   Local cMessage
   Local aStack := {}
   Local j,i

   If oError:GenCode == 5
      Return ( 0 )
   EndIf

   If oError:GenCode == 21 .AND. oError:OsCode == 32 .AND. oError:CanDefault
      NetErr( .T. )
      Return .F.
   EndIf

   If oError:GenCode == 40 .AND. oError:CanDefault
      NetErr( .T. )
      Return .F.
   EndIf





   If oError:GenCode == 32 .AND. oError:CanDefault
      Return .F.
   EndIf

   If oError:GenCode == 34 .AND. oError:CanDefault
      Return .F.
   EndIf

   If oError:GenCode == 1035 .AND. oError:CanDefault
      Return .F.
   EndIf

   cMessage := ErrorMessage( oError )

   If !Empty( oError:OsCode )
      cMessage += " (DOS Error " + LTrim( Str( oError:OsCode ) ) + ") "
   EndIf

   i := 1

   while !Empty( ProcName( i ) )

      aAdd( aStack, "- Llamado desde " + Trim( ProcName( i ) ) + "(" + LTrim( Str( ProcLine( i ) ) ) + ")" )

          for j = 1 to ParamCount( i )
             aAdd( aStack, "     Param " + Str( j, 3 ) + ":" + ValType( GetParam( i, j ) ) + " " + cGetInfo( GetParam( i, j ) ) )
          next

          for j = 1 to LocalCount( i )
             aAdd( aStack, "     Local " + Str( j, 3 ) + ":" + ValType( GetLocal( i, j ) ) + " " + cGetInfo( GetLocal( i, j ) ) )
          next

      i++

   EndDo





   fErase( "Error.log" )

   nHandle  := fCreate( "Error.log" )

   fWrite( nHandle, cMessage + Chr( 13 ) + Chr( 10 ) )
   for i := 1 to len( aStack )
      fWrite( nHandle, aStack[ i ] + Chr( 13 ) + Chr( 10 ) )
   next

   fClose( nHandle )





   ShowErrorMessage( cMessage, aStack )











   ErrorLevel( 1 )
   __QUIT()

return .F.




Function ErrorMessage( oError )

   Local i        := 1
   Local cMessage := ""

   if Valtype( oError ) <> "O"
      Return cMessage
   end

   cMessage       := If( oError:Severity > 1, "Error ", "Warning " )

   If ValType( oError:SubSystem ) == "C"
      cMessage    += oError:SubSystem()
   Else
      cMessage    += "???"
   EndIf

   If ValType( oError:SubCode ) == "N"
      cMessage    += "/" + LTrim( Str( oError:SubCode ) )
   Else
      cMessage    += "/???"
   EndIf

   If ValType( oError:Description ) == "C"
      cMessage    += "  " + oError:Description
   EndIf

   If !Empty( oError:FileName )
      cMessage    += ": " + oError:FileName
   ElseIf !Empty( oError:Operation )
      cMessage    += ": " + oError:Operation
   EndIf





   while !Empty( ProcName( i ) )
      cMessage    += Chr( 13 ) + Chr( 10 ) + "Llamado desde " + Trim( ProcName( i ) ) + "(" + LTrim( Str( ProcLine( i ) ) ) + ")"
      i++
   EndDo

Return cMessage




Function cGetInfo( uVal )

   local cType := ValType( uVal )

   do case
      case cType == "C"
           return uVal

      case cType == "O"
           return "Class: " + uVal:ClassName()

      case cType == "A"
           return "Len: " + Str( Len( uVal ), 4 )

      otherwise
           return cValToChar( uVal )
   endcase

return nil




Static Function ShowErrorMessage( cMessage, aStack )

   Local oDlg
   Local oIco

   oDlg := TDialog():New( ,,,, "GST Rotor Error",,, .F.,,,,,, .F.,,,,880, 616 )
   oIco := LoadIcon( 0, 32513 )

   TButton():New( 290, 170, "&Enviar error", oDlg, {|| SendErrorMessage( cMessage, aStack ), oDlg:End() }, 50, 12,,, .T., .T., .F.,, .F.,,, .F. )

   TButton():New( 290, 230, "&Salir", oDlg, {|| oDlg:End() }, 50, 12,,, .T., .T., .F.,, .F.,,, .F. )

   TSay():New( 9, 26, {|| OemToAnsi( cMessage ) }, oDlg,,, .F., .F., .F., .T.,,, 149, 20, .F., .F., .F., .F., .F. )

   TListBox():New( 30, 3, { || nil }, aStack, 434, 264,, oDlg,,,, .T., .F.,,,, .F.,,,, .F., .F. )

   oDlg:Activate( ,, {| hDC | DrawIcon( hDC, 6, 6, oIco ) }, .T. )

   DestroyIcon( oIco )

return nil

Static Function SendErrorMessage( cMessage, aStack )

   Local n

   for n := 1 to len( aStack )
      cMessage += aStack[ n ] + Chr( 13 ) + Chr( 10 )
   next



   ShellExecute( 0, "open",   "mailto:dario@gestool.es" + Space( 1 ) + "?Subject=Error " + cNbrEmp() + Space( 1 ) + "&body=" + cMessage )







return nil


Function ApoloCallStack()

   Local i        := 1
   Local cMessage := ""

   while !Empty( ProcName( i ) )
      cMessage    += Chr( 13 ) + Chr( 10 ) + "Llamado desde " + Trim( ProcName( i ) ) + "(" + LTrim( Str( ProcLine( i ) ) ) + ")"
      i++
   EndDo

   msgStop( cMessage )

Return cMessage
