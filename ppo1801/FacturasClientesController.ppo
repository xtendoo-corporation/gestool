#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\FacturasClientesController.prg"
_HB_CLASS FacturasClientesController ; function FacturasClientesController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FacturasClientesController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @FacturasClientesController() ) ) ;

   _HB_MEMBER { oClientesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oClientesController"}, .F. )

   _HB_MEMBER { oSerieDocumentoComponent } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSerieDocumentoComponent"}, .F. )

   _HB_MEMBER { oNumeroDocumentoComponent } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oNumeroDocumentoComponent"}, .F. )

   _HB_MEMBER { oFormasPagoController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFormasPagoController"}, .F. )

   _HB_MEMBER { oRutasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oRutasController"}, .F. )

   _HB_MEMBER { oAgentesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAgentesController"}, .F. )

   _HB_MEMBER { oAlmacenesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAlmacenesController"}, .F. )

   _HB_MEMBER { oContadoresModel } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oContadoresModel"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @FacturasClientesController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @FacturasClientesController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER loadedBlankBuffer(); oClass:AddMethod( "loadedBlankBuffer", @FacturasClientesController_loadedBlankBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER insertedBuffer(); oClass:AddMethod( "insertedBuffer", @FacturasClientesController_insertedBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FacturasClientesController ;



static FUNCTION FacturasClientesController_New( ) ; local Self AS CLASS FacturasClientesController := QSelf() AS CLASS FacturasClientesController

   ::Super:New()

   ::cTitle                      := "Facturas de clientes"

   ::cName                       := "facturas_clientes"

   ::lTransactional              := .T.



   ::hImage                      := {  "16" => "gc_document_text_user_16", "32" => "gc_document_text_user_32", "48" => "gc_document_text_user_48" }

   ::oModel                      := SQLFacturasClientesModel():New( self )



   ::oDialogView                 := FacturasClientesView():New( self )

   ::oValidator                  := FacturasClientesValidator():New( self, ::oDialogView )

   ::oBrowseView                 := FacturasClientesBrowseView():New( self )

   ::oRepository                 := FacturasClientesRepository():New( self )

   ::oClientesController         := ClientesController():New( self )

   ::oNumeroDocumentoComponent   := NumeroDocumentoComponent():New( self )

   ::oSerieDocumentoComponent    := SerieDocumentoComponent():New( self )

   ::oFormasPagoController       := FormasPagosController():New( self )
   ::oFormasPagoController:setView( ::oDialogView )

   ::oRutasController            := RutasController():New( self )
   ::oRutasController:setView( ::oDialogView )

   ::oAgentesController          := AgentesController():New( self )
   ::oAgentesController:setView( ::oDialogView )

   ::oAlmacenesController        := AlmacenesController():New( self )
   ::oAlmacenesController:setView( ::oDialogView )

   ::oFilterController:setTableToFilter( ::oModel:cTableName )

   ::oModel:setEvent( "loadedBlankBuffer",   {|| ::loadedBlankBuffer() } )
   ::oModel:setEvent( "insertedBuffer",      {|| ::insertedBuffer() } )

RETURN ( Self )



static FUNCTION FacturasClientesController_End( ) ; local Self AS CLASS FacturasClientesController := QSelf() AS CLASS FacturasClientesController

   ::oClientesController:End()

   ::oFormasPagoController:End()

   ::oRutasController:End()

   ::oAgentesController:End()

   ::oAlmacenesController:End()

   ::Super:End()

RETURN ( Self )



static FUNCTION FacturasClientesController_loadedBlankBuffer( ) ; local Self AS CLASS FacturasClientesController := QSelf() AS CLASS FacturasClientesController



RETURN ( Self )



static FUNCTION FacturasClientesController_insertedBuffer( ) ; local Self AS CLASS FacturasClientesController := QSelf() AS CLASS FacturasClientesController



RETURN ( Self )






_HB_CLASS FacturasClientesRepository ; function FacturasClientesRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FacturasClientesRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @FacturasClientesRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLFacturasClientesModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FacturasClientesRepository ;







_HB_CLASS FacturasClientesValidator ; function FacturasClientesValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FacturasClientesValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @FacturasClientesValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @FacturasClientesValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FacturasClientesValidator ;



static FUNCTION FacturasClientesValidator_getValidators( ) ; local Self AS CLASS FacturasClientesValidator := QSelf() AS CLASS FacturasClientesValidator


   ::hValidators  := {  "codigo" =>    {  "required"   => "El cÃ³digo del cliente es un dato requerido"  } , "nombre" =>    {  "required"   => "El nombre del cliente es un dato requerido" }  }

RETURN ( ::hValidators )







_HB_CLASS FacturasClientesBrowseView ; function FacturasClientesBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FacturasClientesBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @FacturasClientesBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @FacturasClientesBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FacturasClientesBrowseView ;



static FUNCTION FacturasClientesBrowseView_addColumns( ) ; local Self AS CLASS FacturasClientesBrowseView := QSelf() AS CLASS FacturasClientesBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 100
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

RETURN ( self )
