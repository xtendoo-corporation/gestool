#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\FormaPagoController.prg"
_HB_CLASS FormasPagosController ; function FormasPagosController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FormasPagosController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @FormasPagosController() ) ) ;

   _HB_MEMBER { oBancosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBancosController"}, .F. )

   _HB_MEMBER { oCamposExtraValoresController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraValoresController"}, .F. )

   _HB_MEMBER { oDocumentosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDocumentosController"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @FormasPagosController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @FormasPagosController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FormasPagosController ;



static FUNCTION FormasPagosController_New( oSenderController ) ; local Self AS CLASS FormasPagosController := QSelf() AS CLASS FormasPagosController

   ::Super:New( oSenderController )

   ::cTitle                      := "Formas de pago"

   ::cName                       := "forma_pago"



   ::hImage                      := {  "16" => "gc_credit_cards_16", "32" => "gc_credit_cards_32", "48" => "gc_credit_cards_48" }

   ::nLevel                      := Auth():Level( ::cName )

   ::oModel                      := SQLFormaPagoModel():New( self )

   ::oBrowseView                 := FormaPagoBrowseView():New( self )

   ::oDialogView                 := FormaPagoView():New( self )

   ::oBancosController           := CuentasBancariasController():new( self )

   ::oDocumentosController       :=  DocumentosController():New( self )

   ::oValidator                  := FormaPagoValidator():New( self, ::oDialogView )

   ::oCamposExtraValoresController  := CamposExtraValoresController():New( self, ::oModel:cTableName )

   ::oRepository                 := FormaPagoRepository():New( self )

   ::oGetSelector                := GetSelector():New( self )

RETURN ( Self )



static FUNCTION FormasPagosController_End( ) ; local Self AS CLASS FormasPagosController := QSelf() AS CLASS FormasPagosController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oRepository:End()

   ::oCamposExtraValoresController:End()

   ::oDocumentosController:End()

   ::Super:End()

RETURN ( Self )











_HB_CLASS FormaPagoBrowseView ; function FormaPagoBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FormaPagoBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @FormaPagoBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @FormaPagoBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FormaPagoBrowseView ;



static FUNCTION FormaPagoBrowseView_addColumns( ) ; local Self AS CLASS FormaPagoBrowseView := QSelf() AS CLASS FormaPagoBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "tactil"
      :cHeader             := "Tactil"
      :nWidth              := 20
      :nHeadBmpNo          := 3
      :bEditValue          := {|| ::getRowSet():fieldGet( "incluir_en_terminal" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :SetCheck( { "Sel16", "Nil16" } )
      :AddResource( "TACTIL16" )
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "codigo"
      :cHeader             := "Código"
      :nWidth              := 50
      :bEditValue          := {|| ::getRowSet():fieldGet( "codigo" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "nombre"
      :cHeader             := "Nombre"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "nombre" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "posicion"
      :cHeader             := "Posición"
      :nWidth              := 50
      :bEditValue          := {|| ::getRowSet():fieldGet( "posicion" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

RETURN ( self )









_HB_CLASS FormaPagoView ; function FormaPagoView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FormaPagoView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @FormaPagoView() ) ) ;

   _HB_MEMBER { oSayCamposExtra } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayCamposExtra"}, .F. )

   _HB_MEMBER { oTipoPago } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTipoPago"}, .F. )

   _HB_MEMBER { oEmitir } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oEmitir"}, .F. )

   _HB_MEMBER { oIcono } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oIcono"}, .F. )

   _HB_MEMBER { oGenerar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGenerar"}, .F. )

   _HB_MEMBER { hIcono } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hIcono"}, .F. )

   _HB_MEMBER { oCodigoPago } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCodigoPago"}, .F. )

   _HB_MEMBER { oGetCodigo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCodigo"}, .F. )

   _HB_MEMBER { oGetIBANCodigoPais } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetIBANCodigoPais"}, .F. )
   _HB_MEMBER { cGetIBANCodigoPais } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetIBANCodigoPais"}, .F. )

   _HB_MEMBER { oGetIBANDigitoControl } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetIBANDigitoControl"}, .F. )
   _HB_MEMBER { cGetIBANDigitoControl } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetIBANDigitoControl"}, .F. )

   _HB_MEMBER { oGetCuentaCodigoEntidad } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCuentaCodigoEntidad"}, .F. )
   _HB_MEMBER { cGetCuentaCodigoEntidad } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCuentaCodigoEntidad"}, .F. )

   _HB_MEMBER { oGetCuentaCodigoOficina } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCuentaCodigoOficina"}, .F. )
   _HB_MEMBER { cGetCuentaCodigoOficina } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCuentaCodigoOficina"}, .F. )

   _HB_MEMBER { oGetCuentaDigitoControl } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCuentaDigitoControl"}, .F. )
   _HB_MEMBER { cGetCuentaDigitoControl } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCuentaDigitoControl"}, .F. )

   _HB_MEMBER { oGetCuentaNumero } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCuentaNumero"}, .F. )
   _HB_MEMBER { cGetCuentaNumero } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCuentaNumero"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @FormaPagoView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @FormaPagoView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER startActivate(); oClass:AddMethod( "startActivate", @FormaPagoView_startActivate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER bancosControllerValidated(); oClass:AddMethod( "bancosControllerValidated", @FormaPagoView_bancosControllerValidated(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER addLinksToExplorerBar(); oClass:AddMethod( "addLinksToExplorerBar", @FormaPagoView_addLinksToExplorerBar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FormaPagoView ;



static FUNCTION FormaPagoView_New( oController ) ; local Self AS CLASS FormaPagoView := QSelf() AS CLASS FormaPagoView

   ::Super:New( oController )





   ::hIcono           := { "Dinero"                => "gc_money2_16", "Tarjeta de credito"    => "gc_credit_cards_16", "Bolsa de dinero"       => "gc_moneybag_euro_16", "Porcentaje"            => "gc_symbol_percent_16", "Cesta de compra"       => "gc_shopping_cart_16" }


RETURN ( self )



static FUNCTION FormaPagoView_startActivate( ) ; local Self AS CLASS FormaPagoView := QSelf() AS CLASS FormaPagoView

   ::oController:oBancosController:oGetSelector:Start()
   ::addLinksToExplorerBar()

RETURN ( self )



static FUNCTION FormaPagoView_Activate( ) ; local Self AS CLASS FormaPagoView := QSelf() AS CLASS FormaPagoView

   local oSayCamposExtra



   ::oDialog = TDialog():New(,,,, ::LblTitle() + "forma de pago", "FORMA_PAGO_SQL",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )






   ::oBitmap := TBitmap():ReDefine( 900, ::oController:getImage( "48" ),, ::oDialog,,, .F., .F.,,, .F.,,, .T. )




   ::oMessage := TSay():ReDefine( 800,, ::oDialog,,,, .F., getBoldFont(), .F., .F., )






   TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo" ], ::oController:oModel:hBuffer[ "codigo" ]:= u ) }, ::oDialog,, "@! NNNNNNNNNNNNNNNNNNNN", {||       ( ::oController:validate( "codigo" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre" ], ::oController:oModel:hBuffer[ "nombre" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "nombre" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   ::oTipoPago := TRadMenu():Redefine( { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "tipo_pago" ], ::oController:oModel:hBuffer[ "tipo_pago" ]:= u ) }, ::oDialog,, { 120, 121, 122 },,,,, .F., {||        ( ::oController:isNotZoomMode() )}, )







   TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "comision" ], ::oController:oModel:hBuffer[ "comision" ]:= u ) }, ::oDialog,, "@E 999.99",,,,,,, .F., {||        ( ::oController:isNotZoomMode() ) .AND. ::oController:oModel:hBuffer[ "tipo_pago" ] == 3},, .F., .T.,,, {||         0},,, nil,,, )





   ::oEmitir := TRadMenu():Redefine( { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "emitir" ], ::oController:oModel:hBuffer[ "emitir" ]:= u ) }, ::oDialog,, { 140, 141 },,,,, .F., {||        ( ::oController:isNotZoomMode() )}, )






   TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "numero_plazos" ], ::oController:oModel:hBuffer[ "numero_plazos" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         0},,, nil,,, )






   TGetHlp():ReDefine( 160, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "primer_plazo" ], ::oController:oModel:hBuffer[ "primer_plazo" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         0},,, nil,,, )






   TGetHlp():ReDefine( 170, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "entre_plazo" ], ::oController:oModel:hBuffer[ "entre_plazo" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         0},,, nil,,, )






   TGetHlp():ReDefine( 180, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "ultimo_plazo" ], ::oController:oModel:hBuffer[ "ultimo_plazo" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         0},,, nil,,, )


   ::oController:oBancosController:oGetSelector:Bind( { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "banco_uuid" ], ::oController:oModel:hBuffer[ "banco_uuid" ]:= u ) } )

   ::oController:oBancosController:oGetSelector:setEvent( "validated", {|| ::bancosControllerValidated() } )

   ::oController:oBancosController:oGetSelector:Activate( 190, 191, ::oDialog )






   ::oGetIBANCodigoPais := TGetHlp():ReDefine( 200, { | u | If( PCount()==0, ::cGetIBANCodigoPais, ::cGetIBANCodigoPais:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )





   ::oGetIBANDigitoControl := TGetHlp():ReDefine( 201, { | u | If( PCount()==0, ::cGetIBANDigitoControl, ::cGetIBANDigitoControl:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )





   ::oGetCuentaCodigoEntidad := TGetHlp():ReDefine( 202, { | u | If( PCount()==0, ::cGetCuentaCodigoEntidad, ::cGetCuentaCodigoEntidad:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )





   ::oGetCuentaCodigoOficina := TGetHlp():ReDefine( 203, { | u | If( PCount()==0, ::cGetCuentaCodigoOficina, ::cGetCuentaCodigoOficina:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )





   ::oGetCuentaDigitoControl := TGetHlp():ReDefine( 204, { | u | If( PCount()==0, ::cGetCuentaDigitoControl, ::cGetCuentaDigitoControl:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )





   ::oGetCuentaNumero := TGetHlp():ReDefine( 205, { | u | If( PCount()==0, ::cGetCuentaNumero, ::cGetCuentaNumero:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )







   TGetHlp():ReDefine( 210, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "subcuenta_cobro" ], ::oController:oModel:hBuffer[ "subcuenta_cobro" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TGetHlp():ReDefine( 220, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "subcuenta_gastos" ], ::oController:oModel:hBuffer[ "subcuenta_gastos" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )






   ::oCodigoPago := TComboBox():ReDefine( 230, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo_pago" ], ::oController:oModel:hBuffer[ "codigo_pago" ]:= u ) }, {       "01. Al contado", "02. Recibo Domiciliado", "03. Recibo", "04. Transferencia", "05. Letra Aceptada", "06. Crédito Documentario", "07. Contrato Adjudicación", "08. Letra de cambio", "09. Pagaré a la Orden", "10. Pagaré No a la Orden", "11. Cheque", "12. Reposición", "13. Especiales", "14. Compensación", "15. Giro postal", "16. Cheque conformado", "17. Cheque bancario", "18. Pago contra reembolso", "19. Pago mediante tarjeta" }, ::oDialog,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},,,,,, "::oCodigoPago",,,,,,, )




   TGetHlp():ReDefine( 240, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo_edi" ], ::oController:oModel:hBuffer[ "codigo_edi" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TSayCheck():ReDefine( 250, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "incluir_en_terminal" ], ::oController:oModel:hBuffer[ "incluir_en_terminal" ]:= u ) }, ::oDialog,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, 252 )







   ::oIcono := TComboBox():ReDefine( 260, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "icono" ], ::oController:oModel:hBuffer[ "icono" ]:= u ) }, ( hgetkeys( ::hIcono ) ), ::oDialog,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )}, ( hgetvalues( ::hIcono ) ),,,,, "::oIcono",,,,,,, )






   TGetHlp():ReDefine( 270, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "posicion" ], ::oController:oModel:hBuffer[ "posicion" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .T.,,, {||         0},,, nil,,, )




   TGetHlp():ReDefine( 280, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "forma_pago" ], ::oController:oModel:hBuffer[ "forma_pago" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   ::oGenerar := TRadMenu():Redefine( { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "generar_documento" ], ::oController:oModel:hBuffer[ "generar_documento" ]:= u ) }, ::oDialog,, { 290, 291 },,,,, .F., {||        ( ::oController:isNotZoomMode() )}, )
      ::redefineExplorerBar( 500 )





   TButton():ReDefine( 1, {||( if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 116, {|| if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) } )
   end

   ::oDialog:bStart  := {|| ::startActivate() }

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

  ::oBitmap:end()

RETURN ( ::oDialog:nResult )



static FUNCTION FormaPagoView_bancosControllerValidated( ) ; local Self AS CLASS FormaPagoView := QSelf() AS CLASS FormaPagoView

   local cCodigo  := ::oController:oModel:hBuffer[ "banco_uuid" ]
   local hColumns := ::oController:oBancosController:oModel:getWhereCodigo( cCodigo )

   ::oGetIBANCodigoPais:cText( hget( hColumns, "iban_codigo_pais" ) )

   ::oGetIBANDigitoControl:cText( hget( hColumns, "iban_digito_control" ) )

   ::oGetCuentaCodigoEntidad:cText( hget( hColumns, "cuenta_codigo_entidad" ) )

   ::oGetCuentaCodigoOficina:cText( hget( hColumns, "cuenta_codigo_oficina" ) )

   ::oGetCuentaDigitoControl:cText( hget( hColumns, "cuenta_digito_control" ) )

   ::oGetCuentaNumero:cText( hget( hColumns, "cuenta_numero" ) )

RETURN ( nil )



static FUNCTION FormaPagoView_addLinksToExplorerBar( ) ; local Self AS CLASS FormaPagoView := QSelf() AS CLASS FormaPagoView

   local oPanel

   oPanel            := ::oExplorerBar:AddPanel( "Datos relacionados", nil, 1 )

   if ::oController:isZoomMode()
      RETURN ( self )
   end



   oPanel:AddLink(   "Documentos...", {|| ::oController:oDocumentosController:activateDialogView( ::oController:getUuid() ) }, ::oController:oDocumentosController:getImage( "16" ) )

   oPanel            := ::oExplorerBar:AddPanel( "Otros", nil, 1 )



   oPanel:AddLink(   "Campos extra...", {|| ::oController:oCamposExtraValoresController:Edit( ::oController:getUuid() ) }, ::oController:oCamposExtraValoresController:getImage( "16" ) )

RETURN ( self )








_HB_CLASS FormaPagoValidator ; function FormaPagoValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FormaPagoValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @FormaPagoValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @FormaPagoValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FormaPagoValidator ;



static FUNCTION FormaPagoValidator_getValidators( ) ; local Self AS CLASS FormaPagoValidator := QSelf() AS CLASS FormaPagoValidator




   ::hValidators  := {  "nombre" =>                {  "required"           => "El nombre es un dato requerido", "unique"             => "El nombre introducido ya existe" }, "codigo" =>                {  "required"           => "El código es un dato requerido" , "unique"             => "EL código introducido ya existe" } }
RETURN ( ::hValidators )







_HB_CLASS SQLFormaPagoModel ; function SQLFormaPagoModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLFormaPagoModel", iif( .T., { @SQLCompanyModel() }, { @HBObject() } ), @SQLFormaPagoModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "forma_pago", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLFormaPagoModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER getBancoUuidAttribute(); oClass:AddInline( "getBancoUuidAttribute", {|Self, uValue | ( ( Self ) ), ( if( empty( uValue ), space( 40 ), ::oController:oBancosController:oModel():getCodigoWhereUuid( uValue ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER setBancoUuidAttribute(); oClass:AddInline( "setBancoUuidAttribute", {|Self, uValue | ( ( Self ) ), ( if( empty( uValue ), "", ::oController:oBancosController:oModel():getUuidWhereCodigo( uValue ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLFormaPagoModel ;



static FUNCTION SQLFormaPagoModel_getColumns( ) ; local Self AS CLASS SQLFormaPagoModel := QSelf() AS CLASS SQLFormaPagoModel


   hset( ::hColumns, "id",                   {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"              , "default"   => {|| 0 } }                                    )


   hset( ::hColumns, "uuid",                 {  "create"    => "VARCHAR( 40 ) NOT NULL UNIQUE"              , "default"   => {|| win_uuidcreatestring() } }               )
   ::getEmpresaColumns()


   hset( ::hColumns, "codigo",               {  "create"    => "VARCHAR( 20 )"                               , "default"   => {|| space( 20 ) } }                           )


   hset( ::hColumns, "nombre",               {  "create"    => "VARCHAR( 200 )"                             , "default"   => {|| space( 200 ) } }                         )


   hset( ::hColumns, "tipo_pago",            {  "create"    => "INTEGER( 1 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "comision",             {  "create"    => "FLOAT( 5,2 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "emitir",               {  "create"    => "INTEGER( 1 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "numero_plazos",        {  "create"    => "INTEGER( 5 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "primer_plazo",         {  "create"    => "INTEGER( 5 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "entre_plazo",          {  "create"    => "INTEGER( 5 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "ultimo_plazo",         {  "create"    => "INTEGER( 5 )"                               , "default"   => {|| ( 0 ) } }                                )


   hset( ::hColumns, "banco_uuid",           {  "create"    => "VARCHAR( 40 )"                              , "default"   => {|| space( 40 ) } }                          )


   hset( ::hColumns, "subcuenta_cobro",      {  "create"    => "VARCHAR( 200 )"                             , "default"   => {|| space( 200 ) } }                         )


   hset( ::hColumns, "subcuenta_gastos",     {  "create"    => "VARCHAR( 200 )"                             , "default"   => {|| space( 200 ) } }                         )


   hset( ::hColumns, "codigo_pago",          {  "create"    => "VARCHAR( 200 )"                             , "default"   => {|| space( 200 ) } }                         )


   hset( ::hColumns, "codigo_edi",           {  "create"    => "VARCHAR( 200 )"                             , "default"   => {|| space( 200 ) } }                         )


   hset( ::hColumns, "incluir_en_terminal",  {  "create"    => "BIT"                                        , "default"   => {|| .F. } }                                  )


   hset( ::hColumns, "icono",                {  "create"    => "VARCHAR( 40 )"                              , "default"   => {|| space( 40 ) } }                          )


   hset( ::hColumns, "posicion",             {  "create"    => "INTEGER( 2 )"                               , "default"   => {|| ( 0 ) } }                           )


   hset( ::hColumns, "forma_pago",           {  "create"    => "VARCHAR( 200 )"                             , "default"   => {|| space( 200 ) } }                         )


   hset( ::hColumns, "generar_documento",    {  "create"    => "INTEGER( 1 )"                               , "default"   => {|| ( 0 ) } }                           )

   ::getEmpresaColumns()

   ::getTimeStampColumns()

RETURN ( ::hColumns )







_HB_CLASS FormaPagoRepository ; function FormaPagoRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "FormaPagoRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @FormaPagoRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLFormaPagoModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS FormaPagoRepository ;