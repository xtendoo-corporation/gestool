#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\Prg\Validators\ImportadorMovimientosAlmacenLineasValidator.prg"
_HB_CLASS ImportadorMovimientosAlmacenLineasValidator ; function ImportadorMovimientosAlmacenLineasValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ImportadorMovimientosAlmacenLineasValidator", iif( .T., { @SQLBaseValidator() }, { @HBObject() } ), @ImportadorMovimientosAlmacenLineasValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @ImportadorMovimientosAlmacenLineasValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ImportadorMovimientosAlmacenLineasValidator ;



static FUNCTION ImportadorMovimientosAlmacenLineasValidator_getValidators( ) ; local Self AS CLASS ImportadorMovimientosAlmacenLineasValidator := QSelf() AS CLASS ImportadorMovimientosAlmacenLineasValidator













   ::hValidators  := {  "codigo_articulo_inicio"      => {  "requiredOrEmpty"    => "El artículo inicio es un dato requerido", "existArticulo"      => "El artículo inicio {value}, no existe" }, "codigo_articulo_fin"         => {  "requiredOrEmpty"    => "El artículo fin es un dato requerido", "existArticulo"      => "El artículo fin {value}, no existe" }, "codigo_familia_inicio"       => {  "requiredOrEmpty"    => "La família inicio es un dato requerido", "existFamilia"       => "La família inicio {value}, no existe" }, "codigo_familia_fin"          => {  "requiredOrEmpty"    => "La família fin es un dato requerido", "existFamilia"       => "La família fin {value}, no existe" }, "codigo_tipo_articulo_inicio" => {  "requiredOrEmpty"    => "El tipo de artículo inicio es un dato requerido", "existTipoArticulo"  => "El tipo de artículo inicio {value}, no existe" }, "codigo_tipo_articulo_fin"    => {  "requiredOrEmpty"    => "El tipo de artículo fin es un dato requerido", "existTipoArticulo"  => "El tipo de artículo fin {value}, no existe" } }

RETURN ( ::hValidators )
