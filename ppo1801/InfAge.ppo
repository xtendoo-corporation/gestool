#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\InfAge.prg"
_HB_CLASS InfAge ; function InfAge ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "InfAge", iif( .T., { @TInfGen() }, { @HBObject() } ), @InfAge() ) ) ;

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @InfAge_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @InfAge_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @InfAge_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS InfAge ;



static FUNCTION InfAge_Create( ) ; local Self AS CLASS InfAge := QSelf() AS CLASS InfAge

   ::AddField( "cCodAge",       "C",  3, 0, {|| "" },     "Cod.",             .T., "Código del agente",          5, .F. )
   ::AddField( "cApeAge",       "C", 30, 0, {|| "" },     "Apellidos",        .F., "Apellidos del agente",      30, .F. )
   ::AddField( "cNbrAge",       "C", 15, 0, {|| "" },     "Nombre",           .T., "Nombre del agente",         15, .F. )
   ::AddField( "cDniNif",       "C", 15, 0, {|| "" },     "DNI",              .T., "DNI del agente",            15, .F. )
   ::AddField( "cDirAge",       "C", 35, 0, {|| "" },     "Domicilio",        .T., "dirección del agente",      15, .F. )
   ::AddField( "cPobAge",       "C", 25, 0, {|| "" },     "Población",        .T., "Población del agente",      15, .F. )
   ::AddField( "cPtlAge",       "C",  5, 0, {|| "" },     "C.P.",             .T., "Código postal del agente",   6, .F. )
   ::AddField( "cProv",         "C", 15, 0, {|| "" },     "Provincia",        .T., "Provincia del agente",      15, .F. )
   ::AddField( "cTfoAge",       "C", 12, 0, {|| "" },     "Teléfono",         .F., "Teléfono del agente",       12, .F. )
   ::AddField( "cFaxAge",       "C", 12, 0, {|| "" },     "Fax",              .F., "Fax del agente",            12, .F. )
   ::AddField( "cMovAge",       "C", 12, 0, {|| "" },     "Movíl",            .F., "Movíl del agente",          12, .F. )
   ::AddField( "nIrpfAge",      "N",  5, 2, {|| "" },     "IRPF",             .T., "IRPF del agente",            6, .F. )

   ::AddTmpIndex ( "cCodAge", "cCodAge" )

   ::lDefFecInf   := .F.
   ::lDefSerInf   := .F.
   ::lDefDivInf   := .F.

RETURN ( Self )



static FUNCTION InfAge_lResource( cFld ) ; local Self AS CLASS InfAge := QSelf() AS CLASS InfAge

   if !::StdResource( "INF_AGE01" )
      return .F.
   end





   ::oDefAgeInf( 70, 80, 90, 100, 60 )





   ::oMtrInf:SetTotal( ::oDbfAge:Lastrec() )

   ::CreateFilter( aItmAge(), ::oDbfAge:cAlias )

RETURN .T.






static FUNCTION InfAge_lGenerate( ) ; local Self AS CLASS InfAge := QSelf() AS CLASS InfAge

   local cExpHead := ""

   ::oDlg:Disable()
   ::oBtnCancel:Enable()
   ::oDbf:Zap()


   ::aHeader      := {  {|| "Fecha     : " + Dtoc( Date() ) }, {|| "Agentes   : " + if( ::lAgeAll, "Todos", AllTrim( ::cAgeOrg ) + " > " + AllTrim( ::cAgeDes ) ) } }

   ::oDbfAge:OrdSetFocus( "CCODAGE" )

   if !Empty( ::oFilter:cExpresionFilter )
      cExpHead       := ::oFilter:cExpresionFilter
   else
      cExpHead       := ".t."
   end

   ::oDbfAge:AddTmpIndex( Auth():Codigo(), GetFileNoExt( ::oDbfAge:cFile ), ::oDbfAge:OrdKey(), ( cExpHead ), , , , , , , , .T. )

   ::oDbfAge:GoTop()

   while !::lBreak .AND. !::oDbfAge:Eof()

      if ( ::lAgeAll .OR. ( ::oDbfAge:cCodAge >= ::cAgeOrg .AND. ::oDbfAge:cCodAge <= ::cAgeDes ) )

         ::oDbf:Append()
         ::oDbf:cCodAge     := ::oDbfAge:cCodAge
         ::oDbf:cApeAge     := ::oDbfAge:cApeAge
         ::oDbf:cNbrAge     := ::oDbfAge:cNbrAge
         ::oDbf:cDniNif     := ::oDbfAge:cDniNif
         ::oDbf:cDirAge     := ::oDbfAge:cDirAge
         ::oDbf:cPobAge     := ::oDbfAge:cPobAge
         ::oDbf:cPtlAge     := ::oDbfAge:cPtlAge
         ::oDbf:cProv       := ::oDbfAge:cProv
         ::oDbf:cTfoAge     := ::oDbfAge:cTfoAge
         ::oDbf:cFaxAge     := ::oDbfAge:cFaxAge
         ::oDbf:cMovAge     := ::oDbfAge:cMovAge
         ::oDbf:nIrpfAge    := ::oDbfAge:nIrpfAge
         ::oDbf:Save()

      end

      ::oDbfAge:Skip()

      ::oMtrInf:AutoInc( ::oDbfAge:OrdKeyNo() )

   end

   ::oDbfAge:IdxDelete( Auth():Codigo(), GetFileNoExt( ::oDbfAge:cFile ) )

   ::oMtrInf:AutoInc( ::oDbfAge:LastRec() )

   ::oDlg:Enable()

RETURN ( ::oDbf:LastRec() > 0 )
