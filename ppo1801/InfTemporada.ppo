#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\InfTemporada.prg"
_HB_CLASS TListadoTemporadas ; function TListadoTemporadas ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TListadoTemporadas", iif( .T., { @TInfGen() }, { @HBObject() } ), @TListadoTemporadas() ) ) ;

   _HB_MEMBER { dbfCategoria } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"dbfCategoria"}, .F. )

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TListadoTemporadas_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @TListadoTemporadas_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TListadoTemporadas_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TListadoTemporadas ;



static FUNCTION TListadoTemporadas_Create( dbf ) ; local Self AS CLASS TListadoTemporadas := QSelf() AS CLASS TListadoTemporadas

   ::AddField( "cCodigo",    "C",   3, 0, {|| "" },    "Código",   .T., "Código de categoría",   10, .F. )
   ::AddField( "cNombre",    "C",  50, 0, {|| "" },    "Nombre",   .T., "Nombre de categoría",   40, .F. )
   ::AddField( "cTipo",      "C",  30, 0, {|| "" },    "Tipo",     .T., "Tipo de categoría",     30, .F. )

   ::lDefFecInf   := .F.
   ::lDefSerInf   := .F.
   ::lDefDivInf   := .F.

   ::dbfCategoria := dbf

RETURN ( Self )



static FUNCTION TListadoTemporadas_lResource( cFld ) ; local Self AS CLASS TListadoTemporadas := QSelf() AS CLASS TListadoTemporadas

   if !::StdResource( "INF_CATEGORIA" )
      return .F.
   end

   ::oBtnFilter:Disable()

   ::lIntCatInf( 110, 120, 130, 140, 150, ::dbfCategoria )

   ::oMtrInf:SetTotal( ( ::dbfCategoria )->( Lastrec() ) )

RETURN ( .T. )



static FUNCTION TListadoTemporadas_lGenerate( ) ; local Self AS CLASS TListadoTemporadas := QSelf() AS CLASS TListadoTemporadas

   ::oDlg:Disable()
   ::oBtnCancel:Enable()

   ::oDbf:Zap()


   ::aHeader         := {  {|| "Fecha      : " + Dtoc( Date() ) }, {|| getConfigTraslation( "Temporadas" ) + " : " + if( ::lAllCat, "Todos", AllTrim( ::cCatOrg ) + " > " + AllTrim( ::cCatDes ) ) } }

   ( ::dbfCategoria )->( OrdSetFocus( "Codigo" ) )

   ::oMtrInf:SetTotal( ( ::dbfCategoria )->( OrdKeyCount() ) )

   ( ::dbfCategoria )->( dbGoTop() )

   while !::lBreak .AND. !( ::dbfCategoria )->( Eof() )

      if ::lAllCat .OR. ( ( ::dbfCategoria )->cCodigo >= Rtrim( ::cCatOrg ) .AND. ( ::dbfCategoria )->cCodigo <= Rtrim( ::cCatDes ) )

         ::oDbf:Append()

         ::oDbf:cCodigo := ( ::dbfCategoria )->cCodigo
         ::oDbf:cNombre := ( ::dbfCategoria )->cNombre
         ::oDbf:cTipo   := ( ::dbfCategoria )->cTipo

         ::oDbf:Save()

      end

      ( ::dbfCategoria )->( dbSkip() )

      ::oMtrInf:AutoInc( ( ::dbfCategoria )->( OrdKeyNo() ) )

   end

   ::oMtrInf:AutoInc( ( ::dbfCategoria )->( LastRec() ) )

   ::oDlg:Enable()

   ::oBtnFilter:Disable()

RETURN ( ::oDbf:LastRec() > 0 )
