#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Infencpr.prg"
static dbfArticulo
static dbfFamilia
static dbfIva



FUNCTION InfEncPre()

    local oDlg
    local oRadio
    local oSayDesde
    local cSayDesde
    local oSayHasta
    local cSayHasta
    local oFamiDesde
    local oFamiHasta
    local cFamiDesde
    local cFamiHasta
    local nRecno
    local cTag
    local lPVD            := .T.
    local lPVP            := .T.
    local lIVA            := .T.
    local lPreCero        := .T.
    local nRadio        := 1
    local cTitulo        := Space( 100 )
    local cSubTitulo    := Padr( "Listado de Articulos", 100 )

   dbUseArea( .T., ( cDriver() ), ( cPatEmp() + "ARTICULO.DBF" ), ( cCheckArea( "ARTICULO", @dbfArticulo ) ), iif( .T. .OR. .F., ! .F., NIL ), .F. )
   if !lAIS() ; ordListAdd( ( cPatEmp() + "ARTICULO.CDX" ) ) ; else ; ordSetFocus( 1 ) ; end

   dbUseArea( .T., ( cDriver() ), ( cPatEmp() + "FAMILIAS.DBF" ), ( cCheckArea( "FAMILIAS", @dbfFamilia ) ), iif( .T. .OR. .F., ! .F., NIL ), .F. )
   if !lAIS() ; ordListAdd( ( cPatEmp() + "FAMILIAS.CDX" ) ) ; else ; ordSetFocus( 1 ) ; end

   dbUseArea( .T., ( cDriver() ), ( cPatDat() + "TIVA.DBF" ), ( cCheckArea( "TIVA", @dbfIva ) ), iif( .T. .OR. .F., ! .F., NIL ), .F. )
   if !lAIS() ; ordListAdd( ( cPatDat() + "TIVA.CDX" ) ) ; else ; ordSetFocus( 1 ) ; end

    cFamiDesde            := DBFirst( dbfFamilia, 1 )
    cFamiHasta            := DBLast(  dbfFamilia, 1 )
    nRecno                  := (dbfArticulo)->(RecNo())
    cTag                    := (dbfArticulo)->(OrdSetFocus())





    oDlg = TDialog():New(,,,,, "REP_ARTICULO",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )



    oRadio := TRadMenu():Redefine( { | u | If( PCount()==0, nRadio, nRadio:= u ) }, oDlg,, { 101, 102 },,,,, .F.,, )





    oFamiDesde := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, cFamiDesde, cFamiDesde:= u ) }, oDlg,,, {||     ( cFamilia( oFamiDesde, dbfFamilia, oSayDesde ) )}, "N/W*",,,,, .F.,,, .F., .F.,,,,,, nil,,, )





    oSayDesde := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, cSayDesde, cSayDesde:= u ) }, oDlg,,,, "N/W*",,,,, .F., {||         .F.},, .F., .F.,,,,,, nil,,, )





    oFamiHasta := TGetHlp():ReDefine( 130, { | u | If( PCount()==0, cFamiHasta, cFamiHasta:= u ) }, oDlg,,, {||     ( cFamilia( oFamiHasta, dbfFamilia, oSayHasta ) )}, "N/W*",,,,, .F.,,, .F., .F.,,,,,, nil,,, )





    oSayHasta := TGetHlp():ReDefine( 140, { | u | If( PCount()==0, cSayHasta, cSayHasta:= u ) }, oDlg,,,, "N/W*",,,,, .F., {||         .F.},, .F., .F.,,,,,, nil,,, )



    TCheckBox():ReDefine( 150, { | u | If( PCount()==0, lPVD, lPVD:= u ) }, oDlg,,,,,,, .F.,, .F. )



    TCheckBox():ReDefine( 151, { | u | If( PCount()==0, lPVP, lPVP:= u ) }, oDlg,,,,,,, .F.,, .F. )



    TCheckBox():ReDefine( 152, { | u | If( PCount()==0, lIVA, lIVA:= u ) }, oDlg,,,,,,, .F.,, .F. )



    TCheckBox():ReDefine( 160, { | u | If( PCount()==0, lPreCero, lPreCero:= u ) }, oDlg,,,,,,, .F.,, .F. )



    TGetHlp():ReDefine( 170, { | u | If( PCount()==0, cTitulo, cTitulo:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )



    TGetHlp():ReDefine( 180, { | u | If( PCount()==0, cSubTitulo, cSubTitulo:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )





    TButton():ReDefine( 508, {||( PrnReport( nRadio, cFamiDesde, cFamiHasta, lPVD, lPVP, lIVA,    lPreCero, cTitulo, cSubTitulo, 1 ) )}, oDlg,,, .F.,,,, .F. )





    TButton():ReDefine( 505, {||( PrnReport( nRadio, cFamiDesde, cFamiHasta, lPVD, lPVP, lIVA,    lPreCero, cTitulo, cSubTitulo, 2 ) )}, oDlg,,, .F.,,,, .F. )




    TButton():ReDefine( 510, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )


    oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted := {|hDC,cPS|( oFamiDesde:lValid(), oFamiHasta:lValid() )}, .T.,,,, oDlg:bRClicked,,, )

    ( dbfArticulo )->( dbCloseArea() )
    ( dbfFamilia )->( dbCloseArea() )
    ( dbfIva )->( dbCloseArea() )

RETURN ( oDlg:nResult == 1 )




STATIC FUNCTION PrnReport( nRadio, cFamiDesde, cFamiHasta, lPVD, lPVP, lIVA,    lPreCero, cTitulo, cSubTitulo, nDevice )

    local nRecNo  := ( dbfArticulo )->( RecNo() )
    local cOrdAnt := ( dbfArticulo )->( OrdSetFocus() )
   local oFont1
   local oFont2
   local oReport





    IF nRadio == 1
        ( dbfArticulo )->( OrdSetFocus( "CFAMCOD" ) )
    ELSE
        ( dbfArticulo )->( OrdSetFocus( "CFAMNOM" ) )
    end





    ( dbfArticulo )->( DbSeek( cFamiDesde ) )





   oFont1 := TFont():New( "Arial", 0, -12,, .T.,,,,,,,,,,,, )
   oFont2 := TFont():New( "Arial", 0, -12,,,,,,,,,,,,,, )

        IF nDevice == 1








            oReport := RptBegin({{||      Rtrim( cTitulo )}, {||    Rtrim( cSubTitulo )}}, {{||     "Fecha: " + dtoc(date())}}, {{||     OemtoAnsi( "P gina : " ) + str( oReport:nPage, 3 )}}, {oFont1, oFont2}, {}, .F.,,,, .T.,,, "Listado de Artículos",, UPPER("RIGHT"), UPPER("CENTERED"), )

        ELSE








            oReport := RptBegin({{||      Rtrim( cTitulo )}, {||    Rtrim( cSubTitulo )}}, {{||     "Fecha: " + dtoc(date())}}, {{||     OemtoAnsi("P gina : ")+str(oReport:nPage,3)}}, {oFont1, oFont2}, {}, .F.,,, .T., .F.,,, "Listado de Artículos",, UPPER("RIGHT"), UPPER("CENTERED"), )

        end




         RptAddColumn( {{|| "Código"}}, , {{|| RTRIM( (dbfArticulo)->CODIGO ) + STR( (dbfArticulo)->PCOSTO )}}, 14, {} , {|| 2}, .F., ,, .F., .F.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},,,,, )




            RptAddColumn( {{|| "Descripción"}}, , {{|| (dbfArticulo)->NOMBRE}}, 40, {} , {|| 2}, .F., ,, .F., .F.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},,,,, )








        IF lPVD




            RptAddColumn( {{|| "P.V.D."}}, , {{|| (dbfArticulo)->PVENTA1}}, 8, {"@E 99,999,999"} , {|| 2}, .F., ,, .F., .F.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},,,,, )
        end

        IF lPVP




            RptAddColumn( {{|| "P.V.P."}}, , {{|| (dbfArticulo)->PVENTA3}}, 8, {"@E 99,999,999"} , {|| 2}, .F., ,, .F., .F.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},,,,, )
        end

        IF lIVA



         RptAddColumn( {{|| cImp()}}, , {{|| nIva( dbfIva, (dbfArticulo)->TIPOIVA )}}, 6, {} , {|| 2}, .F., ,, .F., .F.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},,,,, )
        end





        RptAddGroup( {|| ( dbfArticulo )->FAMILIA}, {|| "Familia : " + oReport:aGroups[1]:cValue + "-" +     retFamilia( oReport:aGroups[1]:cValue, dbfFamilia )}, {|| ""}, {|| 2}, .F. )

        RptEnd()

      IF !Empty( oReport ) .AND. oReport:lCreated
            oReport:Margin(0, 2, 2)
            oReport:bSkip    := {|| (dbfArticulo)->(DbSkip( 1 )) }
        ELSE
            msginfo( "Imposible crear el listado" )
        end





        oReport:Activate({||     ( dbfArticulo )->( &( OrdKey() ) ) >= cFamiDesde .AND.     ( dbfArticulo )->( &( OrdKey() ) ) <= cFamiHasta .AND.     If( lPreCero, ( dbfArticulo )->PVENTA1 <> 0, .T. )}, {|| !( dbfArticulo )->( Eof() )},,,,,,,,,,,, )

    oFont1:end()
    oFont2:end()

    ( dbfArticulo )->( OrdSetFocus( cOrdAnt ) )
    ( dbfArticulo )->( DbGoto( nRecno ) )

RETURN NIL
