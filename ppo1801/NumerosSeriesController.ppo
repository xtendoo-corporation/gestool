#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\NumerosSeriesController.prg"
_HB_CLASS NumerosSeriesController ; function NumerosSeriesController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "NumerosSeriesController", iif( .T., { @SQLBaseController() }, { @HBObject() } ), @NumerosSeriesController() ) ) ;

   _HB_MEMBER { cParentUUID } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cParentUUID"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @NumerosSeriesController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER GenerarSeries(); oClass:AddMethod( "GenerarSeries", @NumerosSeriesController_GenerarSeries(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SetTotalUnidades(); oClass:AddInline( "SetTotalUnidades", {|Self, nUnidades | ( ( Self ) ), ( if( !empty( nUnidades ), ::oDialogView:nTotalUnidades := Abs( nUnidades ), ::oDialogView:nTotalUnidades := 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getValueBuffer(); oClass:AddInline( "getValueBuffer", {|Self, nArrayAt, key | ( ( Self ) ), ( hGet( ::oModel:aBuffer[ nArrayAt ], key ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setValueBuffer(); oClass:AddInline( "setValueBuffer", {|Self, nArrayAt, key, value | ( ( Self ) ), ( hSet( ::oModel:aBuffer[ nArrayAt ], key, value ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER endResource( oDlg); oClass:AddMethod( "endResource", @NumerosSeriesController_endResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER deletedSelected( aRecords); oClass:AddMethod( "deletedSelected", @NumerosSeriesController_deletedSelected(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER loadedBlankBuffer(); oClass:AddMethod( "loadedBlankBuffer", @NumerosSeriesController_loadedBlankBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS NumerosSeriesController ;



static FUNCTION NumerosSeriesController_New( oController ) ; local Self AS CLASS NumerosSeriesController := QSelf() AS CLASS NumerosSeriesController

   ::Super:New( oController )

   ::cTitle                := "Series"

   ::oModel                := SQLMovimientosAlmacenLineasNumerosSeriesModel():New( self )

   ::oDialogView           := NumerosSeriesView():New( self )

   ::oModel:setEvent( "loadedBlankBuffer", {|| ::loadedBlankBuffer() } )

RETURN ( Self )



static FUNCTION NumerosSeriesController_GenerarSeries( ) ; local Self AS CLASS NumerosSeriesController := QSelf() AS CLASS NumerosSeriesController

   local n
   local nChg  := 1

   CursorWait()

   ::oDialogView:oDialog:Disable()

   if empty( ::oDialogView:nNumGen )

      aeval( ::oModel:aBuffer, {| a, n | ::setValueBuffer( n, "numero_serie", Padr( Rtrim( ::oDialogView:cPreFix ) + Ltrim( Str( ::oDialogView:nSerIni + n - 1 ) ), 30 ) ) } )

   else

      for n := 1 to len( ::oModel:aBuffer )

         ::setValueBuffer( n, "numero_serie", Padr( Rtrim( ::oDialogView:cPreFix ) + Ltrim( Str( ::oDialogView:nSerIni + nChg - 1 ) ), 30 ) )

         if ++nChg == ::oDialogView:nNumGen
            exit
         end

      next

   end

   ::oDialogView:oBrwSer:Refresh()

   ::oDialogView:oDialog:Enable()

   CursorWE()

RETURN ( Self )



static FUNCTION NumerosSeriesController_endResource( oDlg ) ; local Self AS CLASS NumerosSeriesController := QSelf() AS CLASS NumerosSeriesController

   ::oModel:RollBack()

   if !empty( oDlg )
      oDlg:End( 1 )
   end

RETURN ( Self )



static FUNCTION NumerosSeriesController_loadedBlankBuffer( ) ; local Self AS CLASS NumerosSeriesController := QSelf() AS CLASS NumerosSeriesController

   local uuid        := ::getSenderController():getUuid()

   if !empty( uuid )
      hset( ::oModel:hBuffer, "parent_uuid", uuid )
   end

RETURN ( Self )



static FUNCTION NumerosSeriesController_deletedSelected( aRecords ) ; local Self AS CLASS NumerosSeriesController := QSelf() AS CLASS NumerosSeriesController

   if hb_isArray( aRecords ) .AND. len( aRecords ) > 0
      aeval( aRecords, {| h | ::oModel:deleteWhereUuid( hGet( h, "uuid" ) ) } )
   end

RETURN ( self )
