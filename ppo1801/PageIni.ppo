#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 11 ".\.\Prg\PageIni.prg"
static nView

static nLevel

static oFecIniCli
static oFecFinCli
static dFecIniCli
static dFecFinCli

static oEstadoCli
static aEstadoCli    := { "Pendientes", "Pagados", "Todos" }
static cEstadoCli

static oPeriodoCli
static aPeriodoCli   := {}
static cPeriodoCli

static cCodigoCliente
static cNombreCliente
static cTelefonoCliente

static oFecIniPrv
static oFecFinPrv
static dFecIniPrv
static dFecFinPrv

static oEstadoPrv
static aEstadoPrv    := { "Pendientes", "Pagados", "Todos" }
static cEstadoPrv

static oPeriodoPrv
static aPeriodoPrv   := {}
static cPeriodoPrv

static cCodigoProveedor
static cNombreProveedor

static nFolder

static oDlg
static oFld

static oBrwInc
static oBrwRecCli
static oBrwRecPrv

static oBmpCobros
static oBmpPagos
static oBmpIncidencias



STATIC FUNCTION OpenFiles()

   local lOpen    := .T.
   local oBlock   := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   BEGIN SEQUENCE

      nView       := D():CreateView()

      D():Get( "Client", nView )
      D():Get( "CliInc", nView )

      D():Get( "FacPrvT", nView )
      D():Get( "FacPrvL", nView )
      D():Get( "FacPrvP", nView )

      D():Get( "FacRecT", nView )
      D():Get( "FacRecL", nView )

      D():Get( "AntCliT", nView )

      D():Get( "FacPrvT", nView )
      D():Get( "FacPrvL", nView )
      D():Get( "FacPrvP", nView )

      D():Get( "RctPrvT", nView )
      D():Get( "RctPrvL", nView )

      D():Get( "TIva", nView )
      D():Get( "Divisas", nView )

   RECOVER

      msgStop( "Imposible abrir todas las bases de datos" )

      CloseFiles()

      lOpen       := .F.

   end

   ErrorBlock( oBlock )

Return ( lOpen )



STATIC FUNCTION CloseFiles()

   D():DeleteView( nView )

Return .T.



FUNCTION PageIni( oMenuItem, oWnd )

   local oError
   local oBlock

   If( oMenuItem == nil, oMenuItem := "gestion_de_cartera", ) ;
   If( oWnd == nil, oWnd := oWnd(), ) ;



   nLevel                  := Auth():Level( oMenuItem )
   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      return nil
   end



   if oWnd <> nil
      SysRefresh(); oWnd:CloseAll(); SysRefresh()
   end





   if !OpenFiles()
      return nil
   end

   oBlock                  := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE



   cPeriodoCli             := "Hoy"
   cEstadoCli              := "Pendientes"
   aPeriodoCli             := aCreaArrayPeriodos()

   cPeriodoPrv             := "Hoy"
   cEstadoPrv              := "Pendientes"
   aPeriodoPrv             := aCreaArrayPeriodos()





   oDlg = TDialog():New(,,,,, "PAGEINI",, .F.,,,,, oWnd, .F.,,,,,, .F.,, "oDlg", nil, )







      oFld := TFolder():ReDefine( 200, {"&Cobros", "&Pagos"}, { "PAGEINI_01","PAGEINI_02" }, oDlg,,,,, .F., )

      nFolder        := 1

      PageIniCobros()

      nFolder++

      PageIniPagos()






      TButton():ReDefine( 2, {||( oDlg:End() )}, oDlg,,, .F.,,,, .F. )

      oDlg:bStart     := {|| StartPageIni() }

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )



   RECOVER USING oError

      msgStop( ErrorMessage( oError ), "Imposible cargar gestión de cartera" )

      CloseFiles()

   end

   ErrorBlock( oBlock )





   CloseFiles()





   if !Empty( oBmpCobros )
      oBmpCobros:End()
   end

   if !empty( oBmpPagos )
      oBmpPagos:End()
   end

   if !empty( oBmpIncidencias )
      oBmpIncidencias:End()
   end

RETURN ( NIL )



FUNCTION PageIniClient( View )

   local oError
   local oBlock



   nLevel                  := Auth():Level( "gestion_de_cartera" )
   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      return nil
   end

   nView                   := View

   oBlock                  := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

   cCodigoCliente          := ( D():Get( "Client", nView ) )->Cod
   cNombreCliente          := ( D():Get( "Client", nView ) )->Titulo
   cTelefonoCliente        := ( D():Get( "Client", nView ) )->Telefono



   cPeriodoCli             := "Todos"
   cEstadoCli              := "Pendientes"
   aPeriodoCli             := aCreaArrayPeriodos()





   oDlg = TDialog():New(,,,, "Gestión de cartera : " + alltrim( cCodigoCliente ) + space( 1 ) + alltrim( cNombreCliente ), "PageIni",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )







      oFld := TFolder():ReDefine( 200, {"&Cobros", "Incidencias"}, { "PageIni_01","PageIni_03" }, oDlg,,,,, .F., )

      nFolder        := 1

      PageIniCobros()

      nFolder++

      PageIniIncidecias()




      TButton():ReDefine( 2, {||( oDlg:End() )}, oDlg,,, .F.,,,, .F. )

      oDlg:bStart    := {|| lRecargaFecha( oFecIniCli, oFecFinCli, cPeriodoCli ), LoadPageClient() }



   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|( oBrwRecCli:Load(), oBrwInc:Load() )}, oDlg:bRClicked,,, )



   RECOVER USING oError

      msgStop( ErrorMessage( oError ), "Imposible cargar gestión de cartera" )

      CloseFiles()

   end

   ErrorBlock( oBlock )

   DestroyFastFilter( D():Get( "FacPrvP", nView ) )

   DestroyFastFilter( D():Get( "FacPrvP", nView ) )





   oBrwRecCli:CloseData()
   oBrwInc:CloseData()





   if !Empty( oBmpCobros )
      oBmpCobros:End()
   end

   if !empty( oBmpIncidencias )
      oBmpIncidencias:End()
   end

RETURN ( NIL )



Static Function StartPageIni()

   lRecargaFecha( oFecIniCli, oFecFinCli, cPeriodoCli )

   lRecargaFecha( oFecIniPrv, oFecFinPrv, cPeriodoPrv )

   LoadPageClient()

   LoadPageProveedor()

RETURN ( NIL )



Static Function LoadPageClient()

   local cExpHead    := ""

   ( D():Get( "FacCliP", nView ) )->( OrdSetFocus( "dFecVto" ) )

   do case
      case oEstadoCli:nAt == 1
         cExpHead    := '!lCobrado .and. dFecVto >= Ctod( "' + Dtoc( dFecIniCli ) + '" ) .and. dFecVto <= Ctod( "' + Dtoc( dFecFinCli ) + '" )'
      case oEstadoCli:nAt == 2
         cExpHead    := 'lCobrado .and. dFecVto >= Ctod( "' + Dtoc( dFecIniCli ) + '" ) .and. dFecVto <= Ctod( "' + Dtoc( dFecFinCli ) + '" )'
      case oEstadoCli:nAt == 3
         cExpHead    := 'dFecVto >= Ctod( "' + Dtoc( dFecIniCli ) + '" ) .and. dFecVto <= Ctod( "' + Dtoc( dFecFinCli ) + '" )'
   end

   if !empty( cCodigoCliente )
      cExpHead       += ' .and. rtrim( cCodCli ) == "' + rtrim( cCodigoCliente ) + '"'
   end

    CreateFastFilter( cExpHead, D():Get( "FacCliP", nView ), .F. )



   if !Empty( oBrwRecCli )
      oBrwRecCli:Refresh()
   end

return .T.



Static Function LoadPageProveedor()

   local cExpHead    := ""

   ( D():Get( "FacPrvP", nView ) )->( OrdSetFocus( "dFecVto" ) )

   do case
      case oEstadoPrv:nAt == 1
         cExpHead    := '!lCobrado .and. dFecVto >= Ctod( "' + Dtoc( dFecIniPrv ) + '" ) .and. dFecVto <= Ctod( "' + Dtoc( dFecFinPrv ) + '" )'
      case oEstadoPrv:nAt == 2
         cExpHead    := 'lCobrado .and. dFecVto >= Ctod( "' + Dtoc( dFecIniPrv ) + '" ) .and. dFecVto <= Ctod( "' + Dtoc( dFecFinPrv ) + '" )'
      case oEstadoPrv:nAt == 3
         cExpHead    := 'dFecVto >= Ctod( "' + Dtoc( dFecIniPrv ) + '" ) .and. dFecVto <= Ctod( "' + Dtoc( dFecFinPrv ) + '" )'
   end

   if !empty( cCodigoCliente )
      cExpHead       += ' .and. rtrim( cCodPrv ) == "' + rtrim( cCodigoProveedor ) + '"'
   end

   CreateFastFilter( cExpHead, D():Get( "FacPrvP", nView ), .F. )



   if !Empty( oBrwRecPrv )
      oBrwRecPrv:Refresh()
   end

return .T.



Static Function PageIniCobros()

   local oBtnModificarRecibo





      oBmpCobros := TBitmap():ReDefine( 500, "gc_safe_into_48",, oFld:aDialogs[ nFolder ],,, .F., .F.,,, .F.,,, .T. )






      oPeriodoCli := TComboBox():ReDefine( 100, { | u | If( PCount()==0, cPeriodoCli, cPeriodoCli:= u ) }, aPeriodoCli, oFld:aDialogs[ nFolder ],,, {|Self|( lRecargaFecha( oFecIniCli, oFecFinCli, cPeriodoCli ), LoadPageClient() )},,,, .F.,,,,,,, "oPeriodoCli",,,,,,, )





      oFecIniCli := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, dFecIniCli, dFecIniCli:= u ) }, oFld:aDialogs[ nFolder ],,, {||       ( LoadPageClient() )},,,,,, .F.,,, .F., .T.,,,,,, nil,,, )





      oFecFinCli := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, dFecFinCli, dFecFinCli:= u ) }, oFld:aDialogs[ nFolder ],,, {||       ( LoadPageClient() )},,,,,, .F.,,, .F., .T.,,,,,, nil,,, )





      oEstadoCli := TComboBox():ReDefine( 130, { | u | If( PCount()==0, cEstadoCli, cEstadoCli:= u ) }, aEstadoCli, oFld:aDialogs[ nFolder ],,, {|Self|( LoadPageClient() )},,,, .F.,,,,,,, "oEstadoCli",,,,,,, )






      oBtnModificarRecibo := TButton():ReDefine( 180, {||(  if ( !Empty( ( D():FacturasClientesCobros( nView ) )->cSerie ), EdtRecCli( D():FacturasClientesCobrosId( nView ), .F., !Empty( ( D():FacturasClientesCobros( nView ) )->cTipRec ) ), ), oBrwRecCli:Refresh() )}, oFld:aDialogs[ nFolder ],,, .F.,,,, .F. )

      oBrwRecCli                 := IXBrowse():New( oFld:aDialogs[ nFolder ] )

      oBrwRecCli:bClrSel         := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
      oBrwRecCli:bClrSelFocus    := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

      oBrwRecCli:cAlias          := ( D():Get( "FacCliP", nView ) )

      oBrwRecCli:nMarqueeStyle   := 6
      oBrwRecCli:lRecordSelector := .F.
      oBrwRecCli:cName           := "Recibos de Clientes.Inicio"

      oBrwRecCli:bLDblClick      := {|| oBtnModificarRecibo:Click() }

      oBrwRecCli:CreateFromResource( 170 )

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "E. Estado"
         :bStrData               := {|| "" }
         :bEditValue             := {|| ( D():Get( "FacCliP", nView ) )->lCobrado }
         :nWidth                 := 18
         :SetCheck( { "Sel16", "Cnt16" } )
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "T. Tipo"
         :bEditValue             := {|| if( Empty( ( D():Get( "FacCliP", nView ) )->cTipRec ), "Factura", "Rectificativa" ) }
         :nWidth                 := 18
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Número"
         :bEditValue             := {|| AllTrim( ( D():Get( "FacCliP", nView ) )->cSerie ) + "/" + AllTrim( Str( ( D():Get( "FacCliP", nView ) )->nNumFac ) ) + "/" +  AllTrim( ( D():Get( "FacCliP", nView ) )->cSufFac ) + "-" + AllTrim( Str( ( D():Get( "FacCliP", nView ) )->nNumRec ) ) }
         :nWidth                 := 80
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Cliente"
         :bEditValue             := {|| AllTrim( ( D():Get( "FacCliP", nView ) )->cCodCli ) }
         :nWidth                 := 60
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Nombre"
         :bEditValue             := {|| AllTrim( ( D():Get( "FacCliP", nView ) )->cNomCli ) }
         :nWidth                 := 160
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Teléfono"
         :bEditValue             := {|| cTelefonoCliente }
         :nWidth                 := 160
         :lHide                  := .T.
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Fecha"
         :bEditValue             := {|| Dtoc( ( D():Get( "FacCliP", nView ) )->dPreCob ) }
         :nWidth                 := 80
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Vencimiento"
         :bEditValue             := {|| Dtoc( ( D():Get( "FacCliP", nView ) )->dFecVto ) }
         :bClrStd                := {|| { if( ( D():Get( "FacCliP", nView ) )->dFecVto < GetSysDate(), 255, 0 ), GetSysColor( 5 )} }
         :nWidth                 := 80
      end

      with object ( oBrwRecCli:AddCol() )
         :cHeader                := "Importe"
         :bEditValue             := {|| ( D():Get( "FacCliP", nView ) )->nImporte }
         :cEditPicture           := cPorDiv()
         :nWidth                 := 70
         :nDataStrAlign          := 1
         :nHeadStrAlign          := 1
      end

      oFld:aDialogs[ nFolder ]:AddFastKey( 114, {|| oBtnModificarRecibo:Click() } )

Return ( nil )



Static Function PageIniPagos()

   local oBtnModificarRecibo





      oBmpCobros := TBitmap():ReDefine( 500, "gc_safe_out_48",, oFld:aDialogs[ nFolder ],,, .F., .F.,,, .F.,,, .T. )






      oPeriodoPrv := TComboBox():ReDefine( 100, { | u | If( PCount()==0, cPeriodoPrv, cPeriodoPrv:= u ) }, aPeriodoPrv, oFld:aDialogs[ nFolder ],,, {|Self|( lRecargaFecha( oFecIniPrv, oFecFinPrv, cPeriodoPrv ), LoadPageProveedor() )},,,, .F.,,,,,,, "oPeriodoPrv",,,,,,, )





      oFecIniPrv := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, dFecIniPrv, dFecIniPrv:= u ) }, oFld:aDialogs[ nFolder ],,, {||       ( LoadPageProveedor() )},,,,,, .F.,,, .F., .T.,,,,,, nil,,, )





      oFecFinPrv := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, dFecFinPrv, dFecFinPrv:= u ) }, oFld:aDialogs[ nFolder ],,, {||       ( LoadPageProveedor() )},,,,,, .F.,,, .F., .T.,,,,,, nil,,, )





      oEstadoPrv := TComboBox():ReDefine( 130, { | u | If( PCount()==0, cEstadoPrv, cEstadoPrv:= u ) }, aEstadoPrv, oFld:aDialogs[ nFolder ],,, {|Self|( LoadPageProveedor() )},,,, .F.,,,,,,, "oEstadoPrv",,,,,,, )






      oBtnModificarRecibo := TButton():ReDefine( 180, {||(  if ( !Empty( ( D():FacturasProveedoresPagos( nView ) )->cSerFac ), EdtRecPrv( D():FacturasProveedoresPagosId( nView ), .F., !Empty( ( D():FacturasProveedoresPagos( nView ) )->cTipRec ) ), ), oBrwRecPrv:Refresh() )}, oFld:aDialogs[ nFolder ],,, .F.,,,, .F. )

      oBrwRecPrv                 := IXBrowse():New( oFld:aDialogs[ nFolder ] )

      oBrwRecPrv:bClrSel         := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
      oBrwRecPrv:bClrSelFocus    := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

      oBrwRecPrv:cAlias          := ( D():Get( "FacPrvP", nView ) )

      oBrwRecPrv:nMarqueeStyle   := 6
      oBrwRecPrv:lRecordSelector := .F.
      oBrwRecPrv:cName           := "Recibos de Proveedores.Inicio"

      oBrwRecPrv:bLDblClick      := {|| oBtnModificarRecibo:Click() }

      oBrwRecPrv:CreateFromResource( 170 )

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "E. Estado"
         :bStrData               := {|| "" }
         :bEditValue             := {|| ( D():Get( "FacPrvP", nView ) )->lCobrado }
         :nWidth                 := 18
         :SetCheck( { "Sel16", "Cnt16" } )
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "T. Tipo"
         :bEditValue             := {|| if( Empty( ( D():Get( "FacPrvP", nView ) )->cTipRec ), "Factura", "Rectificativa" ) }
         :nWidth                 := 18
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "Número"
         :bEditValue             := {|| AllTrim( ( D():Get( "FacPrvP", nView ) )->cSerFac ) + "/" + AllTrim( Str( ( D():Get( "FacPrvP", nView ) )->nNumFac ) ) + "/" +  AllTrim( ( D():Get( "FacPrvP", nView ) )->cSufFac ) + "-" + AllTrim( Str( ( D():Get( "FacPrvP", nView ) )->nNumRec ) ) }
         :nWidth                 := 80
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "Proveedor"
         :bEditValue             := {|| AllTrim( ( D():Get( "FacPrvP", nView ) )->cCodPrv ) }
         :nWidth                 := 60
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "Nombre"
         :bEditValue             := {|| AllTrim( ( D():Get( "FacPrvP", nView ) )->cNomPrv ) }
         :nWidth                 := 160
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "Fecha"
         :bEditValue             := {|| Dtoc( ( D():Get( "FacPrvP", nView ) )->dPreCob ) }
         :nWidth                 := 80
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "Vencimiento"
         :bEditValue             := {|| Dtoc( ( D():Get( "FacPrvP", nView ) )->dFecVto ) }
         :nWidth                 := 80
      end

      with object ( oBrwRecPrv:AddCol() )
         :cHeader                := "Importe"
         :bEditValue             := {|| ( D():Get( "FacPrvP", nView ) )->nImporte }
         :cEditPicture           := cPorDiv()
         :nWidth                 := 70
         :nDataStrAlign          := 1
         :nHeadStrAlign          := 1
      end

      oFld:aDialogs[ nFolder ]:AddFastKey( 114, {|| oBtnModificarRecibo:Click() } )

Return ( nil )



Static Function PageIniIncidecias()



   if !empty( cCodigoCliente )





      oBmpIncidencias := TBitmap():ReDefine( 500, "gc_sign_warning_48",, oFld:aDialogs[ nFolder ],,, .F., .F.,,, .F.,,, .T. )

      oBrwInc                 := IXBrowse():New( oFld:aDialogs[ nFolder ] )

      oBrwInc:bClrSel         := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
      oBrwInc:bClrSelFocus    := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

      oBrwInc:cAlias          := D():Get( "CliInc", nView )
      oBrwInc:nMarqueeStyle   := 6
      oBrwInc:cName           := "Clientes.Incidencias"

      oBrwInc:bLDblClick      := {|| EdtIncidenciaCliente( nView, oBrwInc ) }

      with object ( oBrwInc:AddCol() )
         :cHeader             := "Rs. Resuelta"
         :bStrData            := {|| "" }
         :bEditValue          := {|| ( D():Get( "CliInc", nView ) )->lListo }
         :nWidth              := 18
         :SetCheck( { "Sel16", "Nil16" } )
      end

      with object ( oBrwInc:AddCol() )
         :cHeader             := "Fecha"
         :cSortOrder          := "cCodPrv"
         :bEditValue          := {|| Dtoc( ( D():Get( "CliInc", nView ) )->dFecInc ) }
         :nWidth              := 80
      end

      with object ( oBrwInc:AddCol() )
         :cHeader             := "Descripción"
         :bEditValue          := {|| ( D():Get( "CliInc", nView ) )->mDesInc }
         :nWidth              := 350
      end

      with object ( oBrwInc:AddCol() )
         :cHeader             := "Código"
         :cSortOrder          := "cCodTip"
         :bEditValue          := {|| ( D():Get( "CliInc", nView ) )->cCodTip }
         :nWidth              := 40
      end


      oBrwInc:CreateFromResource( 400 )




      TButton():ReDefine( 100, {||( AddIncidenciaCliente( nView, oBrwInc ) )}, oFld:aDialogs[ nFolder ],,, .F.,,,, .F. )




      TButton():ReDefine( 110, {||( EdtIncidenciaCliente( nView, oBrwInc ) )}, oFld:aDialogs[ nFolder ],,, .F.,,,, .F. )




      TButton():ReDefine( 120, {||( DelIncidenciaCliente( nView, oBrwInc ) )}, oFld:aDialogs[ nFolder ],,, .F.,,,, .F. )




      TButton():ReDefine( 130, {||( ZooIncidenciaCliente( nView, oBrwInc ) )}, oFld:aDialogs[ nFolder ],,, .F.,,,, .F. )

   end

Return ( nil )



static function aCreaArrayPeriodos()

   local aPeriodo := {}

   aAdd( aPeriodo, "Hoy" )

   aAdd( aPeriodo, "Ayer" )

   aAdd( aPeriodo, "Mes en curso" )

   aAdd( aPeriodo, "Mes anterior" )

   do case
      case Month( GetSysDate() ) <= 3
         aAdd( aPeriodo, "Primer trimestre" )

      case Month( GetSysDate() ) > 3 .AND. Month( GetSysDate() ) <= 6
         aAdd( aPeriodo, "Primer trimestre" )
         aAdd( aPeriodo, "Segundo trimestre" )

      case Month( GetSysDate() ) > 6 .AND. Month( GetSysDate() ) <= 9
         aAdd( aPeriodo, "Primer trimestre" )
         aAdd( aPeriodo, "Segundo trimestre" )
         aAdd( aPeriodo, "Tercer trimestre" )

      case Month( GetSysDate() ) > 9 .AND. Month( GetSysDate() ) <= 12
         aAdd( aPeriodo, "Primer trimestre" )
         aAdd( aPeriodo, "Segundo trimestre" )
         aAdd( aPeriodo, "Tercer trimestre" )
         aAdd( aPeriodo, "Cuatro trimestre" )

   end

   aAdd( aPeriodo, "Doce últimos meses" )

   aAdd( aPeriodo, "Año en curso" )

   aAdd( aPeriodo, "Año anterior" )

   aAdd( aPeriodo, "Todos" )

Return ( aPeriodo )



Static Function lRecargaFecha( oFechaInicio, oFechaFin, cPeriodo )

   do case
      case cPeriodo == "Hoy"

         oFechaInicio:cText( GetSysDate() )
         oFechaFin:cText( GetSysDate() )

      case cPeriodo == "Ayer"

         oFechaInicio:cText( GetSysDate() -1 )
         oFechaFin:cText( GetSysDate() -1 )

      case cPeriodo == "Mes en curso"

         oFechaInicio:cText( CtoD( "01/" + Str( Month( GetSysDate() ) ) + "/" + Str( Year( GetSysDate() ) ) ) )
         oFechaFin:cText( GetSysDate() )

      case cPeriodo == "Mes anterior"

         oFechaInicio:cText( BoM( AddMonth( GetSysDate(), -1 ) ) )
         oFechaFin:cText( EoM( AddMonth( GetSysDate(), -1 ) ) )

      case cPeriodo == "Primer trimestre"

         oFechaInicio:cText( CtoD( "01/01/" + Str( Year( GetSysDate() ) ) ) )
         oFechaFin:cText( CtoD( "31/03/" + Str( Year( GetSysDate() ) ) ) )

      case cPeriodo == "Segundo trimestre"

         oFechaInicio:cText( CtoD( "01/04/" + Str( Year( GetSysDate() ) ) ) )
         oFechaFin:cText( CtoD( "30/06/" + Str( Year( GetSysDate() ) ) ) )

      case cPeriodo == "Tercer trimestre"

         oFechaInicio:cText( CtoD( "01/07/" + Str( Year( GetSysDate() ) ) ) )
         oFechaFin:cText( CtoD( "30/09/" + Str( Year( GetSysDate() ) ) ) )

      case cPeriodo == "Cuatro trimestre"

         oFechaInicio:cText( CtoD( "01/10/" + Str( Year( GetSysDate() ) ) ) )
         oFechaFin:cText( CtoD( "31/12/" + Str( Year( GetSysDate() ) ) ) )

      case cPeriodo == "Doce últimos meses"

         oFechaInicio:cText( CtoD( Str( Day( GetSysDate() ) ) + "/" + Str( Month( GetSysDate() ) ) + "/" + Str( Year( GetSysDate() ) -1 ) ) )
         oFechaFin:cText( GetSysDate() )

      case cPeriodo == "Año en curso"

         oFechaInicio:cText( CtoD( "01/01/" + Str( Year( GetSysDate() ) ) ) )
         oFechaFin:cText( CtoD( "31/12/" + Str( Year( GetSysDate() ) ) ) )

      case cPeriodo == "Año anterior"

         oFechaInicio:cText( CtoD( "01/01/" + Str( Year( GetSysDate() ) - 1 ) ) )
         oFechaFin:cText( CtoD( "31/12/" + Str( Year( GetSysDate() ) - 1 ) ) )

      case cPeriodo == "Todos"

         oFechaInicio:cText( CtoD( "01/01/2000" ) )
         oFechaFin:cText( CtoD( "31/12/" + Str( Year( GetSysDate() ) ) ) )

   end

   oFechaInicio:Refresh()
   oFechaFin:Refresh()

RETURN ( .T. )
