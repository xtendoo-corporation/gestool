#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\terceros\Payment.prg"
_HB_CLASS Payment ; function Payment ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "Payment", iif( .T., { @Editable() }, { @HBObject() } ), @Payment() ) ) ;

   _HB_MEMBER { oGridPayment } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGridPayment"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @Payment_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Init( oSender); oClass:AddMethod( "Init", @Payment_Init(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @Payment_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CloseFiles(); oClass:AddInline( "CloseFiles", {|Self | ( ( Self ) ), ( D():DeleteView( ::nView ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setEnviroment(); oClass:AddInline( "setEnviroment", {|Self | ( ( Self ) ), ( ::setDataTable( "FPago" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS Payment ;



static FUNCTION Payment_New( ) ; local Self AS CLASS Payment := QSelf() AS CLASS Payment

   if ::OpenFiles()
      ::setEnviroment()
   end

Return ( self )



static FUNCTION Payment_Init( oSender ) ; local Self AS CLASS Payment := QSelf() AS CLASS Payment

   ::nView                               := oSender:nView

   ::oGridPayment                        := PaymentViewSearchNavigator():New( self )
   ::oGridPayment:setSelectorMode()
   ::oGridPayment:setTitleDocumento( "Seleccione forma de pago" )
   ::oGridPayment:setDblClickBrowseGeneral( {|| ::oGridPayment:endView() } )

   ::setEnviroment()

Return ( self )



static FUNCTION Payment_OpenFiles( ) ; local Self AS CLASS Payment := QSelf() AS CLASS Payment

   local oError
   local oBlock
   local lOpenFiles     := .T.

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      ::nView           := D():CreateView()

      D():FormasPago( ::nView )

   RECOVER USING oError

      lOpenFiles        := .F.

      ApoloMsgStop( "Imposible abrir todas las bases de datos" + Chr(13)+Chr(10) + ErrorMessage( oError ) )

   end

   ErrorBlock( oBlock )

   if !lOpenFiles
      ::CloseFiles( "" )
   end

Return ( lOpenFiles )
