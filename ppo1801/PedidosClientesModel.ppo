#line 91 "\fwh1801\include\fivewin.ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\Prg\Models\PedidosClientesModel.prg"
_HB_CLASS PedidosClientesModel ; function PedidosClientesModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "PedidosClientesModel", iif( .T., { @TransaccionesComercialesLineasModel() }, { @HBObject() } ), @PedidosClientesModel() ) ) ;

  _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "PedCliT" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

  _HB_MEMBER getField( cSerie, nNumero, cSufijo, cField); oClass:AddMethod( "getField", @PedidosClientesModel_getField(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

  _HB_MEMBER existInWP( cId); oClass:AddMethod( "existInWP", @PedidosClientesModel_existInWP(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS PedidosClientesModel ;



static FUNCTION PedidosClientesModel_getField( cSerie, nNumero, cSufijo, cField ) ; local Self AS CLASS PedidosClientesModel := QSelf() AS CLASS PedidosClientesModel

   local cStm
   local cSql

   cSql              := "SELECT " + cField + " "
   cSql              +=    "FROM " + ::getTableName() + " "
   cSql              +=    "WHERE cSerPed = " + quoted( cSerie ) + " AND nNumPed = " + AllTrim( Str( nNumero ) ) + " AND cSufPed = " + + quoted( cSufijo )

   if ::ExecuteSqlStatement( cSql, @cStm )
      RETURN ( ( cStm )->( fieldget( fieldpos( cField ) ) ) )
   end

RETURN ( nil )



static FUNCTION PedidosClientesModel_existInWP( cId ) ; local Self AS CLASS PedidosClientesModel := QSelf() AS CLASS PedidosClientesModel

   local cStm


   local cSql  := "SELECT * "                                   +  "FROM " + ::getTableName() + " "             +  "WHERE cIdWP = " + quoted( cId )

   if ::ExecuteSqlStatement( cSql, @cStm )
      RETURN ( ( cStm )->( lastrec() ) > 0 )
   end

RETURN ( .F. )
