#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\Propiedades.prg"
_HB_CLASS Propiedades ; function Propiedades ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "Propiedades", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @Propiedades() ) ) ;

   _HB_MEMBER { oEditControl } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oEditControl"}, .F. )

   _HB_MEMBER { cEditControl } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cEditControl"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @Propiedades_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Dialog(); oClass:AddMethod( "Dialog", @Propiedades_Dialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER createEditControl( hControl); oClass:AddMethod( "createEditControl", @Propiedades_createEditControl(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS Propiedades ;



static FUNCTION Propiedades_New( oController ) ; local Self AS CLASS Propiedades := QSelf() AS CLASS Propiedades

   ::oController     := oController

   ::cImageName        := "gc_coathanger_16"

Return ( Self )



static FUNCTION Propiedades_Dialog( ) ; local Self AS CLASS Propiedades := QSelf() AS CLASS Propiedades

   local oDlg
   local oBtnOk
   local oGetNombre
   local oGetCodigo
   local oControlBrw

   oDlg = TDialog():New(,,,, ::lblTitle() + "propiedades", "PROP_SQL",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )






   oGetCodigo := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo" ], ::oController:oModel:hBuffer[ "codigo" ]:= u ) }, oDlg,,, {||       ( ::oController:validCodigo( oGetCodigo ) )},,,,,, .F., {||        ( !::oController:isZoomMode() )},, .F., .F.,,,,,, nil,,, )






   oGetNombre := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre" ], ::oController:oModel:hBuffer[ "nombre" ]:= u ) }, oDlg,,, {||       ( ::oController:validNombre( oGetNombre ) )},,,,,, .F., {||        ( !::oController:isZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TCheckBox():ReDefine( 200, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "is_color" ], ::oController:oModel:hBuffer[ "is_color" ]:= u ) }, oDlg,,,,,,, .F., {||         ( !::oController:isZoomMode() )}, .F. )

   oControlBrw     := ::oController:oPropiedadesLineasController:showBrowseInDialog( 120, oDlg )

   ::oController:getController( "lineas" ):oView:buildSQLNuclearBrowse( 120, oDlg )





   TButton():ReDefine( 500, {||( ::oController:getController( "lineas" ):Append() )}, oDlg,,, .F., {||         ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 501, {||( ::oController:getController( "lineas" ):Edit() )}, oDlg,,, .F., {||         ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 502, {||( ::oController:oPropiedadesLineasController:Delete( ::oController:oPropiedadesLineasController:oView:oBrowse ) )}, oDlg,,, .F., {||         ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 503, {||( ::oController:getController( "lineas" ):Delete() )}, oDlg,,, .F., {||         ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 503, {||( ::oController:getController( "lineas" ):UpDet() )}, oDlg,,, .F., {||         ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 504, {||( ::oController:getController( "lineas" ):DownDet() )}, oDlg,,, .F., {||         ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 1, {||( ::oController:getController( "lineas" ):DownDet() )}, oDlg,,, .F., {||        ( !::oController:isZoomMode() )},,, .F. )





   oBtnOk := TButton():ReDefine( 1, {||( if( validateDialog( oDlg ), oDlg:end( 1 ), ) )}, oDlg,,, .F., {||        ( !::oController:isZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .T. )



   oDlg:AddFastKey( 116, {|| oDlg:end( 1 ) } )



   oDlg:bStart    := {|| oGetNombre:setFocus() }

   oDlg:AddFastKey( 113, {|| ::oController:getController( "lineas" ):Append() } )
   oDlg:AddFastKey( 114, {|| ::oController:getController( "lineas" ):Edit() } )
   oDlg:AddFastKey( 115, {|| ::oController:getController( "lineas" ):Delete() } )
   oDlg:AddFastKey( 116, {|| oBtnOk:Click() } )



   oDlg:bStart    := {|| oGetCodigo:setFocus() }

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN ( oDlg:nResult == 1 )



static FUNCTION Propiedades_createEditControl( uValue, hControl ) ; local Self AS CLASS Propiedades := QSelf() AS CLASS Propiedades

   local idSay

   if hb_isnil( uValue )
      RETURN ( Self )
   end

   if hhaskey( hControl, "idSay" )
      idSay       := hget( hControl, "idSay" )
   end

   if !hhaskey( hControl, "idGet" )
      RETURN ( Self )
   end

   if !hhaskey( hControl, "idText" )
      RETURN ( Self )
   end

   if !hhaskey( hControl, "dialog" )
      RETURN ( Self )
   end

   if !hhaskey( hControl, "when" )
      RETURN ( Self )
   end







   ::oEditControl := TGetHlp():ReDefine( ( hGet( hControl, "idGet" ) ), { | u | If( PCount()==0, uValue, uValue:= u ) }, ( hGet( hControl, "dialog" ) ),,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "Lupa", ( idSay ), ( hGet( hControl, "idText" ) ) )

   ::oEditControl:bWhen    := hGet( hControl, "when" )
   ::oEditControl:bHelp    := {|| ::oController:assignBrowse( ::oEditControl ) }
   ::oEditControl:bValid   := {|| ::oController:isValidCodigo( ::oEditControl ) }

RETURN ( Self )
