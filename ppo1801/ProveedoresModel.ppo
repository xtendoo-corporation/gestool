#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Models\ProveedoresModel.prg"
_HB_CLASS ProveedoresModel ; function ProveedoresModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ProveedoresModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @ProveedoresModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "Provee" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getToOdoo( cArea); oClass:AddMethod( "getToOdoo", @ProveedoresModel_getToOdoo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ProveedoresModel ;



static FUNCTION ProveedoresModel_getToOdoo( cArea ) ; local Self AS CLASS ProveedoresModel := QSelf() AS CLASS ProveedoresModel

   local cSql  := "SELECT * FROM " + ::getTableName()

   cSql        += " WHERE lSndInt"

RETURN ( ::ExecuteSqlStatement( cSql, @cArea ) )







_HB_CLASS ProveedoresBancosModel ; function ProveedoresBancosModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ProveedoresBancosModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @ProveedoresBancosModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "PrvBnc" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getToOdoo( cArea, cCodPrv); oClass:AddMethod( "getToOdoo", @ProveedoresBancosModel_getToOdoo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ProveedoresBancosModel ;



static FUNCTION ProveedoresBancosModel_getToOdoo( cArea, cCodPrv ) ; local Self AS CLASS ProveedoresBancosModel := QSelf() AS CLASS ProveedoresBancosModel

   local cSql  := "SELECT * FROM " + ::getTableName()

   cSql        += " WHERE cCodPrv = " + quoted( cCodPrv )

RETURN ( ::ExecuteSqlStatement( cSql, @cArea ) )
