#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Prueba.prg"
_HB_CLASS TPrueba ; function TPrueba ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TPrueba", iif( .T., { @TNewInfGen() }, { @HBObject() } ), @TPrueba() ) ) ;

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TPrueba_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @TPrueba_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TPrueba_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TPrueba ;



static FUNCTION TPrueba_Create( ) ; local Self AS CLASS TPrueba := QSelf() AS CLASS TPrueba

   ::AddField( "cCodGCli",    "C",  4, 0,  {|| "@!" },        "Cod. Grp.",   .F., "Código grupo cliente",   14, .F. )
   ::AddField( "cNomGCli",    "C", 30, 0,  {|| "@!" },        "Grupo Cli.",  .F., "Nombre grupo cliente",   14, .F. )
   ::AddField( "cCodRut",     "C",  4, 0,  {|| "@!" },        "Cod. ruta",   .F., "Código ruta",            14, .F. )
   ::AddField( "cNomRut",     "C", 30, 0,  {|| "@!" },        "Ruta",        .F., "Nombre ruta",            14, .F. )
   ::AddField( "cCodCli",     "C", 12, 0,  {|| "@!" },        "Cod. Cli.",   .F., "Código cliente",         14, .F. )
   ::AddField( "cNomCli",     "C", 80, 0,  {|| "@!" },        "Cliente",     .F., "Nombre cliente",         14, .F. )
   ::AddField( "cCodArt",     "C", 18, 0,  {|| "@!" },        "Código artículo",   .F., "Código artículo",        14, .F. )
   ::AddField( "cNomArt",     "C",100, 0,  {|| "@!" },        "Artículo",    .F., "Nombre artículo",        14, .F. )
   ::AddField( "cFactura",    "C", 12, 0,  {|| "@!" },        "Factura",     .F., "Número factura",         14, .F. )

RETURN ( self )



static FUNCTION TPrueba_lResource( cFld ) ; local Self AS CLASS TPrueba := QSelf() AS CLASS TPrueba

   ::lNewInforme  := .T.
   ::cEmptyIndex  := "cFactura"

   if !::NewResource()
      return .F.
   end

   if !::lGrupoGrupoCliente( .F. )
      return .F.
   end

   if !::lGrupoRuta( .F. )
      return .F.
   end

   if !::lGrupoCliente( .F. )
      return .F.
   end

   if !::lGrupoArticulo( .F. )
      return .F.
   end

   if !::lGrupoFacturas( .F. )
      return .F.
   end

   ::lDefCondiciones := .F.

RETURN .T.



static FUNCTION TPrueba_lGenerate( ) ; local Self AS CLASS TPrueba := QSelf() AS CLASS TPrueba

   msginfo( "Entro en el Generate" )

RETURN ( ::oDbf:LastRec() > 0 )
