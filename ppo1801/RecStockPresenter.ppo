#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\RecStockPresenter.prg"
_HB_CLASS RecStockPresenter ; function RecStockPresenter ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "RecStockPresenter", iif( .T., { @DocumentsSales() }, { @HBObject() } ), @RecStockPresenter() ) ) ;

   _HB_MEMBER { oRecStockView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oRecStockView"}, .F. )

   _HB_MEMBER { AS LOGIC lSyncronize } ; oClass:AddMultiData( "LOGIC", .T., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lSyncronize"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @RecStockPresenter_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runNavigator(); oClass:AddMethod( "runNavigator", @RecStockPresenter_runNavigator(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onPreRunNavigator(); oClass:AddInline( "onPreRunNavigator", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER play(); oClass:AddMethod( "play", @RecStockPresenter_play(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runRecStock(); oClass:AddMethod( "runRecStock", @RecStockPresenter_runRecStock(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS RecStockPresenter ;



static FUNCTION RecStockPresenter_New( ) ; local Self AS CLASS RecStockPresenter := QSelf() AS CLASS RecStockPresenter

   ::oRecStockView    := RecStockView():New( self )

   ::oRecStockView:setTitleDocumento( "Recalculo de stock" )

Return( self )



static FUNCTION RecStockPresenter_runNavigator( ) ; local Self AS CLASS RecStockPresenter := QSelf() AS CLASS RecStockPresenter

   if !empty( ::oRecStockView )
      ::oRecStockView:Resource()
   end

Return( self )



static FUNCTION RecStockPresenter_play( ) ; local Self AS CLASS RecStockPresenter := QSelf() AS CLASS RecStockPresenter

   if ::onPreRunNavigator()
      ::runNavigator()
   end

return ( self )



static FUNCTION RecStockPresenter_runRecStock( ) ; local Self AS CLASS RecStockPresenter := QSelf() AS CLASS RecStockPresenter

   local oClassReindexa

   oClassReindexa                      := TDataCenter()

   if !Empty( oClassReindexa )

      oClassReindexa:aLgcIndices[ 1 ]  := .F.
      oClassReindexa:aLgcIndices[ 2 ]  := .F.
      oClassReindexa:aLgcIndices[ 3 ]  := .F.
      oClassReindexa:aLgcIndices[ 4 ]  := .T.

      oClassReindexa:aProgress[ 4 ]    := ::oRecStockView:oMeterStock
      oClassReindexa:nProgress[ 4 ]    := ::oRecStockView:nMeterStock

      oClassReindexa:oMsg              := ::oRecStockView:oSayInformacion

      oClassReindexa:RecalculoStock()

   end

Return ( self )
