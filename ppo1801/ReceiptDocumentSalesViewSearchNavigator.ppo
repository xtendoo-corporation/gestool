#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\view\documentos\ventas\ReceiptDocumentSalesViewSearchNavigator.prg"
_HB_CLASS ReceiptDocumentSalesViewSearchNavigator ; function ReceiptDocumentSalesViewSearchNavigator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ReceiptDocumentSalesViewSearchNavigator", iif( .T., { @ViewSearchNavigator() }, { @HBObject() } ), @ReceiptDocumentSalesViewSearchNavigator() ) ) ;

   _HB_MEMBER { buttonPrint } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"buttonPrint"}, .F. )

   _HB_MEMBER { comboboxFilter } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"comboboxFilter"}, .F. )
   _HB_MEMBER { cComboboxFilter } ; oClass:AddMultiData(, "Pendientes delegación", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cComboboxFilter"}, .F. )
   _HB_MEMBER { aComboboxFilter } ; oClass:AddMultiData(, { "Todos delegación", "Pendientes delegación", "Cobrados delegación", "Todos", "Pendientes", "Cobrados" }, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aComboboxFilter"}, .F. )

   _HB_MEMBER getDataTable(); oClass:AddInline( "getDataTable", {|Self | ( ( Self ) ), ( ::oSender:getDataTable() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getView(); oClass:AddInline( "getView", {|Self | ( ( Self ) ), ( ::oSender:nView ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setItemsBusqueda(); oClass:AddInline( "setItemsBusqueda", {|Self | ( ( Self ) ), ( ::hashItemsSearch := { "Fecha" => "dFecDes", "Número" => 1, "Código" => "cCodCli", "Nombre" => "cNomCli", "Importe" => "nImporte" } ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setColumns(); oClass:AddMethod( "setColumns", @ReceiptDocumentSalesViewSearchNavigator_setColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getField(); oClass:AddInline( "getField", {|Self, cField | ( ( Self ) ), ( D():getFieldDictionary( cField, ::getDataTable(), ::getView() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER BotonesAcciones(); oClass:AddMethod( "BotonesAcciones", @ReceiptDocumentSalesViewSearchNavigator_BotonesAcciones(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ChangeFilter(); oClass:AddMethod( "ChangeFilter", @ReceiptDocumentSalesViewSearchNavigator_ChangeFilter(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineBarraBusqueda(); oClass:AddMethod( "defineBarraBusqueda", @ReceiptDocumentSalesViewSearchNavigator_defineBarraBusqueda(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER validBarraBusqueda(); oClass:AddInline( "validBarraBusqueda", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineSalir(); oClass:AddMethod( "defineSalir", @ReceiptDocumentSalesViewSearchNavigator_defineSalir(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ReceiptDocumentSalesViewSearchNavigator ;



static FUNCTION ReceiptDocumentSalesViewSearchNavigator_setColumns( ) ; local Self AS CLASS ReceiptDocumentSalesViewSearchNavigator := QSelf() AS CLASS ReceiptDocumentSalesViewSearchNavigator

   ::setBrowseConfigurationName( "grid_recibos" )

   ::oBrowse:bClrSel         := {|| { if( !::getField( "LogicoCobrado" ), ( 255 + ( 0 * 256 ) + ( 0 * 65536 ) ), 0 ), ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
   ::oBrowse:bClrSelFocus    := {|| { if( !::getField( "LogicoCobrado" ), ( 255 + ( 0 * 256 ) + ( 0 * 65536 ) ), 0 ), ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }
   ::oBrowse:bClrStd         := {|| { if( !::getField( "LogicoCobrado" ), ( 255 + ( 0 * 256 ) + ( 0 * 65536 ) ), 0 ), GetSysColor( 5 ) } }

   with object ( ::addColumn() )
      :cHeader           := "Id"
      :bEditValue        := {|| ::getField( "Serie" ) + "/" + alltrim( str( ::getField( "Numero" ) ) ) + "-" + alltrim( str( ::getField( "NumeroRecibo" ) ) ) }
      :nWidth            := 150
   end

   with object ( ::addColumn() )
      :cHeader           := "Exp./Vto."
      :bEditValue        := {|| dtoc( ::getField( "FechaExpedicion" ) ) + Chr(13)+Chr(10) + dtoc( ::getField( "FechaVencimiento" ) ) }
      :nWidth            := 160
   end

   with object ( ::addColumn() )
      :cHeader           := "Cliente"
      :bEditValue        := {|| alltrim( ::getField( "Cliente" ) ) + Chr(13)+Chr(10) + alltrim( ::getField( "NombreCliente" ) ) }
      :nWidth            := 200
   end

   with object ( ::addColumn() )
      :cHeader           := "Importe"
      :bEditValue        := {|| ::getField( "TotalDocumento" ) }
      :cEditPicture      := cPorDiv()
      :nWidth            := 155
      :nDataStrAlign     := 1
      :nHeadStrAlign     := 1
   end

Return ( self )



static FUNCTION ReceiptDocumentSalesViewSearchNavigator_BotonesAcciones( ) ; local Self AS CLASS ReceiptDocumentSalesViewSearchNavigator := QSelf() AS CLASS ReceiptDocumentSalesViewSearchNavigator

   if ::oSender:lAlowEdit







      TGridImage():Build(  {  "nTop"      => 75, "nLeft"     => {|| GridWidth( 0.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_pencil_64", "bLClicked" => {|| ::oSender:Edit() }, "oWnd"      => ::oDlg } )


      if ::oSender:lShowFilterCobrado








         ::comboboxFilter     := TGridComboBox():Build(  {  "nRow"      => 75, "nCol"      => {|| GridWidth( 1.5, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, ::cComboboxFilter, ::cComboboxFilter := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 4.5, ::oDlg ) }, "nHeight"   => 25, "aItems"    => ::aComboboxFilter, "bChange"   => {|| ::ChangeFilter() } } )

      end

   end

   ::oDlg:bStart     := {|| ::ChangeFilter() }

Return ( self )



static FUNCTION ReceiptDocumentSalesViewSearchNavigator_ChangeFilter( ) ; local Self AS CLASS ReceiptDocumentSalesViewSearchNavigator := QSelf() AS CLASS ReceiptDocumentSalesViewSearchNavigator

   local cText    := ""

   if ::oSender:lShowFilterCobrado

      ::oSender:FilterTable( ::cComboboxFilter )

   end


Return ( .T. )



static FUNCTION ReceiptDocumentSalesViewSearchNavigator_defineSalir( ) ; local Self AS CLASS ReceiptDocumentSalesViewSearchNavigator := QSelf() AS CLASS ReceiptDocumentSalesViewSearchNavigator







   ::buttonPrint     :=    TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 9, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_printer_64", "bLClicked" => {|| ::oSender:printReceipt() }, "oWnd"      => ::oDlg } )







   ::buttonEnd       :=    TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 10.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_door_open_64", "bLClicked" => {|| ::oDlg:End() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ReceiptDocumentSalesViewSearchNavigator_defineBarraBusqueda( ) ; local Self AS CLASS ReceiptDocumentSalesViewSearchNavigator := QSelf() AS CLASS ReceiptDocumentSalesViewSearchNavigator

   local cGetSearch
   local cComboboxOrden

   cGetSearch        := Space( 100 )
   cComboboxOrden    := ::getInitialComboboxOrden()








   ::getSearch       := TGridGet():Build(       {  "nRow"      => 45, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, cGetSearch, cGetSearch := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 9, ::oDlg ) }, "nHeight"   => 25, "bValid"    => {|| ::validBarraBusqueda() }, "bChanged"  => {| nKey, nFlags | AutoSeek( nKey, nFlags, ::getSearch, ::oBrowse, ::getWorkArea(), .T., , .F. ) } } )








   ::comboboxSearch  := TGridComboBox():Build(  {  "nRow"      => 45, "nCol"      => {|| GridWidth( 9.5, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, cComboboxOrden, cComboboxOrden := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 2, ::oDlg ) }, "nHeight"   => 25, "aItems"    => hGetKeys( ::hashItemsSearch ), "bChange"   => {|| ::changeComboboxSearch() } } )

Return ( self )
