#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Models\RecibosClientesModel.prg"
_HB_CLASS RecibosClientesModel ; function RecibosClientesModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "RecibosClientesModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @RecibosClientesModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "FacCliP" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Riesgo( idCliente); oClass:AddMethod( "Riesgo", @RecibosClientesModel_Riesgo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER dPrimerReciboPendiente( cCodCli); oClass:AddMethod( "dPrimerReciboPendiente", @RecibosClientesModel_dPrimerReciboPendiente(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS RecibosClientesModel ;



static FUNCTION RecibosClientesModel_Riesgo( idCliente ) ; local Self AS CLASS RecibosClientesModel := QSelf() AS CLASS RecibosClientesModel

   local cSql
   local cStm
   local nRiesgo  := 0



   cSql           := "SELECT SUM( nImporte ) AS nRiesgo " +  "FROM " + ::getTableName() + " " +  "WHERE cCodCli = " + quoted( idCliente ) + " AND NOT lCobrado AND NOT lPasado"

   if ::ExecuteSqlStatement( cSql, @cStm )
      nRiesgo     += ( cStm )->nRiesgo
   end

Return ( nRiesgo )



static FUNCTION RecibosClientesModel_dPrimerReciboPendiente( cCodCli ) ; local Self AS CLASS RecibosClientesModel := QSelf() AS CLASS RecibosClientesModel

   local cSql
   local cStm



   cSql           := "SELECT dPreCob AS fecha " +  "FROM " + ::getTableName() + " " +  "WHERE cCodCli = " + quoted( cCodCli ) + " AND NOT lCobrado AND NOT lPasado ORDER BY dPreCob ASC"

   if ::ExecuteSqlStatement( cSql, @cStm )
      ( cStm )->( dbGoTop() )
      Return ( cStm )->fecha
   end

Return ( GetSysDate() )
