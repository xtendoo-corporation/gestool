#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\ReindexaPresenter.prg"
_HB_CLASS ReindexaPresenter ; function ReindexaPresenter ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ReindexaPresenter", iif( .T., { @DocumentsSales() }, { @HBObject() } ), @ReindexaPresenter() ) ) ;

   _HB_MEMBER { oReindexaView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oReindexaView"}, .F. )

   _HB_MEMBER { AS LOGIC lSyncronize } ; oClass:AddMultiData( "LOGIC", .T., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lSyncronize"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @ReindexaPresenter_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runNavigator(); oClass:AddMethod( "runNavigator", @ReindexaPresenter_runNavigator(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onPreRunNavigator(); oClass:AddInline( "onPreRunNavigator", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER play(); oClass:AddMethod( "play", @ReindexaPresenter_play(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runReindexa(); oClass:AddMethod( "runReindexa", @ReindexaPresenter_runReindexa(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setSyncronize(); oClass:AddInline( "setSyncronize", {|Self, lSyncronize | ( ( Self ) ), ( ::lSyncronize := lSyncronize ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getSyncronize(); oClass:AddInline( "getSyncronize", {|Self | ( ( Self ) ), ( ::lSyncronize ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setLastReindex(); oClass:AddInline( "setLastReindex", {|Self | ( ( Self ) ), ( writePProString( "Tablet", "LastReindex", dtos( date() ), cIniAplication() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ReindexaPresenter ;



static FUNCTION ReindexaPresenter_New( ) ; local Self AS CLASS ReindexaPresenter := QSelf() AS CLASS ReindexaPresenter

   ::oReindexaView    := ReindexaView():New( self )

   ::oReindexaView:setTitleDocumento( "Regeneración de indices" )

Return( self )



static FUNCTION ReindexaPresenter_runNavigator( ) ; local Self AS CLASS ReindexaPresenter := QSelf() AS CLASS ReindexaPresenter

   if !empty( ::oReindexaView )
      ::oReindexaView:Resource()
   end

Return( self )



static FUNCTION ReindexaPresenter_play( ) ; local Self AS CLASS ReindexaPresenter := QSelf() AS CLASS ReindexaPresenter

   if ::onPreRunNavigator()
      ::runNavigator()
   end

   TDataCenter():CloseAllTables()

return ( self )



static FUNCTION ReindexaPresenter_runReindexa( ) ; local Self AS CLASS ReindexaPresenter := QSelf() AS CLASS ReindexaPresenter

   local oClassReindexa

   if !TReindex():lCreateHandle()
      ApoloMsgStop( "Esta opción ya ha sido inicada por otro usuario", "Atención" )
      return nil
   end

   oClassReindexa                      := TDataCenter()

   if !Empty( oClassReindexa )

      oClassReindexa:aLgcIndices[ 1 ]  := .T.
      oClassReindexa:aLgcIndices[ 2 ]  := .T.
      oClassReindexa:aLgcIndices[ 3 ]  := .T.

      oClassReindexa:aProgress[ 1 ]    := ::oReindexaView:oMeterSistema
      oClassReindexa:aProgress[ 2 ]    := ::oReindexaView:oMeterEmpresa
      oClassReindexa:aProgress[ 3 ]    := ::oReindexaView:oMeterSincronizacion
      oClassReindexa:nProgress[ 1 ]    := ::oReindexaView:nMeterSistema
      oClassReindexa:nProgress[ 2 ]    := ::oReindexaView:nMeterEmpresa
      oClassReindexa:nProgress[ 3 ]    := ::oReindexaView:nMeterSincronizacion

      oClassReindexa:oMsg              := ::oReindexaView:oSayInformacion

      oClassReindexa:BuildData()
      oClassReindexa:BuildEmpresa()
      oClassReindexa:Reindex()

      if ::lSyncronize

      end

      ::setLastReindex()

   end

Return ( self )
