#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 5 ".\Prg\tablet\view\ReindexaView.prg"
_HB_CLASS ReindexaView ; function ReindexaView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ReindexaView", iif( .T., { @ViewBase() }, { @HBObject() } ), @ReindexaView() ) ) ;

   _HB_MEMBER { oMeterSistema } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMeterSistema"}, .F. )
   _HB_MEMBER { nMeterSistema } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMeterSistema"}, .F. )
   _HB_MEMBER { oMeterEmpresa } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMeterEmpresa"}, .F. )
   _HB_MEMBER { nMeterEmpresa } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMeterEmpresa"}, .F. )
   _HB_MEMBER { oMeterSincronizacion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMeterSincronizacion"}, .F. )
   _HB_MEMBER { nMeterSincronizacion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMeterSincronizacion"}, .F. )
   _HB_MEMBER { oSayInformacion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSayInformacion"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @ReindexaView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER insertControls(); oClass:AddMethod( "insertControls", @ReindexaView_insertControls(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineAceptarCancelar(); oClass:AddMethod( "defineAceptarCancelar", @ReindexaView_defineAceptarCancelar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineMeter(); oClass:AddMethod( "defineMeter", @ReindexaView_defineMeter(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTitleTipoDocumento(); oClass:AddInline( "getTitleTipoDocumento", {|Self | ( ( Self ) ), ( ::getTextoTipoDocumento() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER startDialog(); oClass:AddMethod( "startDialog", @ReindexaView_startDialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ReindexaView ;



static FUNCTION ReindexaView_New( oSender ) ; local Self AS CLASS ReindexaView := QSelf() AS CLASS ReindexaView

   ::oSender               := oSender

   ::nMeterSistema         := 0
   ::nMeterEmpresa         := 0
   ::nMeterSincronizacion  := 0

Return ( self )



static FUNCTION ReindexaView_insertControls( ) ; local Self AS CLASS ReindexaView := QSelf() AS CLASS ReindexaView

   ::defineMeter()

Return ( Self )



static FUNCTION ReindexaView_defineMeter( ) ; local Self AS CLASS ReindexaView := QSelf() AS CLASS ReindexaView











   TGridSay():Build(    {  "nRow"      => 55, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Ficheros del sistema" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 2.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )











   ::oMeterSistema         := TGridMeter():Build( {   "nRow"            => 55, "nCol"            => {|| GridWidth( 3.5, ::oDlg ) }, "bSetGet"         => {|u| if( PCount() == 0, ::nMeterSistema, ::nMeterSistema := u ) }, "oWnd"            => ::oDlg, "nWidth"          => {|| GridWidth( 8.5, ::oDlg ) }, "nHeight"         => 20, "lPixel"          => .T., "lUpdate"         => .T., "lNoPercentage"   => .T., "nClrPane"        => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nClrBar"         => ( 128 + ( 255 * 256 ) + ( 0 * 65536 ) ) } )











   TGridSay():Build(    {  "nRow"      => 90, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Ficheros de empresa" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 2.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )











   ::oMeterEmpresa         := TGridMeter():Build( {   "nRow"            => 90, "nCol"            => {|| GridWidth( 3.5, ::oDlg ) }, "bSetGet"         => {|u| if( PCount() == 0, ::nMeterEmpresa, ::nMeterEmpresa := u ) }, "oWnd"            => ::oDlg, "nWidth"          => {|| GridWidth( 8.5, ::oDlg ) }, "nHeight"         => 20, "lPixel"          => .T., "lUpdate"         => .T., "lNoPercentage"   => .T., "nClrPane"        => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nClrBar"         => ( 128 + ( 255 * 256 ) + ( 0 * 65536 ) ) } )











   TGridSay():Build(    {  "nRow"      => 125, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Sincronización información" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 2.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )











   ::oMeterSincronizacion  := TGridMeter():Build( {   "nRow"            => 125, "nCol"            => {|| GridWidth( 3.5, ::oDlg ) }, "bSetGet"         => {|u| if( PCount() == 0, ::nMeterSincronizacion, ::nMeterSincronizacion := u ) }, "oWnd"            => ::oDlg, "nWidth"          => {|| GridWidth( 8.5, ::oDlg ) }, "nHeight"         => 20, "lPixel"          => .T., "lUpdate"         => .T., "lNoPercentage"   => .T., "nClrPane"        => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nClrBar"         => ( 128 + ( 255 * 256 ) + ( 0 * 65536 ) ) } )












   ::oSayInformacion       := TGridSay():Build(    {  "nRow"      => 160, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 11.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F., "lCentered" => .T. } )


Return ( Self )



static FUNCTION ReindexaView_defineAceptarCancelar( ) ; local Self AS CLASS ReindexaView := QSelf() AS CLASS ReindexaView







   TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 9.0, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_error_64", "bLClicked" => {|| ::oDlg:End() }, "oWnd"      => ::oDlg } )







   TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 10.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_ok_64", "bLClicked" => {|| ::oSender:runReindexa(), ::oDlg:End() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ReindexaView_startDialog( ) ; local Self AS CLASS ReindexaView := QSelf() AS CLASS ReindexaView

   ::oSender:runReindexa()

   ::oDlg:End()

Return ( self )
