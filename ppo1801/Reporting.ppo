#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\terceros\Reporting.prg"
_HB_CLASS Reporting ; function Reporting ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "Reporting", iif( .T., { @Editable() }, { @HBObject() } ), @Reporting() ) ) ;

   _HB_MEMBER { cReportType } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cReportType"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @Reporting_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddInline( "Resource", {|Self | ( ( Self ) ), ( ::oViewNavigator:Resource() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ExecuteReporting(); oClass:AddMethod( "ExecuteReporting", @Reporting_ExecuteReporting(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ExecuteReportingArticulo(); oClass:AddMethod( "ExecuteReportingArticulo", @Reporting_ExecuteReportingArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ExecuteReportingCliente(); oClass:AddMethod( "ExecuteReportingCliente", @Reporting_ExecuteReportingCliente(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS Reporting ;



static FUNCTION Reporting_New( ) ; local Self AS CLASS Reporting := QSelf() AS CLASS Reporting

   ::oViewNavigator        := ViewReporting():New( self )
   ::oViewNavigator:setTitleDocumento( "Galería de informes: Artículos" )

   ::cReportType           := "20"

Return ( self )



static FUNCTION Reporting_ExecuteReporting( hInforme, oDevice ) ; local Self AS CLASS Reporting := QSelf() AS CLASS Reporting

   if ::cReportType == "20"
      ::ExecuteReportingArticulo( hInforme, oDevice )
   end

   if ::cReportType == "21"
      ::ExecuteReportingCliente( hInforme, oDevice )
   end

Return ( self )



static FUNCTION Reporting_ExecuteReportingArticulo( hInforme, oDevice ) ; local Self AS CLASS Reporting := QSelf() AS CLASS Reporting

   local oInf

   oInf                    := TFastVentasArticulos():New()
   oInf:lTabletVersion     := .T.
   oInf:cReportType        := hGet( hInforme, "cReportType" )
   oInf:cReportDirectory   := hGet( hInforme, "cReportDirectory" )
   oInf:cReportName        := hGet( hInforme, "cReportName" )
   oInf:cReportFile        := hGet( hInforme, "cReportFile" )
   oInf:lLoadDivisa()
   oInf:dIniInf            := GetSysDate()
   oInf:dFinInf            := GetSysDate()
   oInf:cAlmacenDefecto    := Application():codigoAlmacen()
   oInf:BuildReportCorrespondences()

   oInf:PlayTablet( , oDevice )

   oInf:end()

Return ( self )



static FUNCTION Reporting_ExecuteReportingCliente( hInforme, oDevice ) ; local Self AS CLASS Reporting := QSelf() AS CLASS Reporting

   local oInf

   oInf                    := TFastVentasClientes():New()
   oInf:lTabletVersion     := .T.
   oInf:cReportType        := hGet( hInforme, "cReportType" )
   oInf:cReportDirectory   := hGet( hInforme, "cReportDirectory" )
   oInf:cReportName        := hGet( hInforme, "cReportName" )
   oInf:cReportFile        := hGet( hInforme, "cReportFile" )
   oInf:dIniInf            := GetSysDate()
   oInf:dFinInf            := GetSysDate()




   oInf:PlayTablet( , oDevice )

   oInf:end()

Return ( self )
