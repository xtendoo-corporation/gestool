#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\Prg\Views\SQLBaseView.prg"
_HB_CLASS SQLBaseView ; function SQLBaseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLBaseView", iif( .F., { }, { @HBObject() } ), @SQLBaseView() ) ) ;

   _HB_MEMBER { oController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oController"}, .F. )

   _HB_MEMBER { oEvents } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oEvents"}, .F. )

   _HB_MEMBER { oTimer } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTimer"}, .F. )

   _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )
   _HB_MEMBER { oFolder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFolder"}, .F. )

   _HB_MEMBER { oMessage } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMessage"}, .F. )
   _HB_MEMBER { cMessage } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cMessage"}, .F. )

   _HB_MEMBER { oBitmap } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBitmap"}, .F. )
   _HB_MEMBER { cBitmap } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBitmap"}, .F. )

   _HB_MEMBER { oBtnOk } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnOk"}, .F. )
   _HB_MEMBER { oBtnOkAndNew } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnOkAndNew"}, .F. )

   _HB_MEMBER { oOfficeBar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oOfficeBar"}, .F. )
   _HB_MEMBER { oOfficeBarFolder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oOfficeBarFolder"}, .F. )




   _HB_MEMBER { hTextMode } ; oClass:AddMultiData(, {   1      => "Añadiendo ", 2        => "Modificando ", 3        => "Visualizando ", 4   => "Duplicando " }, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hTextMode"}, .F. )

   _HB_MEMBER { oExplorerBar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oExplorerBar"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @SQLBaseView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER End(); oClass:AddMethod( "End", @SQLBaseView_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate() ; oClass:AddVirtual( "Activate" )
   _HB_MEMBER Activating() ; oClass:AddVirtual( "Activating" )
   _HB_MEMBER Activated() ; oClass:AddVirtual( "Activated" )



   _HB_MEMBER lblTitle(); oClass:AddInline( "lblTitle", {|Self | ( ( Self ) ), ( iif(  hhaskey( ::hTextMode, ::oController:getMode() ), hget( ::hTextMode, ::oController:getMode() ), "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER getModel(); oClass:AddInline( "getModel", {|Self | ( ( Self ) ), ( ::oController:oModel ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getModelBuffer(); oClass:AddInline( "getModelBuffer", {|Self | ( ( Self ) ), ( ::oController:oModel:hBuffer ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER setGetModelBuffer(); oClass:AddInline( "setGetModelBuffer", {|Self, uValue, cName | ( ( Self ) ), ( iif(  hb_isnil( uValue ), hGet( ::oController:oModel:hBuffer, cName ), hSet( ::oController:oModel:hBuffer, cName, uValue ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getController(); oClass:AddInline( "getController", {|Self | ( ( Self ) ), ( ::oController ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getSenderController(); oClass:AddInline( "getSenderController", {|Self | ( ( Self ) ), ( ::oController:oSenderController ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getComboBoxOrder() ; oClass:AddVirtual( "getComboBoxOrder" )

   _HB_MEMBER redefineExplorerBar( idExplorerBar); oClass:AddMethod( "redefineExplorerBar", @SQLBaseView_redefineExplorerBar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER setEvent(); oClass:AddInline( "setEvent", {|Self, cEvent, bEvent | ( ( Self ) ), ( iif( !empty( ::oEvents ), ::oEvents:set( cEvent, bEvent ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER fireEvent(); oClass:AddInline( "fireEvent", {|Self, cEvent | ( ( Self ) ), ( iif( !empty( ::oEvents ), ::oEvents:fire( cEvent ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER showMessage( cMessage); oClass:AddMethod( "showMessage", @SQLBaseView_showMessage(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER restoreMessage(); oClass:AddMethod( "restoreMessage", @SQLBaseView_restoreMessage(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setMessage(); oClass:AddInline( "setMessage", {|Self, cMessage | ( ( Self ) ), ( iif( empty( ::cMessage ), ::cMessage := cMessage, ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setBitmap(); oClass:AddInline( "setBitmap", {|Self, cBitmap | ( ( Self ) ), ( iif( empty( ::cBitmap ), ::cBitmap := cBitmap, ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER verticalHide( oControl); oClass:AddMethod( "verticalHide", @SQLBaseView_verticalHide(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER verticalShow( oControl); oClass:AddMethod( "verticalShow", @SQLBaseView_verticalShow(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLBaseView ;



static FUNCTION SQLBaseView_New( oController ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   ::oController                                      := oController

   ::oEvents                                          := Events():New()

   ::oTimer                                           := TTimer():New( 4000, {|| ::RestoreMessage() } )

RETURN ( self )



static FUNCTION SQLBaseView_End( ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   if !empty( ::oEvents )
      ::oEvents:End()
      ::oEvents   := nil
   end

   if !empty( ::oTimer )
      ::oTimer:End()
      ::oTimer   := nil
   end

RETURN ( nil )



static FUNCTION SQLBaseView_showMessage( cMessage ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   if !empty( ::oBitmap )
      ::setBitmap( ::oBitmap:cResName )
      ::oBitmap:setBMP( "gc_sign_warning_48" )
   end

   if !empty( ::oMessage )
      ::setMessage( ::oMessage:cCaption )
      ::oMessage:setColor( ( 229 + ( 57 * 256 ) + ( 53 * 65536 ) ), GetSysColor( 15 ) )
      ::oMessage:setText( cMessage )
   end

   if !empty( ::oTimer )
      ::oTimer:Activate()
   end

RETURN ( self )



static FUNCTION SQLBaseView_restoreMessage( ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   if !empty( ::oBitmap )
      ::oBitmap:setBMP( ::cBitmap )
   end

   if !empty( ::oMessage )
      ::oMessage:setColor( ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), GetSysColor( 15 ) )
      ::oMessage:setText( ::cMessage )
   end

   if !empty( ::oTimer )
      ::oTimer:DeActivate()
   end

RETURN ( self )



static FUNCTION SQLBaseView_verticalHide( oControl ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   local nId
   local nHeight

   if !( oControl:lVisible )
      RETURN ( .F. )
   end

   nId            := oControl:nId
   nHeight        := oControl:nHeight + 1

   oControl:Hide()



   aeval( ::oDialog:aControls, {|oControl| if( oControl:nId >= 100 .AND. oControl:nId > nId, oControl:move( oControl:nTop - nHeight, oControl:nLeft, oControl:nWidth, oControl:nHeight ), ) } )

RETURN ( .T. )



static FUNCTION SQLBaseView_verticalShow( oControl ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   local nId
   local nHeight

   if oControl:lVisible
      RETURN ( .F. )
   end

   nId            := oControl:nId
   nHeight        := oControl:nHeight + 1

   oControl:Show()



   aeval( ::oDialog:aControls, {|oControl| if( oControl:nId >= 100 .AND. oControl:nId > nId, oControl:move( oControl:nTop + nHeight, oControl:nLeft, oControl:nWidth, oControl:nHeight ), ) } )

RETURN ( .T. )



static FUNCTION SQLBaseView_redefineExplorerBar( idExplorerBar ) ; local Self AS CLASS SQLBaseView := QSelf() AS CLASS SQLBaseView

   If( idExplorerBar == nil, idExplorerBar := 100, ) ;



   ::oExplorerBar := TExplorerBar():Redefine( idExplorerBar, ::oDialog )

   ::oExplorerBar:nBottomColor  := ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) )
   ::oExplorerBar:nTopColor     := ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) )

RETURN ( self )
