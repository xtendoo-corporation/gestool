#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\Views\SQLComboSelector.prg"
_HB_CLASS ComboSelector ; function ComboSelector ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ComboSelector", iif( .F., { }, { @HBObject() } ), @ComboSelector() ) ) ;

   _HB_MEMBER { oController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oController"}, .F. )

   _HB_MEMBER { idLink } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"idLink"}, .F. )

   _HB_MEMBER { idCombobox } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"idCombobox"}, .F. )

   _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )

   _HB_MEMBER { oUrlLink } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oUrlLink"}, .F. )

   _HB_MEMBER { oComboBox } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oComboBox"}, .F. )
   _HB_MEMBER { cComboBox } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cComboBox"}, .F. )
   _HB_MEMBER { aComboBox } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aComboBox"}, .F. )

   _HB_MEMBER { nColorUrlLink } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nColorUrlLink"}, .F. )

   _HB_MEMBER { bValue } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bValue"}, .F. )

   _HB_MEMBER New( oSender); oClass:AddMethod( "New", @ComboSelector_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate( idLink, idCombobox, oDlg); oClass:AddMethod( "Activate", @ComboSelector_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Bind(); oClass:AddInline( "Bind", {|Self, bValue | ( ( Self ) ), ( ::bValue := bValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER cargaDatos(); oClass:AddMethod( "cargaDatos", @ComboSelector_cargaDatos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ResourceLink(); oClass:AddMethod( "ResourceLink", @ComboSelector_ResourceLink(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER ActionLink(); oClass:AddMethod( "ActionLink", @ComboSelector_ActionLink(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ResourceComboBox(); oClass:AddMethod( "ResourceComboBox", @ComboSelector_ResourceComboBox(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER ChangeComboBox(); oClass:AddMethod( "ChangeComboBox", @ComboSelector_ChangeComboBox(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER moveSelectorView(); oClass:AddMethod( "moveSelectorView", @ComboSelector_moveSelectorView(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Refresh(); oClass:AddMethod( "Refresh", @ComboSelector_Refresh(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ComboSelector ;



static FUNCTION ComboSelector_New( oSender ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   ::oController     := oSender

   ::nColorUrlLink   := nRGB( 51, 102, 187 )

   ::cComboBox       := ""

   ::oController:setEvent( "appended", {|| ::Refresh() } )
   ::oController:setEvent( "edited",   {|| ::Refresh() } )
   ::oController:setEvent( "deleted",  {|| ::Refresh() } )

RETURN ( Self )



static FUNCTION ComboSelector_Activate( idLink, idCombobox, oDlg ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   ::idLink          := idLink

   ::idCombobox      := idCombobox

   ::oDialog         := oDlg

   ::cargaDatos()

   ::ResourceLink()

   ::ResourceComboBox()

RETURN ( self )



static FUNCTION ComboSelector_cargaDatos( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   ::aComboBox       := ::oController:oRepository:getNombres()

   ::cComboBox       := ::oController:oModel:getNombreWhereUuid( eval( ::bValue ) )

RETURN ( Self )



static FUNCTION ComboSelector_ResourceLink( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector



   ::oUrlLink              := TUrlLink():Redefine( ::idLink, ::oDialog, , , , , ::nColorUrlLink, ::nColorUrlLink, ::nColorUrlLink, .T. )
   ::oUrlLink:bAction      := {|| ::ActionLink() }

RETURN ( Self )



static FUNCTION ComboSelector_ResourceComboBox( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   ::oComboBox             := TComboBox():ReDefine( ::idCombobox, { | u | If( PCount()==0, ::cComboBox, ::cComboBox:= u ) }, ::aComboBox, ::oDialog,,, {|| ::ChangeComboBox() } , , , , .F., {|| .T. } )
   ::oComboBox:lIncSearch  := .T.
   ::oComboBox:cToolTip    := "Buscando : " + ( ::oComboBox:cSearchKey )

RETURN ( Self )



static FUNCTION ComboSelector_ActionLink( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   local hResult

   ::oController:oSelectorView:bInitActivate := {|| ::moveSelectorView() }

   hResult                                   := ::oController:ActivateSelectorViewNoCenter()

   if hb_isnil( hResult )
      RETURN ( Self )
   end

   if hHaskey( hResult, "uuid" )
      eval( ::bValue, hGet( hResult, "uuid" ) )
   end

   if hHaskey( hResult, "nombre" )
      ::oComboBox:set( hGet( hResult, "nombre" ) )
   end

RETURN ( Self )



static FUNCTION ComboSelector_moveSelectorView( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   local nRow
   local nCol
   local aRect
   local nScreenWidth   := GetSysMetrics( 0 )

   aRect                := ClientToScreen( ::oComboBox:hWnd )

   nRow                 := aRect[ 1 ] + ::oComboBox:nHeight + 1

   nCol                 := aRect[ 2 ]

   if ( nCol + ::oController:oSelectorView:oDialog:nWidth() ) > nScreenWidth
      nCol              -= ( ::oController:oSelectorView:oDialog:nWidth() - ::oComboBox:nWidth() )
   end

   ::oController:oSelectorView:oDialog:Move( nRow, nCol )

RETURN ( Self )



static FUNCTION ComboSelector_ChangeComboBox( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   eval( ::bValue, ::oController:oRepository:getUuidWhereNombre( ::cComboBox ) )

RETURN ( Self )



static FUNCTION ComboSelector_Refresh( ) ; local Self AS CLASS ComboSelector := QSelf() AS CLASS ComboSelector

   if empty( ::oComboBox )
      RETURN ( Self )
   end

   cursorWait()

   ::oComboBox:setItems( ::oController:oRepository:getNombres() )

   cursorWE()

RETURN ( Self )
