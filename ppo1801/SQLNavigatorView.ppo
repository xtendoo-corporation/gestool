#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 12 ".\Prg\Views\SQLNavigatorView.prg"
_HB_CLASS SQLNavigatorView ; function SQLNavigatorView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLNavigatorView", iif( .T., { @SQLBrowseableView() }, { @HBObject() } ), @SQLNavigatorView() ) ) ;

   _HB_MEMBER { aRect } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aRect"}, .F. )

   _HB_MEMBER { oMdiChild } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMdiChild"}, .F. )

   _HB_MEMBER { oTopWebBar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTopWebBar"}, .F. )

   _HB_MEMBER { oVerticalSplitter } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oVerticalSplitter"}, .F. )
   _HB_MEMBER { oHorizontalSplitter } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oHorizontalSplitter"}, .F. )

   _HB_MEMBER New( oController); oClass:AddMethod( "New", @SQLNavigatorView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER End(); oClass:AddMethod( "End", @SQLNavigatorView_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @SQLNavigatorView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER getComboBoxOrder(); oClass:AddInline( "getComboBoxOrder", {|Self | ( ( Self ) ), ( ::oController:oWindowsBar:oComboBox() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setItemComboBoxOrder(); oClass:AddInline( "setItemComboBoxOrder", {|Self, cItem | ( ( Self ) ), ( ::oController:oWindowsBar:setComboBoxItem( cItem ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setChangeComboBoxOrder(); oClass:AddInline( "setChangeComboBoxOrder", {|Self, bChange | ( ( Self ) ), ( ::oController:oWindowsBar:oComboBox:bChange := bChange ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getGetSearch(); oClass:AddInline( "getGetSearch", {|Self | ( ( Self ) ), ( ::oController:oWindowsBar:oGet() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getWindow(); oClass:AddInline( "getWindow", {|Self | ( ( Self ) ), ( ::oMdiChild ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )





   _HB_MEMBER CreateMDIChild(); oClass:AddInline( "CreateMDIChild", {|Self | ( ( Self ) ), ( ::oMdiChild := TMdiChild():New( ::aRect[ 1 ], ::aRect[ 2 ], ::aRect[ 3 ], ::aRect[ 4 ],,,, oWnd(),,,,,,, .T.,,, "NONE",, .F.,,, ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER ActivateMDIChild(); oClass:AddInline( "ActivateMDIChild", {|Self | ( ( Self ) ), ( ::oMdiChild:Activate(,,,,,,,,,,,,,,,, ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER keyDown( nKey); oClass:AddMethod( "keyDown", @SQLNavigatorView_keyDown(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER CreateTopWebBar(); oClass:AddMethod( "CreateTopWebBar", @SQLNavigatorView_CreateTopWebBar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER CreateSplitters(); oClass:AddMethod( "CreateSplitters", @SQLNavigatorView_CreateSplitters(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLNavigatorView ;



static FUNCTION SQLNavigatorView_New( oController ) ; local Self AS CLASS SQLNavigatorView := QSelf() AS CLASS SQLNavigatorView

   ::Super():New( oController )

   ::aRect              := GetWndRect( GetDeskTopWindow() )

RETURN ( Self )



static FUNCTION SQLNavigatorView_End( ) ; local Self AS CLASS SQLNavigatorView := QSelf() AS CLASS SQLNavigatorView

   if !empty( ::oController )
      ::oController:End()
      ::oController     := nil
   end

   if !empty( ::oTopWebBar )
      ::oTopWebBar:End()
      ::oTopWebBar      := nil
   end

   ::Super():End()

   Self                 := nil

RETURN ( .T. )



static FUNCTION SQLNavigatorView_Activate( ) ; local Self AS CLASS SQLNavigatorView := QSelf() AS CLASS SQLNavigatorView

   ::CreateMDIChild()

   ::CreateTopWebBar()



   ::oMenuTreeView:ActivateMDI( 250, ::aRect[ 3 ] - 76 )

   ::oMenuTreeView:AddAutoButtons()



   ::getBrowseView():ActivateMDI( ::getWindow(), 76 + 1, 250 + 1, ::oMdiChild:nRight - ::oMdiChild:nLeft, ::oMdiChild:nBottom - ::oMdiChild:nTop - 76 - 162 )

   ::getBrowseView():restoreStateFromModel()

   ::getBrowseView():gotoIdFromModel()

   ::getBrowseView():setColumnOrder()



   ::CreateSplitters()

   ::ActivateMDIChild()



   ::oMdiChild:bKeyDown    := {|nKey, nFlags| ::keyDown( nKey, nFlags ) }
   ::oMdiChild:bPostEnd    := {|| ::End() }

RETURN ( Self )



static FUNCTION SQLNavigatorView_CreateTopWebBar( ) ; local Self AS CLASS SQLNavigatorView := QSelf() AS CLASS SQLNavigatorView

   ::oTopWebBar            := TWebBar():New( 0, 250, ::aRect[ 4 ] - 250, 76,,,, ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), , , , , , ::oMdiChild )

   ::oTopWebBar:Say( 0, 1 + 10, ::oController:cTitle )

RETURN ( ::oTopWebBar  )



static FUNCTION SQLNavigatorView_CreateSplitters( ) ; local Self AS CLASS SQLNavigatorView := QSelf() AS CLASS SQLNavigatorView







   ::oHorizontalSplitter   := TSplitter():New( 76, 250, .F., { ::oTopWebBar }, .T., { ::getBrowse() }, .T., {|| 0 }, {|| 0 }, ::oMdiChild,, ::aRect[ 4 ], 1, .T., .T., ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), .F., .F., .F.,, )
   ::oHorizontalSplitter:lStatic := .T.





   ::oVerticalSplitter     := TSplitter():New( 0, 250, .T., { ::oMenuTreeView:oTreeView }, .T., { ::oTopWebBar, ::oHorizontalSplitter, ::getBrowse() }, .T., {|| 0 }, {|| 0 }, ::oMdiChild,, 1, ::aRect[ 3 ] - 76, .T.,.T., , .F., .T., .T. )

RETURN ( Self )



static FUNCTION SQLNavigatorView_keyDown( nKey, nFlags ) ; local Self AS CLASS SQLNavigatorView := QSelf() AS CLASS SQLNavigatorView

   do case
      case nKey == 27
         if ( !empty( ::oMdiChild ), ( ::oMdiChild:End(), ::oMdiChild := nil ), )
      case nKey == 45
         if( !empty( ::oController ), ::oController:Append(), )
      case nKey == 13
         if( !empty( ::oController ), ::oController:EditReturn(), )
      case nKey == 46
         if( !empty( ::oController ), ::oController:Delete( ::getBrowse():aSelected ), )
      case nKey == 116
         ::RefreshRowSet()
   end

RETURN ( 0 )
