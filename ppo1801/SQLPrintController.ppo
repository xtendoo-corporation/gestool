#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\SQLPrintController.prg"
_HB_CLASS SQLPrintController ; function SQLPrintController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLPrintController", iif( .F., { }, { @HBObject() } ), @SQLPrintController() ) ) ;

   _HB_MEMBER { oSenderController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSenderController"}, .F. )

   _HB_MEMBER { cDirectory } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cDirectory"}, .F. )

   _HB_MEMBER { cFileName } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cFileName"}, .F. )

   _HB_MEMBER { oDialogView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialogView"}, .F. )

   _HB_MEMBER { oHashList } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oHashList"}, .F. )

   _HB_MEMBER New( oController); oClass:AddMethod( "New", @SQLPrintController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setDirectory(); oClass:AddInline( "setDirectory", {|Self, cDirectory | ( ( Self ) ), ( ::cDirectory := cDirectory ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getDirectory(); oClass:AddInline( "getDirectory", {|Self | ( ( Self ) ), ( ::cDirectory ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setFileName(); oClass:AddInline( "setFileName", {|Self, cFileName | ( ( Self ) ), ( ::cFileName := cFileName ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getFileName(); oClass:AddInline( "getFileName", {|Self | ( ( Self ) ), ( ::cFileName ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getFullPathFileName(); oClass:AddInline( "getFullPathFileName", {|Self | ( ( Self ) ), ( ::cDirectory + ::cFileName + if( !( ".fr3" $ lower( ::cFileName ) ), ".fr3", "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddInline( "Activate", {|Self | ( ( Self ) ), ( ::buildRowSet(), ::oDialogView:Activate() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER clickingHeader(); oClass:AddInline( "clickingHeader", {|Self, oColumn | ( ( Self ) ), ( ::buildRowSet( oColumn:cSortOrder ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getIds(); oClass:AddInline( "getIds", {|Self | ( ( Self ) ), ( iif( !empty( ::oSenderController ), ::oSenderController:getIds(), {} ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getFilaInicio(); oClass:AddInline( "getFilaInicio", {|Self | ( ( Self ) ), ( iif( !empty( ::oDialogView ), ::oDialogView:nFilaInicio, 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getColumnaInicio(); oClass:AddInline( "getColumnaInicio", {|Self | ( ( Self ) ), ( iif( !empty( ::oDialogView ), ::oDialogView:nColumnaInicio, 0 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER buildRowSet() ; oClass:AddVirtual( "buildRowSet" )

   _HB_MEMBER loadDocuments(); oClass:AddMethod( "loadDocuments", @SQLPrintController_loadDocuments(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER newDocument() ; oClass:AddVirtual( "newDocument" )

   _HB_MEMBER deleteDocument(); oClass:AddMethod( "deleteDocument", @SQLPrintController_deleteDocument(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER showDocument() ; oClass:AddVirtual( "showDocument" )

   _HB_MEMBER editDocument() ; oClass:AddVirtual( "editDocument" )

   _HB_MEMBER end() ; oClass:AddVirtual( "end" )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLPrintController ;



static FUNCTION SQLPrintController_New( oController ) ; local Self AS CLASS SQLPrintController := QSelf() AS CLASS SQLPrintController

   ::oSenderController  := oController

RETURN ( self )



static FUNCTION SQLPrintController_loadDocuments( ) ; local Self AS CLASS SQLPrintController := QSelf() AS CLASS SQLPrintController

   local aFiles         := directory( ::getDirectory() + "*.fr3" )

   if empty( aFiles )
      RETURN ( self )
   end

   ::oDialogView:oListboxFile:setItems( {} )

   aeval( aFiles, {|aFile| ::oDialogView:oListboxFile:add( getFileNoExt( aFile[ 1 ] ) ) } )

   ::oDialogView:oListboxFile:goTop()

RETURN ( self )



static FUNCTION SQLPrintController_deleteDocument( ) ; local Self AS CLASS SQLPrintController := QSelf() AS CLASS SQLPrintController

   local oReport

   ::setFileName( ::oDialogView:cListboxFile )

   if empty( ::getFileName() )
      msgStop( "No hay formato definido" )
      RETURN ( self )
   end

   if !file( ::getFullPathFileName() )
      msgStop( "No existe el formato " + ::getFullPathFileName() )
      RETURN ( self )
   end

   if !msgNoYes( "¿ Desea eliminar el formato " + ::getFullPathFileName() + " ?" )
      RETURN ( self )
   end

   if ferase( ::getFullPathFileName() ) <> 0
      msgStop( "Error al eliminar el formato " + ::getFullPathFileName() )
   end

   ::loadDocuments()

RETURN ( self )
