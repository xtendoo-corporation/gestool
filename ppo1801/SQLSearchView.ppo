#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Views\SQLSearchView.prg"
_HB_CLASS SQLSearchView ; function SQLSearchView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLSearchView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @SQLSearchView() ) ) ;

   _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )

   _HB_MEMBER { oGetSearch } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetSearch"}, .F. )
   _HB_MEMBER { cGetSearch } ; oClass:AddMultiData(, space( 200 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetSearch"}, .F. )

   _HB_MEMBER { oComboBoxOrder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oComboBoxOrder"}, .F. )
   _HB_MEMBER { cComboBoxOrder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cComboBoxOrder"}, .F. )

   _HB_MEMBER New( oController); oClass:AddMethod( "New", @SQLSearchView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @SQLSearchView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Start(); oClass:AddMethod( "Start", @SQLSearchView_Start(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onChangeCombo(); oClass:AddMethod( "onChangeCombo", @SQLSearchView_onChangeCombo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER onChangeSearch(); oClass:AddMethod( "onChangeSearch", @SQLSearchView_onChangeSearch(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getBrowse(); oClass:AddInline( "getBrowse", {|Self | ( ( Self ) ), ( ::oController:oBrowseView ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getGetSearch(); oClass:AddInline( "getGetSearch", {|Self | ( ( Self ) ), ( ::oGetSearch ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getComboBoxOrder(); oClass:AddInline( "getComboBoxOrder", {|Self | ( ( Self ) ), ( ::oComboBoxOrder ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getWindow(); oClass:AddInline( "getWindow", {|Self | ( ( Self ) ), ( ::oDialog ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLSearchView ;



static FUNCTION SQLSearchView_New( oController ) ; local Self AS CLASS SQLSearchView := QSelf() AS CLASS SQLSearchView

   ::oController           := oController

RETURN ( Self )



static FUNCTION SQLSearchView_Activate( ) ; local Self AS CLASS SQLSearchView := QSelf() AS CLASS SQLSearchView

   ::oDialog = TDialog():New(,,,,, "sSearch",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )






      ::oGetSearch := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::cGetSearch, ::cGetSearch:= u ) }, ::oDialog,, "@!",,,,,,, .F.,,, .F., .F.,,,,,, nil, "FIND",, )





      ::oComboBoxOrder := TComboBox():ReDefine( 101, { | u | If( PCount()==0, ::cComboBoxOrder, ::cComboBoxOrder:= u ) }, ::getModel():getHeadersForBrowse(), ::oDialog,,,,,,, .F.,,,,,,, "::oComboBoxOrder",,,,,,, )




      TButton():ReDefine( 510, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .F. )



      ::oDialog:bStart           := {|| ::Start() }

      ::oComboBoxOrder:bChange   := {|| ::onChangeCombo() }

      ::oGetSearch:bChange       := {|| ::onChangeSearch() }

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

RETURN ( nil )



static FUNCTION SQLSearchView_Start( ) ; local Self AS CLASS SQLSearchView := QSelf() AS CLASS SQLSearchView

   local oColumn



   ::oComboBoxOrder:setItems( ::getBrowse():getVisibleColumnsHeaders() )

   oColumn        := ::getBrowse():getColumnOrder()

   if !empty( oColumn )
      ::oComboBoxOrder:set( oColumn:cHeader )
   end

RETURN ( Self )



static FUNCTION SQLSearchView_onChangeCombo( oColumn ) ; local Self AS CLASS SQLSearchView := QSelf() AS CLASS SQLSearchView

   if empty( oColumn )
      oColumn        := ::getBrowse():getColumnByHeader( ::oComboBoxOrder:VarGet() )
   end

   if empty( oColumn )
      RETURN ( Self )
   end

   ::oController:changeModelOrderAndOrientation( oColumn:cSortOrder, oColumn:cOrder )

   ::getBrowse():selectColumnOrder( oColumn )

   ::getBrowse():refreshCurrent()

RETURN ( Self )



static FUNCTION SQLSearchView_onChangeSearch( oColumn ) ; local Self AS CLASS SQLSearchView := QSelf() AS CLASS SQLSearchView

   if empty( oColumn )
      oColumn        := ::getBrowse():getColumnByHeader( ::oComboBoxOrder:VarGet() )
   end

   if empty( oColumn )
      RETURN ( Self )
   end

   ::oController:findInRowSet( alltrim( ::cGetSearch ), oColumn:cSortOrder )

   ::getBrowse():refreshCurrent()

RETURN ( Self )
