#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Views\SQLSelectorView.prg"
_HB_CLASS SQLSelectorView ; function SQLSelectorView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLSelectorView", iif( .T., { @SQLBrowseableView() }, { @HBObject() } ), @SQLSelectorView() ) ) ;

   _HB_MEMBER { oDialog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDialog"}, .F. )

   _HB_MEMBER { oGetSearch } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetSearch"}, .F. )
   _HB_MEMBER { cGetSearch } ; oClass:AddMultiData(, space( 200 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetSearch"}, .F. )

   _HB_MEMBER { oComboBoxOrder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oComboBoxOrder"}, .F. )
   _HB_MEMBER { cComboBoxOrder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cComboBoxOrder"}, .F. )

   _HB_MEMBER { bInitActivate } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bInitActivate"}, .F. )

   _HB_MEMBER { hSelectedBuffer } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hSelectedBuffer"}, .F. )

   _HB_MEMBER End(); oClass:AddMethod( "End", @SQLSelectorView_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate( bInitActivate); oClass:AddMethod( "Activate", @SQLSelectorView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER ActivateMoved(); oClass:AddInline( "ActivateMoved", {|Self | ( ( Self ) ), ( ::Activate( .F. ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER initActivate(); oClass:AddInline( "initActivate", {|Self | ( ( Self ) ), ( iif( hb_isblock( ::bInitActivate ), eval( ::bInitActivate, Self ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER isActive(); oClass:AddInline( "isActive", {|Self | ( ( Self ) ), ( ::oDialog <> nil ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Select(); oClass:AddMethod( "Select", @SQLSelectorView_Select(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Start(); oClass:AddMethod( "Start", @SQLSelectorView_Start(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getGetSearch(); oClass:AddInline( "getGetSearch", {|Self | ( ( Self ) ), ( ::oGetSearch ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getComboBoxOrder(); oClass:AddInline( "getComboBoxOrder", {|Self | ( ( Self ) ), ( ::oComboBoxOrder ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getWindow(); oClass:AddInline( "getWindow", {|Self | ( ( Self ) ), ( ::oDialog ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getSelectedBuffer(); oClass:AddInline( "getSelectedBuffer", {|Self | ( ( Self ) ), ( ::hSelectedBuffer ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLSelectorView ;



static FUNCTION SQLSelectorView_Activate( lCenter ) ; local Self AS CLASS SQLSelectorView := QSelf() AS CLASS SQLSelectorView

   If( lCenter == nil, lCenter := .T., ) ;



   ::oDialog = TDialog():New(,,,, ::oController:getTitle(), "SELECTOR_VIEW",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )






      ::oGetSearch := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::cGetSearch, ::cGetSearch:= u ) }, ::oDialog,, "@!",,,,,,, .F.,,, .F., .F.,,,,,, nil, "FIND",, )




      ::oComboBoxOrder := TComboBox():ReDefine( 110, { | u | If( PCount()==0, ::cComboBoxOrder, ::cComboBoxOrder:= u ) },, ::oDialog,,,,,,, .F.,,,,,,, "::oComboBoxOrder",,,,,,, )

      ::oComboBoxOrder:bChange      := {|| ::onChangeCombo() }



      ::oMenuTreeView:ActivateDialog( ::oDialog, 120 )



      ::getBrowseView():ActivateDialog( ::oDialog, 130 )

      ::getBrowseView():setLDblClick( {|| ::Select() } )

      ::getBrowseView():restoreStateFromModel()

      ::getBrowseView():gotoIdFromModel()

      ::getBrowseView():setColumnOrder( ::getModel():getOrderBy(), ::getModel():getOrientation() )



      ::oDialog:bStart              := {|| ::Start() }

      ::getGetSearch():bChange      := {|| ::onChangeSearch() }

   ::oDialog:Activate( , , , lCenter, , .T., {|| ::initActivate() } )

RETURN ( ::getSelectedBuffer() )



static FUNCTION SQLSelectorView_End( ) ; local Self AS CLASS SQLSelectorView := QSelf() AS CLASS SQLSelectorView

   if !empty( ::oMenuTreeView )
      ::oMenuTreeView:End()
   end

   if !empty( ::oDialog )
      ::oDialog:End()
   end

   ::oDialog            := nil

RETURN ( nil )



static FUNCTION SQLSelectorView_Select( ) ; local Self AS CLASS SQLSelectorView := QSelf() AS CLASS SQLSelectorView

   ::hSelectedBuffer    := ::getModel():loadCurrentBuffer( ::getBrowseView():getRowSet():fieldGet( "id" ) )

   ::oDialog:End( 1 )

RETURN ( nil )



static FUNCTION SQLSelectorView_Start( ) ; local Self AS CLASS SQLSelectorView := QSelf() AS CLASS SQLSelectorView

   ::hSelectedBuffer    := nil

   ::oMenuTreeView:Default()

   ::oMenuTreeView:AddSelectorButtons()

   ::oComboBoxOrder:SetItems( ::getBrowseView():getColumnsHeaders() )

   ::oComboBoxOrder:Set( ::getBrowseView():getColumnOrderHeader() )

   ::oGetSearch:setFocus()

RETURN ( Self )
