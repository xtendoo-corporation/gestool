#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\SQLShellView.prg"
_HB_CLASS SQLShellView ; function SQLShellView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLShellView", iif( .F., { }, { @HBObject() } ), @SQLShellView() ) ) ;

   _HB_MEMBER { oShell } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oShell"}, .F. )

   _HB_MEMBER { oController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oController"}, .F. )




   _HB_MEMBER { hTextMode } ; oClass:AddMultiData(, {   1      => "Añadiendo ", 2        => "Modificando ", 3        => "Visualizando ", 4   => "Duplicando " }, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hTextMode"}, .F. )

   _HB_MEMBER { cBrowseState } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBrowseState"}, .F. )

   _HB_MEMBER { cImageName } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cImageName"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @SQLShellView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @SQLShellView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lblTitle(); oClass:AddInline( "lblTitle", {|Self | ( ( Self ) ), ( if( hhaskey( ::hTextMode, ::oController:getMode() ), hget( ::hTextMode, ::oController:getMode() ), "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER AutoButtons(); oClass:AddInline( "AutoButtons", {|Self | ( ( Self ) ), ( ::GeneralButtons(), ::EndButton() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER GeneralButtons(); oClass:AddMethod( "GeneralButtons", @SQLShellView_GeneralButtons(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER insertAfterAppendButton() ; oClass:AddVirtual( "insertAfterAppendButton" )
      _HB_MEMBER EndButton(); oClass:AddMethod( "EndButton", @SQLShellView_EndButton(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setBrowseState(); oClass:AddInline( "setBrowseState", {|Self, cBrowseState | ( ( Self ) ), ( ::cBrowseState := cBrowseState ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getBrowseState(); oClass:AddInline( "getBrowseState", {|Self | ( ( Self ) ), ( ::cBrowseState ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER changeFind( oFind); oClass:AddMethod( "changeFind", @SQLShellView_changeFind(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER changeCombo( oCombobox); oClass:AddMethod( "changeCombo", @SQLShellView_changeCombo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLShellView ;



static FUNCTION SQLShellView_New( oController ) ; local Self AS CLASS SQLShellView := QSelf() AS CLASS SQLShellView

   ::oController           := oController



   msgalert( ::oShell:oBrw:classname(), "TShell New" )

RETURN ( Self )



static FUNCTION SQLShellView_Activate( ) ; local Self AS CLASS SQLShellView := QSelf() AS CLASS SQLShellView

   disableAcceso()

   msgalert( ::oShell:oBrw:classname(), "SQLShellView Activate" )

   msgalert( hb_valtoexp( ::oShell:classname() ), "SQLShellView Activate" )

   ::oController:generateBrowseColumns( ::oShell:getXBrowse(), ::oShell:getCombobox() )

   ::AutoButtons()

   ::oShell:setDoubleClickInData(   {|| ::oController:Edit() } )
   ::oShell:setComboBoxChange(      {|| ::changeCombo( ::oShell:getCombobox() ) } )
   ::oShell:setValid(               {|| ::oController:saveHistory( "_shell", ::oShell:getBrowse() ) } )
   ::oShell:setEnd(                 {|| ::oController:endModel() } )

   ::oShell:Activate()

   enableAcceso()

Return ( Self )



static FUNCTION SQLShellView_GeneralButtons( ) ; local Self AS CLASS SQLShellView := QSelf() AS CLASS SQLShellView





   ::oShell:NewAt( "BUS",,, {||( ::oShell:SearchSetFocus() )}, "(B)uscar", "B",,,,, .F. )

   ::oShell:AddSeaBar()







   ::oShell:NewAt( "NEW",,, {||( ::oController:Append() )}, "(A)ñadir", "A",,, 2,, .F. )

   ::insertAfterAppendButton()







   ::oShell:NewAt( "DUP",,, {||( ::oController:Duplicate() )}, "(D)uplicar", "D",,, 2,, .F. )






   ::oShell:NewAt( "EDIT",,, {||( ::oController:Edit() )}, "(M)odificar", "M",,, 4,, .F. )







   ::oShell:NewAt( "ZOOM",,, {||( ::oController:Zoom() )}, "(Z)oom", "Z",,, 8,, .F. )







   ::oShell:NewAt( "DEL",,, {||( ::oController:Delete() )}, "(E)liminar", "E",,, 16,, .F. )

RETURN ( Self )



static FUNCTION SQLShellView_EndButton( ) ; local Self AS CLASS SQLShellView := QSelf() AS CLASS SQLShellView





   ::oShell:NewAt( "END",,, {||( ::oShell:end() )}, "(S)alir", "S",,,,, .F. )

RETURN ( Self )



static FUNCTION SQLShellView_changeFind( oFind ) ; local Self AS CLASS SQLShellView := QSelf() AS CLASS SQLShellView

   local lFind := ::oController:findGet( oFind )

   if lFind
      oFind:SetColor( ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ) )
   else
      oFind:SetColor( ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), ( 255 + ( 102 * 256 ) + ( 102 * 65536 ) ) )
   end

   ::oShell:refreshCurrent()

RETURN ( lFind )



static FUNCTION SQLShellView_changeCombo( oCombobox ) ; local Self AS CLASS SQLShellView := QSelf() AS CLASS SQLShellView

   local oColumn

   if empty( oCombobox )
      RETURN ( Self )
   end

   oColumn           := ::oShell:getColumnByHeader( oCombobox:VarGet() )

   if !empty( oColumn )
      ::oController:clickOnHeader( oColumn, oCombobox )
   end

RETURN ( Self )
