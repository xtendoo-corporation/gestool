#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Models\SQLUsuarioFavoritosModel.prg"
_HB_CLASS SQLUsuarioFavoritosModel ; function SQLUsuarioFavoritosModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLUsuarioFavoritosModel", iif( .T., { @SQLBaseModel() }, { @HBObject() } ), @SQLUsuarioFavoritosModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "usuario_favoritos", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER { cConstraints } ; oClass:AddMultiData(, "PRIMARY KEY ( id ), UNIQUE KEY ( usuario_uuid, favorito )", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cConstraints"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLUsuarioFavoritosModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER set( cUsuarioUuid, cFavorito, lVisible); oClass:AddMethod( "set", @SQLUsuarioFavoritosModel_set(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER get( cUsuarioUuid, cFavorito); oClass:AddMethod( "get", @SQLUsuarioFavoritosModel_get(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getVisible( cUsuarioUuid, cFavorito, lDefault); oClass:AddMethod( "getVisible", @SQLUsuarioFavoritosModel_getVisible(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLUsuarioFavoritosModel ;



static FUNCTION SQLUsuarioFavoritosModel_getColumns( ) ; local Self AS CLASS SQLUsuarioFavoritosModel := QSelf() AS CLASS SQLUsuarioFavoritosModel


   hset( ::hColumns, "id",             {  "create"    => "INTEGER AUTO_INCREMENT"                  , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",           {  "create"    => "VARCHAR( 40 ) NOT NULL"                  , "default"   => {|| win_uuidcreatestring() } }            )


   hset( ::hColumns, "usuario_uuid",   {  "create"    => "VARCHAR( 40 ) NOT NULL"                  , "default"   => {|| space( 40 ) } }                       )


   hset( ::hColumns, "favorito",       {  "create"    => "VARCHAR( 100 )"                          , "default"   => {|| space( 100 ) } }                      )


   hset( ::hColumns, "visible",        {  "create"    => "TINYINT ( 1 )"                           , "default"   => {|| "0" } }                               )

RETURN ( ::hColumns )



static FUNCTION SQLUsuarioFavoritosModel_set( cUsuarioUuid, cFavorito, lVisible ) ; local Self AS CLASS SQLUsuarioFavoritosModel := QSelf() AS CLASS SQLUsuarioFavoritosModel

   local hBuffer  := ::loadBlankBuffer()

   hset( hBuffer, "usuario_uuid",   cUsuarioUuid )
   hset( hBuffer, "favorito",       cFavorito )
   hset( hBuffer, "visible",        lVisible )

RETURN ( ::insertOnDuplicate( hBuffer ) )



static FUNCTION SQLUsuarioFavoritosModel_get( cUsuarioUuid, cFavorito ) ; local Self AS CLASS SQLUsuarioFavoritosModel := QSelf() AS CLASS SQLUsuarioFavoritosModel

   local cSql     := "SELECT * FROM " + ::cTableName + " "
   cSql           +=    "WHERE usuario_uuid = " + quoted( cUsuarioUuid ) + " "
   cSql           +=    "AND favorito = " + quoted( cFavorito ) + " "

RETURN ( getSQLDataBase():getValue( cSql ) )



static FUNCTION SQLUsuarioFavoritosModel_getVisible( cUsuarioUuid, cFavorito, nDefault ) ; local Self AS CLASS SQLUsuarioFavoritosModel := QSelf() AS CLASS SQLUsuarioFavoritosModel

   local nVisible
   local cSql     := "SELECT visible FROM " + ::cTableName + " "
   cSql           +=    "WHERE usuario_uuid = " + quoted( cUsuarioUuid ) + " "
   cSql           +=    "AND favorito = " + quoted( cFavorito ) + " "

   nVisible       := getSQLDataBase():getValue( cSql )

   if hb_isnil( nVisible )
      RETURN ( nDefault )
   end

RETURN ( nVisible )
