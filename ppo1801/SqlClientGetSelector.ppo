#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\Views\SqlClientGetSelector.prg"
_HB_CLASS ClientGetSelector ; function ClientGetSelector ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ClientGetSelector", iif( .T., { @GetSelector() }, { @HBObject() } ), @ClientGetSelector() ) ) ;

   _HB_MEMBER { oGetNif } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetNif"}, .F. )
   _HB_MEMBER { cGetNif } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetNif"}, .F. )

   _HB_MEMBER { oGetDireccion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetDireccion"}, .F. )
   _HB_MEMBER { cGetDireccion } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetDireccion"}, .F. )

   _HB_MEMBER { oGetCodigoPostal } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCodigoPostal"}, .F. )
   _HB_MEMBER { cGetCodigoPostal } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCodigoPostal"}, .F. )

   _HB_MEMBER { oGetPoblacion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetPoblacion"}, .F. )
   _HB_MEMBER { cGetPoblacion } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetPoblacion"}, .F. )

   _HB_MEMBER { oGetProvincia } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetProvincia"}, .F. )
   _HB_MEMBER { cGetProvincia } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetProvincia"}, .F. )

   _HB_MEMBER { oGetTelefono } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetTelefono"}, .F. )
   _HB_MEMBER { cGetTelefono } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetTelefono"}, .F. )

   _HB_MEMBER Build( hBuilder); oClass:AddMethod( "Build", @ClientGetSelector_Build(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @ClientGetSelector_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getFields(); oClass:AddInline( "getFields", {|Self | ( ( Self ) ), ( ::uFields   := ::oController:oModel:getClienteDireccionPrincipal( ::getKey(), ::oGet:varGet() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER cleanHelpText(); oClass:AddMethod( "cleanHelpText", @ClientGetSelector_cleanHelpText(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setHelpText( value); oClass:AddMethod( "setHelpText", @ClientGetSelector_setHelpText(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ClientGetSelector ;



static FUNCTION ClientGetSelector_Build( hBuilder ) ; local Self AS CLASS ClientGetSelector := QSelf() AS CLASS ClientGetSelector

   local idGet          := if( hhaskey( hBuilder, "idGet" ),            hBuilder[ "idGet" ],          nil )
   local idText         := if( hhaskey( hBuilder, "idText" ),           hBuilder[ "idText" ],         nil )
   local idSay          := if( hhaskey( hBuilder, "idSay" ),            hBuilder[ "idSay"],           nil )
   local idNif          := if( hhaskey( hBuilder, "idNif" ),            hBuilder[ "idNif" ],          nil )
   local idDireccion    := if( hhaskey( hBuilder, "idDireccion" ),      hBuilder[ "idDireccion" ],    nil )
   local idCodigoPostal := if( hhaskey( hBuilder, "idCodigoPostal" ),   hBuilder[ "idCodigoPostal" ], nil )
   local idPoblacion    := if( hhaskey( hBuilder, "idPoblacion" ),      hBuilder[ "idPoblacion" ],    nil )
   local idProvincia    := if( hhaskey( hBuilder, "idProvincia" ),      hBuilder[ "idProvincia" ],    nil )
   local idTelefono     := if( hhaskey( hBuilder, "idTelefono" ),       hBuilder[ "idTelefono" ],     nil )

   local oDlg           := if( hhaskey( hBuilder, "oDialog" ),          hBuilder[ "oDialog" ],        nil )

RETURN ( ::Activate( idGet, idText, idSay, idNif, idDireccion, idCodigoPostal, idPoblacion, idProvincia, idTelefono, oDlg ) )



static FUNCTION ClientGetSelector_Activate( idGet, idText, idSay, idNif, idDireccion, idCodigoPostal, idPoblacion, idProvincia, idTelefono, oDlg ) ; local Self AS CLASS ClientGetSelector := QSelf() AS CLASS ClientGetSelector

   ::Super:Activate( idGet, idText, oDlg, idSay )

   if !empty( idNif )





      ::oGetNif := TGetHlp():ReDefine( idNif, { | u | If( PCount()==0, ::cGetNif, ::cGetNif:= u ) }, oDlg,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )

   end

   if !empty( idDireccion )





      ::oGetDireccion := TGetHlp():ReDefine( idDireccion, { | u | If( PCount()==0, ::cGetDireccion, ::cGetDireccion:= u ) }, oDlg,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )

   end

   if !empty( idCodigoPostal )





      ::oGetCodigoPostal := TGetHlp():ReDefine( idCodigoPostal, { | u | If( PCount()==0, ::cGetCodigoPostal, ::cGetCodigoPostal:= u ) }, oDlg,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )

   end

   if !empty( idPoblacion )





      ::oGetPoblacion := TGetHlp():ReDefine( idPoblacion, { | u | If( PCount()==0, ::cGetPoblacion, ::cGetPoblacion:= u ) }, oDlg,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )

   end

   if !empty( idProvincia )





      ::oGetProvincia := TGetHlp():ReDefine( idProvincia, { | u | If( PCount()==0, ::cGetProvincia, ::cGetProvincia:= u ) }, oDlg,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )

   end

   if !empty( idTelefono )





      ::oGetTelefono := TGetHlp():ReDefine( idTelefono, { | u | If( PCount()==0, ::cGetTelefono, ::cGetTelefono:= u ) }, oDlg,,,,,,,,, .F., {||        ( .F. )},, .F., .F.,,,,,, nil,,, )

   end

RETURN ( ::oGet )



static FUNCTION ClientGetSelector_cleanHelpText( ) ; local Self AS CLASS ClientGetSelector := QSelf() AS CLASS ClientGetSelector

   ::Super():cleanHelpText()

   if( !empty( ::oGetNif ),            ::oGetNif:cText( "" ), )

   if( !empty( ::oGetDireccion ),      ::oGetDireccion:cText( "" ), )

   if( !empty( ::oGetCodigoPostal ),   ::oGetCodigoPostal:cText( "" ), )

   if( !empty( ::oGetPoblacion ),      ::oGetPoblacion:cText( "" ), )

   if( !empty( ::oGetProvincia ),      ::oGetProvincia:cText( "" ), )

   if( !empty( ::oGetTelefono ),       ::oGetTelefono:cText( "" ), )

RETURN ( nil )



static FUNCTION ClientGetSelector_setHelpText( value ) ; local Self AS CLASS ClientGetSelector := QSelf() AS CLASS ClientGetSelector

   if !( hb_ishash( value ) )
      RETURN ( nil )
   end

   ::Super():setHelpText( value[ "nombre" ] )

   if( !empty( ::oGetNif ),            ::oGetNif:cText( value[ "dni" ] ), )

   if( !empty( ::oGetDireccion ),      ::oGetDireccion:cText( value[ "direccion" ] ), )

   if( !empty( ::oGetCodigoPostal ),   ::oGetCodigoPostal:cText( value[ "codigo_postal" ] ), )

   if( !empty( ::oGetPoblacion ),      ::oGetPoblacion:cText( value[ "poblacion" ] ), )

   if( !empty( ::oGetProvincia ),      ::oGetProvincia:cText( value[ "provincia" ] ), )

   if( !empty( ::oGetTelefono ),       ::oGetTelefono:cText( value[ "telefono" ] ), )

RETURN ( nil )
