#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\Models\SqlFacturasClientesModel.prg"
_HB_CLASS SQLFacturasClientesModel ; function SQLFacturasClientesModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLFacturasClientesModel", iif( .T., { @SQLCompanyModel() }, { @HBObject() } ), @SQLFacturasClientesModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "facturas_clientes", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLFacturasClientesModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLFacturasClientesModel ;



static FUNCTION SQLFacturasClientesModel_getColumns( ) ; local Self AS CLASS SQLFacturasClientesModel := QSelf() AS CLASS SQLFacturasClientesModel


   hset( ::hColumns, "id",                            {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"        , "default"   => {|| 0 } }                              )


   hset( ::hColumns, "uuid",                          {  "create"    => "VARCHAR( 40 ) NOT NULL UNIQUE"        , "default"   => {|| win_uuidcreatestring() } }         )

   ::getEmpresaColumns()


   hset( ::hColumns, "delegacion_uuid",               {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| Company():delegacionUuid() } }    )


   hset( ::hColumns, "serie",                         {  "create"    => "VARCHAR( 20 )"                        , "default"   => {|| space( 20 ) } }                    )


   hset( ::hColumns, "numero",                        {  "create"    => "INT UNSIGNED"                         , "default"   => {|| 0 } }                              )


   hset( ::hColumns, "fecha",                         {  "create"    => "DATE"                                 , "default"   => {|| date() } }                         )


   hset( ::hColumns, "fecha_valor_stock",             {  "create"    => "DATETIME DEFAULT CURRENT_TIMESTAMP"   , "default"   => {|| hb_datetime() } }                  )


   hset( ::hColumns, "cliente_uuid",                  {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )


   hset( ::hColumns, "direccion_principal_uuid",      {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )


   hset( ::hColumns, "forma_pago_uuid",               {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )


   hset( ::hColumns, "almacen_uuid",                  {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )


   hset( ::hColumns, "agente_uuid",                   {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )


   hset( ::hColumns, "ruta_uuid",                     {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )


   hset( ::hColumns, "transportista_uuid",            {  "create"    => "VARCHAR( 40 )"                        , "default"   => {|| space( 40 ) } }                    )

RETURN ( ::hColumns )
