#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\TComentarios.prg"
_HB_CLASS TComentarios ; function TComentarios ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TComentarios", iif( .T., { @TMasDet() }, { @HBObject() } ), @TComentarios() ) ) ;

   _HB_MEMBER { cMru } ; oClass:AddMultiData(, "gc_message_16", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cMru"}, .F. )

   _HB_MEMBER { cBitmap } ; oClass:AddMultiData(, ( 104 + ( 0 * 256 ) + ( 63 * 65536 ) ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBitmap"}, .F. )

   _HB_MEMBER { oDetComentarios } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDetComentarios"}, .F. )

   _HB_MEMBER { Codigo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Codigo"}, .F. )

   _HB_MEMBER OpenFiles( lExclusive); oClass:AddMethod( "OpenFiles", @TComentarios_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TComentarios_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TComentarios_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenService( lExclusive); oClass:AddMethod( "OpenService", @TComentarios_OpenService(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER CloseService(); oClass:AddMethod( "CloseService", @TComentarios_CloseService(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( nMode); oClass:AddMethod( "Resource", @TComentarios_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lPreSave( oNom, oSec, nMode); oClass:AddMethod( "lPreSave", @TComentarios_lPreSave(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DelRecComentario( oBrw); oClass:AddMethod( "DelRecComentario", @TComentarios_DelRecComentario(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Reindexa(); oClass:AddMethod( "Reindexa", @TComentarios_Reindexa(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TComentarios ;



static FUNCTION TComentarios_OpenFiles( lExclusive, cPath ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   local lOpen          := .T.
   local oError
   local oBlock

   If( cPath == nil, cPath := ::cPath, ) ;
   If( lExclusive == nil, lExclusive := .F., ) ;

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !lExclusive )

      ::oDetComentarios    := TDetComentarios():New( ::cPath, cDriver(), Self )
      ::AddDetail( ::oDetComentarios )

      ::OpenDetails()

      ::bFirstKey          := {|| ::oDbf:cCodigo }

   RECOVER USING oError

      lOpen             := .F.

      ::CloseFiles()

      msgStop( ErrorMessage( oError ), "Imposible abrir las bases de datos de comentarios" )

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TComentarios_CloseFiles( ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   ::CloseDetails()

   if !Empty( ::oDbf )
      ::oDbf:end()
   end

   ::oDbf         := nil

RETURN .T.



static FUNCTION TComentarios_OpenService( lExclusive, cPath ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   local lOpen          := .T.
   local oError
   local oBlock

   If( cPath == nil, cPath := ::cPath, ) ;
   If( lExclusive == nil, lExclusive := .F., ) ;

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !lExclusive )

   RECOVER USING oError

      lOpen             := .F.

      ::CloseFiles()

      msgStop( ErrorMessage( oError ), "Imposible abrir las bases de datos de comentarios" )

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TComentarios_CloseService( ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   if !Empty( ::oDbf )
      ::oDbf:end()
   end

   ::oDbf         := nil

RETURN .T.



static FUNCTION TComentarios_DefineFiles( cPath, cDriver ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   If( cPath == nil, cPath := ::cPath, ) ;
   If( cDriver == nil, cDriver := cDriver(), ) ;

   ::oDbf := DbfServer( "ComentariosT.Dbf", "Comentario" ):New( "ComentariosT.Dbf", "Coment", ( cDriver ), "Comentarios", ( cPath ) )

      ::oDbf:AddField( "cCodigo", "C", 3, 0,,,,, "Código", .F., 60, .F., {} )
      ::oDbf:AddField( "cDescri", "C", 200, 0,,,,, "Descripción", .F., 300, .F., {} )

      ::oDbf:AddIndex( "cCodigo", "ComentariosT.Cdx", "cCodigo",,, .F., .F., "Código",,, .T., .F. )
      ::oDbf:AddIndex( "cDescri", "ComentariosT.Cdx", "cDescri",,, .F., .F., "Descripción",,, .T., .F. )



RETURN ( ::oDbf )



static FUNCTION TComentarios_Resource( nMode ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

    local oDlg
   local oGet
   local oNom
   local oBrw

   oDlg = TDialog():New(,,,,, "Comentarios",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )






      oGet := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oDbf:cCodigo, ::oDbf:cCodigo:= u ) }, oDlg,, "@!", {||    ( RjustObj( oGet, "0" ), .T. )},,,,,, .F., {||     ( nMode == 1 )},, .F., .F.,,,,,, nil,,, )




      oNom := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oDbf:cDescri, ::oDbf:cDescri:= u ) }, oDlg,,,,,,,,, .F., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )









        TButton():ReDefine( 500, {||( ::oDetComentarios:Append( oBrw ) )}, oDlg,,, .F., {||     ( nMode <> 3 )},,, .F. )





        TButton():ReDefine( 501, {||( ::oDetComentarios:Edit( oBrw ) )}, oDlg,,, .F., {||     ( nMode <> 3 )},,, .F. )




        TButton():ReDefine( 502, {||( ::oDetComentarios:Zoom() )}, oDlg,,, .F.,,,, .F. )





      TButton():ReDefine( 503, {||( ::DelRecComentario( oBrw ) )}, oDlg,,, .F., {||     ( nMode <> 3 )},,, .F. )

      oBrw                 := IXBrowse():New( oDlg )

      oBrw:bClrSel         := {|| { 0, ( 229 + ( 229 * 256 ) + ( 229 * 65536 ) ) } }
      oBrw:bClrSelFocus    := {|| { 0, ( 167 + ( 205 * 256 ) + ( 240 * 65536 ) ) } }

      oBrw:nMarqueeStyle   := 5

      oBrw:bLDblClick      := { || ::oDetComentarios:Edit( oBrw ) }

      ::oDetComentarios:oDbfVir:SetBrowse( oBrw )

      with object ( oBrw:AddCol() )
         :cHeader          := "Descripción"
         :bEditValue       := {|| ::oDetComentarios:oDbfVir:cDescri }
      end

      oBrw:CreateFromResource( 400 )





      TButton():ReDefine( 1, {||( ::lPreSave( oGet, oNom, oDlg, nMode ) )}, oDlg,,, .F., {||         ( nMode <> 3 )},,, .F. )





        TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .T. )

   if nMode <> 3
      oDlg:AddFastKey( 113, {|| ::oDetComentarios:Append( oBrw ) } )
      oDlg:AddFastKey( 114, {|| ::oDetComentarios:Edit( oBrw ) } )
      oDlg:AddFastKey( 115, {|| ::oDetComentarios:Del( oBrw ) } )
      oDlg:AddFastKey( 116, {|| ::lPreSave( oGet, oNom, oDlg, nMode ) } )
   end

   oDlg:bStart := { || oGet:SetFocus() }

    oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN ( oDlg:nResult == 1 )



static FUNCTION TComentarios_lPreSave( oGet, oNom, oDlg, nMode ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   if ( nMode == 1 .OR. nMode == 4 )

      oGet:lValid()

      if ::oDbf:SeekInOrd( ::oDbf:cCodigo, "cCodigo" )
         MsgStop( "Código ya existe " + Rtrim( ::oDbf:cCodigo ) )
         return .F.
      end

      if Empty( ::oDbf:cCodigo )
         MsgStop( "El código del comentario no puede estar vacío." )
         oGet:SetFocus()
         Return .F.
      end

   end

   if Empty( ::oDbf:cDescri )
      MsgStop( "La descripción del comentario no puede estar vacía." )
      oNom:SetFocus()
      Return .F.
   end

Return ( oDlg:End( 1 ) )



static FUNCTION TComentarios_DelRecComentario( oBrw ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios

   local lDefComentario := .F.

   if ::oDetComentarios:oDbfVir:Recno() == 0
      RETURN ( Self )
   end

   if RolesModel():getRolNoConfirmacionEliminacion( Auth():rolUuid() ) .OR. ApoloMsgNoYes("¿ Desea eliminar definitivamente este registro ?", "Confirme supersión" )
      ::oDetComentarios:oDbfVir:Delete()
   end

   oBrw:Refresh()

RETURN ( Self )



static FUNCTION TComentarios_Reindexa( ) ; local Self AS CLASS TComentarios := QSelf() AS CLASS TComentarios





   if Empty( ::oDbf )
      ::oDbf   := ::DefineFiles()
   end

   ::oDbf:IdxFDel()

   if ::OpenFiles( .T. )
      ::oDbf:Pack()
   end

   ::CloseFiles()

RETURN ( Self )
