#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 10 ".\Prg\Comercio\TComercioId.prg"
_HB_CLASS TPrestaShopId ; function TPrestaShopId ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TPrestaShopId", iif( .T., { @TMant() }, { @HBObject() } ), @TPrestaShopId() ) ) ;

   _HB_MEMBER { lOpenFiles } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lOpenFiles"}, .F. )

   _HB_MEMBER { TComercio } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"TComercio"}, .F. )

   _HB_MEMBER { cName } ; oClass:AddMultiData(, "PrestaShopId", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cName"}, .F. )

   _HB_MEMBER New( TComercio) AS CLASS TPrestaShopId; oClass:AddMethod( "New", @TPrestaShopId_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TPrestaShopId_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValue( cTipoDocumento, cClave, cWeb, idWeb); oClass:AddMethod( "setValue", @TPrestaShopId_setValue(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValue( cTipoDocumento, cClave, cWeb, defaultValue); oClass:AddMethod( "getValue", @TPrestaShopId_getValue(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValue( cTipoDocumento, cClave, cWeb); oClass:AddMethod( "deleteValue", @TPrestaShopId_deleteValue(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValues( cTipoDocumento, cWeb); oClass:AddMethod( "deleteDocumentValues", @TPrestaShopId_deleteDocumentValues(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER isValidParameters( cTipoDocumento, cClave, cWeb, idWeb); oClass:AddMethod( "isValidParameters", @TPrestaShopId_isValidParameters(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER isSeekValues( cTipoDocumento, cClave, cWeb); oClass:AddMethod( "isSeekValues", @TPrestaShopId_isSeekValues(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getValuegestool( cTipoDocumento, idWeb, cWeb, defaultValue); oClass:AddMethod( "getValuegestool", @TPrestaShopId_getValuegestool(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setValuegestool( cTipoDocumento, cClave, cWeb, idWeb); oClass:AddMethod( "setValuegestool", @TPrestaShopId_setValuegestool(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER isSeekgestool( cTipoDocumento, idWeb, cWeb); oClass:AddMethod( "isSeekgestool", @TPrestaShopId_isSeekgestool(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueProduct(); oClass:AddInline( "setValueProduct", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "01", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueProduct(); oClass:AddInline( "getValueProduct", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "01", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getgestoolProduct(); oClass:AddInline( "getgestoolProduct", {|Self, idWeb, cWeb, defaultValue | ( ( Self ) ), ::getValuegestool( "01", idWeb, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesProduct(); oClass:AddInline( "deleteDocumentValuesProduct", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "01", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueTax(); oClass:AddInline( "setValueTax", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "03", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueTax(); oClass:AddInline( "getValueTax", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "03", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesTax(); oClass:AddInline( "deleteDocumentValuesTax", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "03", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueTaxRuleGroup(); oClass:AddInline( "setValueTaxRuleGroup", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "04", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueTaxRuleGroup(); oClass:AddInline( "getValueTaxRuleGroup", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "04", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesTaxRuleGroup(); oClass:AddInline( "deleteDocumentValuesTaxRuleGroup", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "04", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueManufacturer(); oClass:AddInline( "setValueManufacturer", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "05", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueManufacturer(); oClass:AddInline( "getValueManufacturer", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "05", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesManufacturer(); oClass:AddInline( "deleteDocumentValuesManufacturer", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "05", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueCategory(); oClass:AddInline( "setValueCategory", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "06", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueCategory(); oClass:AddInline( "getValueCategory", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "06", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueCategory(); oClass:AddInline( "deleteValueCategory", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "06", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesCategory(); oClass:AddInline( "deleteDocumentValuesCategory", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "06", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueAttributeGroup(); oClass:AddInline( "setValueAttributeGroup", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "07", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueAttributeGroup(); oClass:AddInline( "getValueAttributeGroup", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "07", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueAttributeGroup(); oClass:AddInline( "deleteValueAttributeGroup", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "07", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesAttributeGroup(); oClass:AddInline( "deleteDocumentValuesAttributeGroup", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "07", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueAttribute(); oClass:AddInline( "setValueAttribute", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "08", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueAttribute(); oClass:AddInline( "getValueAttribute", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "08", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueAttribute(); oClass:AddInline( "deleteValueAttribute", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "08", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesAttribute(); oClass:AddInline( "deleteDocumentValuesAttribute", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "08", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueImage(); oClass:AddInline( "setValueImage", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "10", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueImage(); oClass:AddInline( "getValueImage", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "10", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueImage(); oClass:AddInline( "deleteValueImage", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "10", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesImage(); oClass:AddInline( "deleteDocumentValuesImage", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "10", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueCustomer(); oClass:AddInline( "setValueCustomer", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ( ::setValue( "12", cClave, cWeb, idWeb ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getgestoolCustomer(); oClass:AddInline( "getgestoolCustomer", {|Self, idWeb, cWeb, defaultValue | ( ( Self ) ), ( padr( ::getValuegestool( "12", idWeb, cWeb, defaultValue ), 12 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueCustomer(); oClass:AddInline( "deleteValueCustomer", {|Self, cClave, cWeb | ( ( Self ) ), ( ::deleteValue( "12", cClave, cWeb ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesCustomer(); oClass:AddInline( "deleteDocumentValuesCustomer", {|Self, cWeb | ( ( Self ) ), ( ::deleteDocumentValues( "12", cWeb ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueAddress(); oClass:AddInline( "setValueAddress", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "13", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getgestoolAddress(); oClass:AddInline( "getgestoolAddress", {|Self, idWeb, cWeb, defaultValue | ( ( Self ) ), ::getValuegestool( "13", idWeb, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueAddress(); oClass:AddInline( "deleteValueAddress", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "13", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesAddress(); oClass:AddInline( "deleteDocumentValuesAddress", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "13", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setgestoolBudget(); oClass:AddInline( "setgestoolBudget", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValuegestool( "14", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getgestoolBudget(); oClass:AddInline( "getgestoolBudget", {|Self, idWeb, cWeb, defaultValue | ( ( Self ) ), ::getValuegestool( "14", idWeb, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueBudget(); oClass:AddInline( "deleteValueBudget", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "14", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesBudget(); oClass:AddInline( "deleteDocumentValuesBudget", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "14", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setgestoolOrder(); oClass:AddInline( "setgestoolOrder", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValuegestool( "15", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getgestoolOrder(); oClass:AddInline( "getgestoolOrder", {|Self, idWeb, cWeb, defaultValue | ( ( Self ) ), ::getValuegestool( "15", idWeb, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueOrder(); oClass:AddInline( "deleteValueOrder", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "15", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesOrder(); oClass:AddInline( "deleteDocumentValuesOrder", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "15", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueProductAttributeCombination(); oClass:AddInline( "setValueProductAttributeCombination", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "16", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueProductAttributeCombination(); oClass:AddInline( "getValueProductAttributeCombination", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "16", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteValueProductAttributeCombination(); oClass:AddInline( "deleteValueProductAttributeCombination", {|Self, cClave, cWeb | ( ( Self ) ), ::deleteValue( "16", cClave, cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER deleteDocumentValuesProductAttributeCombination(); oClass:AddInline( "deleteDocumentValuesProductAttributeCombination", {|Self, cWeb | ( ( Self ) ), ::deleteDocumentValues( "16", cWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueFeature(); oClass:AddInline( "setValueFeature", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "17", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueFeature(); oClass:AddInline( "getValueFeature", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "17", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setValueFeatureValue(); oClass:AddInline( "setValueFeatureValue", {|Self, cClave, cWeb, idWeb | ( ( Self ) ), ::setValue( "18", cClave, cWeb, idWeb ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getValueFeatureValue(); oClass:AddInline( "getValueFeatureValue", {|Self, cClave, cWeb, defaultValue | ( ( Self ) ), ::getValue( "18", cClave, cWeb, defaultValue ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getProductInformation( idArticulo, cWeb); oClass:AddMethod( "getProductInformation", @TPrestaShopId_getProductInformation(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER writeText(); oClass:AddInline( "writeText", {|Self, cText | ( ( Self ) ), ( ::TComercio:writeText( cText ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER deleteAllReferencesWeb( cWeb); oClass:AddMethod( "deleteAllReferencesWeb", @TPrestaShopId_deleteAllReferencesWeb(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TPrestaShopId ;



static FUNCTION TPrestaShopId_New( TComercio ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   ::TComercio             := TComercio

   ::cPath                 := cPatEmp()
   ::oDbf                  := nil

   ::bFirstKey             := {|| ::oDbf:cDocumento }

RETURN ( Self )



static FUNCTION TPrestaShopId_DefineFiles( cPath, cDriver ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   If( cPath == nil, cPath := ::cPath, ) ;
   If( cDriver == nil, cDriver := cDriver(), ) ;

   ::oDbf := DbfServer( "PrestaId.Dbf", "PRESTAID" ):New( "PrestaId.Dbf", "PRESTAID", ( cDriver ), "Prestashop id", ( cPath ) )

      ::oDbf:AddField( "cDocumento", "C", 2, 0,,,,, "Tipo documento", .F.,, .F., {} )
      ::oDbf:AddField( "cClave", "C", 100, 0,,,,, "Clave principal", .F.,, .F., {} )
      ::oDbf:AddField( "cWeb", "C", 30, 0,,,,, "Web de Prestashop", .F.,, .F., {} )
      ::oDbf:AddField( "idWeb", "N", 11, 0,,,,, "Id en Prestashop", .F.,, .F., {} )

      ::oDbf:AddIndex( "cDocumento", "PrestaId.Cdx", "cDocumento",,, .F., .F., "Documento",,, .T., .F. )
      ::oDbf:AddIndex( "cClave", "PrestaId.Cdx", "cDocumento + cClave",,, .F., .F., "Documento clave",,, .T., .F. )
      ::oDbf:AddIndex( "cDocuWeb", "PrestaId.Cdx", "cDocumento + cWeb",,, .F., .F., "Documento web",,, .T., .F. )
      ::oDbf:AddIndex( "cWeb", "PrestaId.Cdx", "cDocumento + cClave + cWeb",,, .F., .F., "Documento clave web",,, .T., .F. )
      ::oDbf:AddIndex( "cId", "PrestaId.Cdx", "cDocumento + str( idWeb, 11 ) + cWeb",,, .F., .F., "Documento id web",,, .T., .F. )



RETURN ( ::oDbf )



static FUNCTION TPrestaShopId_setValue( cTipoDocumento, cClave, cWeb, idWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   if !::isValidParameters( cTipoDocumento, cClave, cWeb, idWeb )
      RETURN ( .F. )
   end

   cClave               := upper( cClave )
   cWeb                 := upper( cWeb )

   if ::isSeekValues( cTipoDocumento, cClave, cWeb )
      ::oDbf:fieldPutByName( "idWeb", idWeb )
   else
      ::oDbf:Append()
      ::oDbf:cDocumento := cTipoDocumento
      ::oDbf:cClave     := cClave
      ::oDbf:cWeb       := cWeb
      ::oDbf:idWeb      := idWeb
      ::oDbf:Save()
   end

RETURN ( .T. )



static FUNCTION TPrestaShopId_setValuegestool( cTipoDocumento, cClave, cWeb, idWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   cClave                  := upper( cClave )
   cWeb                    := upper( cWeb )

   if !::isValidParameters( cTipoDocumento, cClave, cWeb, idWeb )
      RETURN ( .F. )
   end

   if ::isSeekgestool( cTipoDocumento, idWeb, cWeb )
      ::oDbf:fieldPutByName( "idWeb", idWeb )
   else
      ::oDbf:Append()
      ::oDbf:cDocumento    := cTipoDocumento
      ::oDbf:cClave        := cClave
      ::oDbf:cWeb          := cWeb
      ::oDbf:idWeb         := idWeb
      ::oDbf:Save()
   end

RETURN ( .T. )



static FUNCTION TPrestaShopId_getValue( cTipoDocumento, cClave, cWeb, defaultValue ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   local idWeb    := 0

   if !empty(defaultValue)
      idWeb       := defaultValue
   end

   if !::isValidParameters( Padr( cTipoDocumento, 2 ), Padr( cClave, 100 ), Padr( cWeb, 30 ) )
      ::writeText( alltrim( cTipoDocumento ) + ":" + alltrim( cClave ) + ":" + alltrim( cWeb ) + " parametros invalidos" )
      RETURN ( idWeb )
   end

   if ::isSeekValues( Padr( cTipoDocumento, 2 ), Padr( cClave, 100 ), Padr( cWeb, 30 ) )
      idWeb       := ::oDbf:idWeb
   else
      ::writeText( alltrim( cTipoDocumento ) + ":" + alltrim( cClave ) + ": web actual " + alltrim( cWeb ) + ": no encontrado : " + alltrim( cTipoDocumento + cClave + cWeb ) )
   end

RETURN ( idWeb )



static FUNCTION TPrestaShopId_getValuegestool( cTipoDocumento, idWeb, cWeb, defaultValue ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   local cClave   := ""

   if !empty( defaultValue )
      cClave      := defaultValue
   end

   if !::isValidParameters( cTipoDocumento, idWeb, cWeb )
      RETURN ( cClave )
   end

   if ::isSeekgestool( cTipoDocumento, idWeb, cWeb )
      cClave      := alltrim( ::oDbf:cClave )
   end

RETURN ( cClave )



static FUNCTION TPrestaShopId_deleteValue( cTipoDocumento, cClave, cWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   if !::isValidParameters( cTipoDocumento, cClave, cWeb )
      RETURN ( .F. )
   end

   if ::isSeekValues( cTipoDocumento, cClave, cWeb )
      ::oDbf:Delete()
   end

RETURN ( .T. )



static FUNCTION TPrestaShopId_deleteDocumentValues( cTipoDocumento, cWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   Local cStm

   cTipoDocumento    := upper( cTipoDocumento )
   cWeb              := upper( cWeb )

   while ::oDbf:seekInOrd( cTipoDocumento + cWeb, "cDocuWeb" )
      ::oDbf:delete()
   end

RETURN ( .T. )



static FUNCTION TPrestaShopId_deleteAllReferencesWeb( cWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   Local cStm

   cWeb              := upper( cWeb )

   cStm              := "DELETE FROM " + cPatEmp() + "PrestaId" + " WHERE cWeb = " + quoted( cWeb )

   TDataCenter():ExecuteSqlStatement( cStm, "aaa" )

RETURN ( .T. )



static FUNCTION TPrestaShopId_isValidParameters( cTipoDocumento, cClave, cWeb, idWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   if !empty( ::TComercio ) .AND. ( ::TComercio:isDebugMode() )
      RETURN ( .T. )
   end

   if empty( cTipoDocumento )
      msgStop( "El tipo de documento " + cTipoDocumento + " no existe", "Sistema de identificadores de Prestashop" )
      RETURN ( .F. )
   end

   if isNil( cClave )
      msgStop( "El campo clave no puede estar vacio", "Sistema de identificadores de Prestashop" )
      msgInfo( ::tComercio, "tComercio" )
      msginfo( cTipoDocumento, "cTipoDocumento" )
      msginfo( cClave, "cClave" )
      msginfo( cWeb, "cWeb" )
      msginfo( idWeb, "idWeb" )
      RETURN ( .F. )
   end

   if empty( cWeb )
      msgStop( "El nombre de la tienda en prestashop no puede estar vacio", "Sistema de identificadores de Prestashop" )
      RETURN ( .F. )
   end

   if !isNil( idWeb ) .AND. empty( idWeb )
      msgStop( "El identificador de la tienda en prestashop no puede estar vacio", "Sistema de identificadores de Prestashop" )
      RETURN ( .F. )
   end

RETURN ( .T. )



static FUNCTION TPrestaShopId_isSeekValues( cTipoDocumento, cClave, cWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   cClave         := upper( padr( cClave, 100 ) )
   cWeb           := upper( padr( cWeb, 30 ) )

RETURN ( ::oDbf:seekInOrd( cTipoDocumento + cClave + cWeb, "cWeb" ) )



static FUNCTION TPrestaShopId_isSeekgestool( cTipoDocumento, idWeb, cWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   idWeb          := str( idWeb, 11 )
   cWeb           := upper( padr( cWeb, 30 ) )

RETURN ( ::oDbf:seekInOrd( cTipoDocumento + idWeb + cWeb, "cId" ) )



static FUNCTION TPrestaShopId_getProductInformation( idArticulo, cWeb ) ; local Self AS CLASS TPrestaShopId := QSelf() AS CLASS TPrestaShopId

   local cStm
   local cSql
   local aInfo := {}





   cSql        := "SELECT cWeb, cDocumento, idWeb "                           +  "FROM " + cPatEmp() + "PrestaId" + " "                   +  "WHERE ( cDocumento = '01' OR cDocumento = '10' ) "      +  "AND LEFT( cClave, 18 ) = '" + ( idArticulo ) + "' "  +  "AND cWeb = '" + upper( cWeb ) + "'"

   if ADSBaseModel():ExecuteSqlStatement( cSql, @cStm )
      while ( !( cStm )->( eof() ) )


         aadd( aInfo, { "Web"       => ( cStm )->cWeb, "Documento" => ( cStm )->cDocumento, "Id"        => ( cStm )->idWeb } )
         ( cStm )->( dbskip() )
      end
   end

RETURN ( aInfo )
