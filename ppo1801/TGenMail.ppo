#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\mail\TGenMail.prg"
_HB_CLASS TGenMailing ; function TGenMailing ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TGenMailing", iif( .F., { }, { @HBObject() } ), @TGenMailing() ) ) ;

   _HB_MEMBER { oDlg } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDlg"}, .F. )
   _HB_MEMBER { oFld } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFld"}, .F. )
   _HB_MEMBER { oMenu } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMenu"}, .F. )

   _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

   _HB_MEMBER { oSendMail } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSendMail"}, .F. )

   _HB_MEMBER { oTree } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTree"}, .F. )
   _HB_MEMBER { oMtr } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMtr"}, .F. )
   _HB_MEMBER { nMtr } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMtr"}, .F. )
   _HB_MEMBER { oFlt } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFlt"}, .F. )

   _HB_MEMBER { lPageDatabase } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lPageDatabase"}, .F. )
   _HB_MEMBER { lMultiSelect } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lMultiSelect"}, .F. )

   _HB_MEMBER { oBtnSiguiente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnSiguiente"}, .F. )
   _HB_MEMBER { oBtnAnterior } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnAnterior"}, .F. )
   _HB_MEMBER { oBtnCancel } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnCancel"}, .F. )
   _HB_MEMBER { oBtnFilter } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnFilter"}, .F. )
   _HB_MEMBER { oBtnCargarHTML } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnCargarHTML"}, .F. )
   _HB_MEMBER { oBtnSalvarHTML } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnSalvarHTML"}, .F. )
   _HB_MEMBER { oBtnSalvarAsHTML } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnSalvarAsHTML"}, .F. )
   _HB_MEMBER { oBtnDefectoHTML } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBtnDefectoHTML"}, .F. )

   _HB_MEMBER { aPages } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aPages"}, .F. )



   _HB_MEMBER { oRecipients } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oRecipients"}, .F. )

   _HB_MEMBER { bRecipients } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bRecipients"}, .F. )

      _HB_MEMBER setBlockRecipients(); oClass:AddInline( "setBlockRecipients", {|Self, bRecipients | ( ( Self ) ), ( ::bRecipients := bRecipients ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER evalBlockRecipients(); oClass:AddInline( "evalBlockRecipients", {|Self | ( ( Self ) ), ( iif( !empty( ::bRecipients ), eval( ::bRecipients ), "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER { cRecipients } ; oClass:AddMultiData(, Space( 250 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cRecipients"}, .F. )

   _HB_MEMBER setRecipients(); oClass:AddInline( "setRecipients", {|Self, cText | ( ( Self ) ), ( ::cRecipients := padr( cText, 250 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER getRecipients(); oClass:AddInline( "getRecipients", {|Self | ( ( Self ) ), ( iif(  ::getMultiSelect(), ::evalBlockRecipients(), alltrim( ::cRecipients ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

      _HB_MEMBER hideRecipients(); oClass:AddInline( "hideRecipients", {|Self | ( ( Self ) ), ( ::lHideRecipients := .T., if ( !empty( ::oRecipients ), ::oRecipients:Disable(), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER showRecipients(); oClass:AddInline( "showRecipients", {|Self | ( ( Self ) ), ( ::lHideRecipients := .F., if ( !empty( ::oRecipients ), ::oRecipients:Enable(), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER { oGetAsunto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetAsunto"}, .F. )
   _HB_MEMBER { cSubject } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSubject"}, .F. )

   _HB_MEMBER setAsunto(); oClass:AddInline( "setAsunto", {|Self, cText | ( ( Self ) ), ( ::cSubject := padr( cText, 250 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getAsunto(); oClass:AddMethod( "getAsunto", @TGenMailing_getAsunto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER { oGetAdjunto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetAdjunto"}, .F. )
   _HB_MEMBER { cGetAdjunto } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetAdjunto"}, .F. )



   _HB_MEMBER { oFormatoDocumento } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFormatoDocumento"}, .F. )
   _HB_MEMBER { cFormatoDocumento } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cFormatoDocumento"}, .F. )

   _HB_MEMBER { oEditDocumento } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oEditDocumento"}, .F. )



   _HB_MEMBER { cTypeDocument } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTypeDocument"}, .F. )
   _HB_MEMBER { cTypeFormat } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTypeFormat"}, .F. )



   _HB_MEMBER { aSelected } ; oClass:AddMultiData(, {}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aSelected"}, .F. )
   _HB_MEMBER setSelected(); oClass:AddInline( "setSelected", {|Self, aSelected | ( ( Self ) ), ( ::aSelected := aSelected, ::setMultiSelect( len( aSelected ) > 1 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setMultiSelect(); oClass:AddInline( "setMultiSelect", {|Self, lMultiSelect | ( ( Self ) ), ( ::lMultiSelect := lMultiSelect ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getMultiSelect(); oClass:AddInline( "getMultiSelect", {|Self | ( ( Self ) ), ( ::lMultiSelect ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER setMultiSelectMode(); oClass:AddInline( "setMultiSelectMode", {|Self | ( ( Self ) ), ( iif(  ::getMultiSelect(), ( ::setRecipients( ::getTextSelectedMails() ), ::HideRecipients() ), ( ::setRecipients( ::evalBlockRecipients() ), ::showRecipients() ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER { cBmpDatabase } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBmpDatabase"}, .F. )
   _HB_MEMBER setBmpDatabase(); oClass:AddInline( "setBmpDatabase", {|Self, cBmpDatabase | ( ( Self ) ), ( ::cBmpDatabase := cBmpDatabase ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER { cMensaje } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cMensaje"}, .F. )
   _HB_MEMBER setMensaje(); oClass:AddInline( "setMensaje", {|Self, cMensaje | ( ( Self ) ), ( ::cMensaje := cMensaje, if( !empty( ::oRichEdit ), ::oRichEdit:oRTF:SetText( cMensaje ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER saveToFile(); oClass:AddInline( "saveToFile", {|Self, cFile | ( ( Self ) ), ( if( !empty( ::oRichEdit ), ::oRichEdit:saveToFile( cFile ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER { oGetCopia } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCopia"}, .F. )
   _HB_MEMBER { cGetCopia } ; oClass:AddMultiData(, Padr( uFieldEmpresa( "cCcpMai" ), 250 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCopia"}, .F. )

   _HB_MEMBER { oGetCopiaOculta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCopiaOculta"}, .F. )
   _HB_MEMBER { cGetCopiaOculta } ; oClass:AddMultiData(, Padr( uFieldEmpresa( "cCcoMai" ), 250 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetCopiaOculta"}, .F. )

   _HB_MEMBER { oGetDe } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetDe"}, .F. )
   _HB_MEMBER { cGetDe } ; oClass:AddMultiData(, Padr( uFieldEmpresa( "cNombre" ), 250 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetDe"}, .F. )

   _HB_MEMBER { cWorkArea } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cWorkArea"}, .F. )
   _HB_MEMBER { hWorkAreaStatus } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"hWorkAreaStatus"}, .F. )

   _HB_MEMBER { cIncidenciaWorkArea } ; oClass:AddMultiData(, "", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cIncidenciaWorkArea"}, .F. )

   _HB_MEMBER { lHideRecipients } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lHideRecipients"}, .F. )
   _HB_MEMBER { lHideCopia } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lHideCopia"}, .F. )
   _HB_MEMBER { lHideCopiaOculta } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lHideCopiaOculta"}, .F. )
   _HB_MEMBER { lHideFormato } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lHideFormato"}, .F. )

   _HB_MEMBER { aAdjuntos } ; oClass:AddMultiData(, {}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aAdjuntos"}, .F. )

   _HB_MEMBER { oRichEdit } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oRichEdit"}, .F. )
   _HB_MEMBER { cActiveX } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cActiveX"}, .F. )

   _HB_MEMBER { aItems } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aItems"}, .F. )

   _HB_MEMBER { aFields } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aFields"}, .F. )
   _HB_MEMBER { oField } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oField"}, .F. )
   _HB_MEMBER { aField } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aField"}, .F. )
   _HB_MEMBER { cField } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cField"}, .F. )

   _HB_MEMBER { oTemplateHtml } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTemplateHtml"}, .F. )

   _HB_MEMBER { cHtml } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cHtml"}, .F. )
   _HB_MEMBER { lHtml } ; oClass:AddMultiData(, .T., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lHtml"}, .F. )

   _HB_MEMBER { oMail } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMail"}, .F. )

   _HB_MEMBER { lCancel } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lCancel"}, .F. )

   _HB_MEMBER { oPaquetesTotales } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oPaquetesTotales"}, .F. )
   _HB_MEMBER { nPaquetesTotales } ; oClass:AddMultiData(, 1, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nPaquetesTotales"}, .F. )
   _HB_MEMBER { nPaqueteActual } ; oClass:AddMultiData(, 1, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nPaqueteActual"}, .F. )

   _HB_MEMBER { nTime } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nTime"}, .F. )

   _HB_MEMBER { cTiempo } ; oClass:AddMultiData(, "0 seg.", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTiempo"}, .F. )
   _HB_MEMBER { aTiempo } ; oClass:AddMultiData(, { "0 seg.", "5 seg.", "10 seg.", "15 seg.", "20 seg.", "25 seg.", "30 seg.", "35 seg.", "40 seg.", "45 seg.", "50 seg.", "55 seg.", "60 seg." }, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aTiempo"}, .F. )

   _HB_MEMBER { oBmpRedactar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBmpRedactar"}, .F. )
   _HB_MEMBER { oBmpProceso } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBmpProceso"}, .F. )
   _HB_MEMBER { oBmpDatabase } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBmpDatabase"}, .F. )

   _HB_MEMBER { aMailingList } ; oClass:AddMultiData(, {}, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aMailingList"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TGenMailing_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TGenMailing_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setWorkArea(); oClass:AddInline( "setWorkArea", {|Self, cWorkArea | ( ( Self ) ), ( ::cWorkArea := cWorkArea ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getWorkArea(); oClass:AddInline( "getWorkArea", {|Self | ( ( Self ) ), ( ::cWorkArea ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setIncidenciaWorkArea(); oClass:AddInline( "setIncidenciaWorkArea", {|Self, cWorkArea | ( ( Self ) ), ( ::cIncidenciaWorkArea := cWorkArea ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getIncidenciaWorkArea(); oClass:AddInline( "getIncidenciaWorkArea", {|Self | ( ( Self ) ), ( ::cIncidenciaWorkArea ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER getStatusWorkArea(); oClass:AddInline( "getStatusWorkArea", {|Self | ( ( Self ) ), ( ::hWorkAreaStatus := hGetStatus( ::cWorkArea, .T. ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setStatusWorkArea(); oClass:AddInline( "setStatusWorkArea", {|Self | ( ( Self ) ), ( hSetStatus( ::hWorkAreaStatus ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER gotoRecord(); oClass:AddInline( "gotoRecord", {|Self, nRecord | ( ( Self ) ), ( ( ::getWorkArea() )->( dbgoto( nRecord ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setDe(); oClass:AddInline( "setDe", {|Self, cText | ( ( Self ) ), ( ::cGetDe := padr( cText, 250 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setCopia(); oClass:AddInline( "setCopia", {|Self, cText | ( ( Self ) ), ( ::cGetCopia := padr( cText, 250 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCopia(); oClass:AddInline( "getCopia", {|Self | ( ( Self ) ), ( alltrim( ::cGetCopia ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER HideCopia(); oClass:AddInline( "HideCopia", {|Self | ( ( Self ) ), ( ::lHideCopia := .T., if ( !empty( ::oGetCopia ), ::oGetCopia:Hide(), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER ShowCopia(); oClass:AddInline( "ShowCopia", {|Self | ( ( Self ) ), ( ::lHideCopia := .F., if ( !empty( ::oGetCopia ), ::oGetCopia:Show(), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setCopiaOculta(); oClass:AddInline( "setCopiaOculta", {|Self, cText | ( ( Self ) ), ( ::cGetCopiaOculta := padr( cText, 250 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCopiaOculta(); oClass:AddInline( "getCopiaOculta", {|Self | ( ( Self ) ), ( alltrim( ::cGetCopiaOculta ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER HideCopiaOculta(); oClass:AddInline( "HideCopiaOculta", {|Self | ( ( Self ) ), ( ::lHideCopiaOculta := .T., if ( !empty( ::oGetCopiaOculta ), ::oGetCopiaOculta:Hide(), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER ShowCopiaOculta(); oClass:AddInline( "ShowCopiaOculta", {|Self | ( ( Self ) ), ( ::lHideCopiaOculta := .F., if ( !empty( ::oGetCopiaOculta ), ::oGetCopiaOculta:Show(), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getMessage(); oClass:AddMethod( "getMessage", @TGenMailing_getMessage(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getMessageHTML(); oClass:AddInline( "getMessageHTML", {|Self | ( ( Self ) ), ( "<HTML>" + strtran( alltrim( ::getMessage() ), Chr(13)+Chr(10), "<p>" ) + "</HTML>" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER getExpression(); oClass:AddMethod( "getExpression", @TGenMailing_getExpression(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER replaceExpresion( cDocumentHTML, cExpresion); oClass:AddMethod( "replaceExpresion", @TGenMailing_replaceExpresion(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER { bPostSend } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bPostSend"}, .F. )
   _HB_MEMBER setPostSend(); oClass:AddInline( "setPostSend", {|Self, bPostSend | ( ( Self ) ), ( ::bPostSend := bPostSend ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPostSend(); oClass:AddInline( "getPostSend", {|Self | ( ( Self ) ), ( ::bPostSend )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER { bPostError } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bPostError"}, .F. )
   _HB_MEMBER setPostError(); oClass:AddInline( "setPostError", {|Self, bPostError | ( ( Self ) ), ( ::bPostError := bPostError ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getPostError(); oClass:AddInline( "getPostError", {|Self | ( ( Self ) ), ( ::bPostError )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER { bCargo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bCargo"}, .F. )
   _HB_MEMBER setCargo(); oClass:AddInline( "setCargo", {|Self, bCargo | ( ( Self ) ), ( ::bCargo := bCargo ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getCargo(); oClass:AddInline( "getCargo", {|Self | ( ( Self ) ), ( if( !empty( ::bCargo ), eval( ::bCargo ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setAdjunto(); oClass:AddInline( "setAdjunto", {|Self, cText | ( ( Self ) ), ( ::cGetAdjunto := padr( cText, 250 ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getAdjunto(); oClass:AddInline( "getAdjunto", {|Self | ( ( Self ) ), ( alltrim( ::cGetAdjunto ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER addAdjunto(); oClass:AddInline( "addAdjunto", {|Self, cText | ( ( Self ) ), ( aAdd( ::aAdjuntos, cText ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER addFileAdjunto(); oClass:AddMethod( "addFileAdjunto", @TGenMailing_addFileAdjunto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setItems(); oClass:AddInline( "setItems", {|Self, aItems | ( ( Self ) ), ( iif( !empty( aItems ), ( ::aItems := aItems, ::aFields := getSubArray( aItems, 5 ) ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getItems(); oClass:AddInline( "getItems", {|Self | ( ( Self ) ), ( ::aItems ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER setTypeDocument(); oClass:AddInline( "setTypeDocument", {|Self, cTypeDocument | ( ( Self ) ), ( ::oTemplateHtml:setTypeDocument( cTypeDocument ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER setTypeFormat(); oClass:AddInline( "setTypeFormat", {|Self, cTypeFormat | ( ( Self ) ), ( ::cTypeFormat := cTypeFormat ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )


   _HB_MEMBER setFormatoDocumento(); oClass:AddInline( "setFormatoDocumento", {|Self, cFormatoDocumento | ( ( Self ) ), ( ::cFormatoDocumento := cFormatoDocumento ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER documentsDialog( aSelected); oClass:AddMethod( "documentsDialog", @TGenMailing_documentsDialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @TGenMailing_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

      _HB_MEMBER botonAnterior(); oClass:AddMethod( "botonAnterior", @TGenMailing_botonAnterior(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER botonSiguiente(); oClass:AddMethod( "botonSiguiente", @TGenMailing_botonSiguiente(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

      _HB_MEMBER buildPageRedactar(); oClass:AddMethod( "buildPageRedactar", @TGenMailing_buildPageRedactar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER buildPageDatabase( oDlg) ; oClass:AddVirtual( "buildPageDatabase" )
      _HB_MEMBER buildPageProceso( oDlg); oClass:AddMethod( "buildPageProceso", @TGenMailing_buildPageProceso(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER buildButtonsGeneral(); oClass:AddMethod( "buildButtonsGeneral", @TGenMailing_buildButtonsGeneral(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

      _HB_MEMBER startResource(); oClass:AddMethod( "startResource", @TGenMailing_startResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER endResources(); oClass:AddMethod( "endResources", @TGenMailing_endResources(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

      _HB_MEMBER setMeterTotal(); oClass:AddInline( "setMeterTotal", {|Self, nTotal | ( ( Self ) ), ( ::oMtr:nTotal := nTotal ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER setMeter(); oClass:AddInline( "setMeter", {|Self, nSet | ( ( Self ) ), ( ::oMtr:Set( nSet ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )



   _HB_MEMBER IniciarProceso(); oClass:AddMethod( "IniciarProceso", @TGenMailing_IniciarProceso(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER InsertField(); oClass:AddInline( "InsertField", {|Self | ( ( Self ) ), ( ::oRichEdit:oClp:SetText( "{" + ( alltrim( ::cField ) ) + "}" ), ::oRichEdit:oRTF:Paste() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER waitMail(); oClass:AddMethod( "waitMail", @TGenMailing_waitMail(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER waitSeconds( nTime); oClass:AddMethod( "waitSeconds", @TGenMailing_waitSeconds(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getDatabaseList() ; oClass:AddVirtual( "getDatabaseList" )
   _HB_MEMBER getSelectedList(); oClass:AddMethod( "getSelectedList", @TGenMailing_getSelectedList(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getTextSelectedMails(); oClass:AddMethod( "getTextSelectedMails", @TGenMailing_getTextSelectedMails(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER addDatabaseList(); oClass:AddMethod( "addDatabaseList", @TGenMailing_addDatabaseList(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER hashDatabaseList(); oClass:AddMethod( "hashDatabaseList", @TGenMailing_hashDatabaseList(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER addSelectedList(); oClass:AddInline( "addSelectedList", {|Self | ( ( Self ) ), ( aAdd( ::aMailingList, ::hashDatabaseList() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CreateIndicencia() ; oClass:AddVirtual( "CreateIndicencia" )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TGenMailing ;



static FUNCTION TGenMailing_New( nView ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::Create()

   ::nView           := nView

   ::oSendMail       := TSendMail():New( Self )

   ::oTemplateHtml   := TTemplatesHtml():New( Self )

Return ( Self )



static FUNCTION TGenMailing_Create( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::cSubject        := Space( 254 )
   ::cGetAdjunto     := Space( 254 )

   ::SetDe( uFieldEmpresa( "cNombre" ) )

Return ( Self )



static FUNCTION TGenMailing_documentsDialog( aSelected ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::lPageDatabase   := .F.

   ::aPages          := { "Select_Mail_Redactar", "Select_Mail_Proceso" }

   ::setSelected( aSelected )

   ::setMultiSelectMode()

   ::Resource()

Return ( Self )



static FUNCTION TGenMailing_Resource( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::lCancel         := .F.

   if !Empty( ::cGetAdjunto )
      ::cGetAdjunto  := Space( 254 )
   end



   ::oDlg = TDialog():New(,,,,, "Select_Mail_Container",, .F.,,,,, oWnd(), .F.,,,,,, .F.,, "::oDlg", nil, )

      ::oFld         := TPages():Redefine( 10, ::oDlg, ::aPages )

      ::buildPageRedactar()

      if ::lPageDatabase
         ::buildPageDatabase()
      end

      ::buildPageProceso()

      ::buildButtonsGeneral()

      ::oDlg:bStart  := {|| ::startResource() }

   ::oDlg:Activate( ::oDlg:bLClicked, ::oDlg:bMoved, ::oDlg:bPainted, .T.,,,, ::oDlg:bRClicked,,, )

   ::endResources()

Return ( Self )



static FUNCTION TGenMailing_startResource( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::getStatusWorkArea()

   if ::lHideRecipients
      ::oRecipients:Disable()
   end

   if ::lHideCopia
      ::oGetCopia:Hide()
   end

   if ::lHideCopiaOculta
      ::oGetCopiaOculta:Hide()
   end

   if ::lHideFormato
      ::oFormatoDocumento:Hide()
      ::oEditDocumento:Hide()
   end

   if !empty(::oBtnAnterior)
      ::oBtnAnterior:Hide()
   end

   if !empty( ::cFormatoDocumento )
      ::oFormatoDocumento:lValid()
   end

   if !empty( ::oRichEdit )
      ::oRichEdit:SetHTML()
   end

Return ( Self )



static FUNCTION TGenMailing_endResources( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::setStatusWorkArea()

   if !Empty( ::oBmpRedactar )
      ::oBmpRedactar:end()
   end

   if !Empty( ::oBmpProceso )
      ::oBmpProceso:end()
   end

   if !empty( ::oMenu )
      ::oMenu:end()
   end

   if !empty( ::oRichEdit )
      ::oRichEdit:end()
   end

Return ( Self )



static FUNCTION TGenMailing_buildPageRedactar( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local oDlg  := ::oFld:aDialogs[ 1 ]





   ::oBmpRedactar := TBitmap():ReDefine( 500, "gc_mail_earth_48",, oDlg,,, .F., .F.,,, .F.,,, .T. )



   ::oGetDe := TGetHlp():ReDefine( 90, { | u | If( PCount()==0, ::cGetDe, ::cGetDe:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )




   ::oRecipients := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::cRecipients, ::cRecipients:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,, 121, )



   ::oGetAsunto := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::cSubject, ::cSubject:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )



   ::oGetAdjunto := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::cGetAdjunto, ::cGetAdjunto:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )




   ::oGetCopia := TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::cGetCopia, ::cGetCopia:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,, 151, )




   ::oGetCopiaOculta := TGetHlp():ReDefine( 155, { | u | If( PCount()==0, ::cGetCopiaOculta, ::cGetCopiaOculta:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil,, 156, )



   if !empty( ::nView )






      ::oFormatoDocumento := TGetHlp():ReDefine( 190, { | u | If( PCount()==0, ::cFormatoDocumento, ::cFormatoDocumento:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "Lupa", 191, 192 )

      ::oFormatoDocumento:bValid    := {|| cDocumento( ::oFormatoDocumento, ::oFormatoDocumento:oHelpText, D():Documentos( ::nView ) ) }
      ::oFormatoDocumento:bHelp     := {|| brwDocumento( ::oFormatoDocumento, ::oFormatoDocumento:oHelpText, ::cTypeFormat ) }

      ::oEditDocumento              := TBtnBmp():ReDefine( 193, "gc_document_text_pencil_12",,,,,{|| EdtDocumento( ::cFormatoDocumento ) }, oDlg, .F., , .F.,  )

   end



   ::oGetAdjunto:cBmp   := "Folder"
   ::oGetAdjunto:bHelp  := {|| ::oGetAdjunto:cText( cGetFile( "Fichero ( *.* ) | *.*", "Seleccione el fichero a adjuntar" ) ) }

   TBtnBmp():ReDefine( 140, "gc_document_text_16",,,,,{|| ShellExecute( oDlg:hWnd, "open", Rtrim( ::cGetAdjunto ) ) }, oDlg, .F., , .F.,  )






   ::oField := TComboBox():ReDefine( 160, { | u | If( PCount()==0, ::cField, ::cField:= u ) }, ::aFields, oDlg,,,,,,, .F.,,,,,,, "::oField",,,,,,, )

   TBtnBmp():ReDefine( 170, "Down16", , , , , {|| ::InsertField() }, oDlg, .F., , .F., "Insertar campo" )



   ::oRichEdit          := GetRichEdit():ReDefine( 600, oDlg )

   ::oRichEdit:oRTF:SetText( ::cMensaje )

Return ( Self )



static FUNCTION TGenMailing_buildPageProceso( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local oDlg  := atail( ::oFld:aDialogs )





   ::oBmpProceso := TBitmap():ReDefine( 500, "gc_mail_earth_48",, oDlg,,, .F., .F.,,, .F.,,, .T. )







   ::oPaquetesTotales := TGetHlp():ReDefine( 180, { | u | If( PCount()==0, ::nPaquetesTotales, ::nPaquetesTotales:= u ) }, oDlg,, "@E 999",,,,,,, .F.,,, .F., .T.,,,,,, nil,, 181, )




   TComboBox():ReDefine( 170, { | u | If( PCount()==0, ::cTiempo, ::cTiempo:= u ) }, ::aTiempo, oDlg,,,,,,, .F.,,,,,,,,,,,,,, )

   ::oTree     := TTreeView():Redefine( 100, oDlg )




   ::oMtr := TApoloMeter():ReDefine( 120, { | u | If( PCount()==0, ::nMtr, ::nMtr:= u ) },, oDlg, .F.,,, .F.,,,, )

Return ( Self )



static FUNCTION TGenMailing_buildButtonsGeneral( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing




   ::oBtnCargarHTML := TButton():ReDefine( 40, {||( ::oTemplateHtml:selectHtmlFile() )}, ::oDlg,,, .F.,,,, .F. )




   ::oBtnSalvarHTML := TButton():ReDefine( 50, {||( ::oTemplateHtml:saveHtml() )}, ::oDlg,,, .F.,,,, .F. )




   ::oBtnSalvarAsHTML := TButton():ReDefine( 60, {||( ::oTemplateHtml:saveAsHtml() )}, ::oDlg,,, .F.,,,, .F. )




   ::oBtnAnterior := TButton():ReDefine( 20, {||( ::BotonAnterior() )}, ::oDlg,,, .F.,,,, .F. )




   ::oBtnSiguiente := TButton():ReDefine( 30, {||( ::BotonSiguiente() )}, ::oDlg,,, .F.,,,, .F. )




   ::oBtnCancel := TButton():ReDefine( 2, {||( ::oDlg:end() )}, ::oDlg,,, .F.,,,, .F. )

Return ( Self )



static FUNCTION TGenMailing_addFileAdjunto( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local cFile       := cGetFile( "Fichero ( *.* ) | *.*", "Seleccione el fichero a adjuntar" )

   if !Empty( cFile )

      if !Empty( ::cGetAdjunto )
         cFile       := alltrim( ::cGetAdjunto ) + "; " + cFile
      end

      ::oGetAdjunto:cText( cFile )

   end

Return ( Self )



static FUNCTION TGenMailing_botonAnterior( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::oFld:GoPrev()

   if ::oFld:nOption = 1
      ::oBtnAnterior:Hide()
      ::oBtnSiguiente:Show()
      ::oBtnCargarHTML:Show()
      ::oBtnSalvarHTML:Show()
      ::oBtnSalvarAsHTML:Show()
   end

   if ::oFld:nOption == len( ::oFld:aDialogs ) - 1
      ::oBtnAnterior:Show()
      ::oBtnSiguiente:setText( "&Enviar" )
      ::oBtnSiguiente:Show()
   end

Return ( Self )



static FUNCTION TGenMailing_botonSiguiente( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::oFld:GoNext()

   if ::oFld:nOption > 1
      ::oBtnCargarHTML:Hide()
      ::oBtnSalvarHTML:Hide()
      ::oBtnSalvarAsHTML:Hide()
      ::oBtnAnterior:Show()
   end

   if ::oFld:nOption == ( len( ::oFld:aDialogs ) - 1 )
      ::oBtnAnterior:Show()
      ::oBtnSiguiente:setText( "&Enviar" )
      ::oBtnSiguiente:Show()
   end

   if ::oFld:nOption == len( ::oFld:aDialogs )
      ::oBtnAnterior:Hide()
      ::oBtnSiguiente:Hide()
      ::IniciarProceso()
      ::oBtnAnterior:Show()
   end

Return ( Self )



static FUNCTION TGenMailing_IniciarProceso( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local aDatabaseList

   ::oSendMail:initMessage()

   if ::lPageDatabase
      aDatabaseList           := ::getDatabaseList()
   else
      aDatabaseList           := ::getSelectedList()
   end

   if !empty( aDatabaseList )
      ::oSendMail:sendList( aDatabaseList )
      aeval( aDatabaseList, {|h| ::CreateIndicencia( hGet( h, "cargo" ) ) } )
   else
      msgStop( "No hay direcciones de correos para mandar.")
   end

Return ( self )



static FUNCTION TGenMailing_waitSeconds( nTime ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

    local n

    for n := 1 to nTime

        if ::lCancel
            exit
        end

         waitSeconds( 1 )

         SysRefresh()

    next

RETURN ( Self )



static FUNCTION TGenMailing_waitMail( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   ::oTree:Select( ::oTree:Add( "Envio " + Alltrim( Str( ( ::getWorkArea() )->( OrdKeyNo() ) ) ) + " de " + Alltrim( Str( ::oMtr:nTotal ) ) ) )

   if ::nPaqueteActual >= ::nPaquetesTotales

      ::oTree:Select( ::oTree:Add( "Esperando " + ::cTiempo + "para proximo envio" ) )

      ::WaitSeconds( ::nTime )

      ::nPaqueteActual := 1

   else

      ::nPaqueteActual++

   end

Return ( Self )



static FUNCTION TGenMailing_getAsunto( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local cExpresion
   local cDocument     := alltrim( ::cSubject )

   while .T.

      cExpresion       := ::getExpression( cDocument )
      if empty( cExpresion )
         exit
      end

      ::replaceExpresion( @cDocument, cExpresion )

   end

Return ( cDocument )



static FUNCTION TGenMailing_getMessage( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local cExpresion
   local cDocument     := ::oRichEdit:getText()

   while .T.

      cExpresion       := ::getExpression( cDocument )
      if empty(cExpresion)
         exit
      end

      ::replaceExpresion( @cDocument, cExpresion )

   end

Return ( cDocument )



static FUNCTION TGenMailing_getExpression( cDocument ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local nAtEnd         := At( "}", cDocument )
   local nAtInit        := At( "{", cDocument )
   local cExpresion     := ""

   if ( nAtInit <> 0 .AND. nAtEnd <> 0 )
      cExpresion     := SubStr( cDocument, nAtInit, ( nAtEnd - nAtInit ) + 1 )
   end

Return ( cExpresion )



static FUNCTION TGenMailing_replaceExpresion( cDocument, cExpresion ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local nScan
   local oError
   local oBlock
   local cExpresionToSearch






      cExpresionToSearch      := Alltrim( SubStr( cExpresion, 2, len( cExpresion ) - 2 ) )

      if ( "(" $ cExpresionToSearch .AND. ")" $ cExpresionToSearch )


         cDocument            := StrTran( cDocument, cExpresion, cValToText( eval( &( "{| Self | " + cExpresionToSearch + "}" ), Self ) ) )

      else

         nScan                := aScan( ::aItems, {|a| alltrim( a[ 5 ] ) == cExpresionToSearch .OR. alltrim( a[ 5 ] ) == HtmlEntities( cExpresionToSearch ) } )
         if nScan <> 0
            cDocument         := StrTran( cDocument, cExpresion, alltrim( cValToChar( ( ::getWorkArea() )->( eval( Compile( ::aItems[ nScan, 1 ] ) ) ) ) ) )
         else
            cDocument         := StrTran( cDocument, cExpresion, "" )
         end

      end








Return ( Self )



static FUNCTION TGenMailing_addDatabaseList( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   if ( ::getWorkArea() )->lMail
      ::addSelectedList()
   end

Return ( Self )



static FUNCTION TGenMailing_hashDatabaseList( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local hashDatabaseList := {=>}

   hSet( hashDatabaseList, "mail", ::getRecipients() )
   hSet( hashDatabaseList, "mailcc", ::getCopia() )
   hSet( hashDatabaseList, "mailcco", ::getCopiaOculta() )
   hSet( hashDatabaseList, "subject", ::getAsunto() )
   hSet( hashDatabaseList, "attachments", ::getAdjunto() )
   hSet( hashDatabaseList, "message", ::getMessageHTML() )
   hSet( hashDatabaseList, "postSend", ::getPostSend() )
   hSet( hashDatabaseList, "postError", ::getPostError() )
   hSet( hashDatabaseList, "cargo", ::getCargo() )

   ::oSendMail:readyMessage( hashDatabaseList )

Return ( hashDatabaseList )



static FUNCTION TGenMailing_getSelectedList( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local nSelect

   CursorWait()

   ::aMailingList    := {}

   for each nSelect in ::aSelected
      ::gotoRecord( nSelect )
      ::addSelectedList()
   next

   CursorArrow()

Return ( ::aMailingList )



static FUNCTION TGenMailing_getTextSelectedMails( ) ; local Self AS CLASS TGenMailing := QSelf() AS CLASS TGenMailing

   local nSelect
   local nMails            := 0
   local cSelectedMails    := ""

   CursorWait()

   for each nSelect in ::aSelected

      ::gotoRecord( nSelect )

      if !empty( ::getRecipients() )
         nMails++
         cSelectedMails    += alltrim( ::getRecipients() ) + ";"
      end

   next

   cSelectedMails          := alltrim( str( nMails ) ) + " registros ( " + cSelectedMails + " )"

   CursorArrow()

Return ( cSelectedMails )
