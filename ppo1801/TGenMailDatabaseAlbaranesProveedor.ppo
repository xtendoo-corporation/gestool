#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\mail\TGenMailDatabaseAlbaranesProveedor.prg"
_HB_CLASS TGenMailingDatabaseAlbaranesProveedor ; function TGenMailingDatabaseAlbaranesProveedor ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TGenMailingDatabaseAlbaranesProveedor", iif( .T., { @TGenMailingDatabase() }, { @HBObject() } ), @TGenMailingDatabaseAlbaranesProveedor() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TGenMailingDatabaseAlbaranesProveedor_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getAdjunto(); oClass:AddMethod( "getAdjunto", @TGenMailingDatabaseAlbaranesProveedor_getAdjunto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CreateIndicencia(); oClass:AddMethod( "CreateIndicencia", @TGenMailingDatabaseAlbaranesProveedor_CreateIndicencia(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TGenMailingDatabaseAlbaranesProveedor ;



static FUNCTION TGenMailingDatabaseAlbaranesProveedor_New( nView ) ; local Self AS CLASS TGenMailingDatabaseAlbaranesProveedor := QSelf() AS CLASS TGenMailingDatabaseAlbaranesProveedor

   ::Create()

   ::Super:New( nView )

   ::setItems( aItmAlbPrv() )

   ::setWorkArea( D():AlbaranesProveedores( nView ) )

   ::setIncidenciaWorkArea( D():AlbaranesProveedoresIncidencias( nView ) )

   ::setTypeDocument( "nAlbPrv" )

   ::setTypeFormat( "AP" )

   ::setFormatoDocumento( cFirstDoc( "AP", D():Documentos( nView ) ) )

   ::setBmpDatabase( "gc_mail_earth_48" )

   ::setAsunto( "Envio de nuestro albarán {Serie del albarán}/{Número del albarán}" )

   ::setBlockRecipients( {|| alltrim( retFld( ( D():AlbaranesProveedores( nView ) )->cCodPrv, D():Proveedores( nView ), "cMeiInt" ) ) } )

Return ( Self )



static FUNCTION TGenMailingDatabaseAlbaranesProveedor_CreateIndicencia( ) ; local Self AS CLASS TGenMailingDatabaseAlbaranesProveedor := QSelf() AS CLASS TGenMailingDatabaseAlbaranesProveedor

   ( ::getIncidenciaWorkArea() )->( dbAppend() )
   ( ::getIncidenciaWorkArea() )->cSerAlb    := ( ::getWorkArea() )->cSerAlb
   ( ::getIncidenciaWorkArea() )->nNumAlb    := ( ::getWorkArea() )->nNumAlb
   ( ::getIncidenciaWorkArea() )->cSufAlb    := ( ::getWorkArea() )->cSufAlb
   ( ::getIncidenciaWorkArea() )->dFecInc    := GetSysDate()





   ( ::getIncidenciaWorkArea() )->mDesInc    := "Albarán " + ( ::getWorkArea() )->cSerAlb + "/" + AllTrim( Str( ( ::getWorkArea() )->nNumAlb ) ) + "/" + ( ::getWorkArea() )->cSufAlb + " enviado por correo." + Chr(13)+Chr(10) + "Destinatario: " + AllTrim( ::cRecipients ) +  Chr(13)+Chr(10) + "Usuario: " + AllTrim( Auth():Codigo() ) + " - " + AllTrim( UsuariosModel():getNombre( Auth():Codigo() ) ) +  Chr(13)+Chr(10) + "Fecha: " + AllTrim( dToc( GetSysDate() ) ) +  Chr(13)+Chr(10) + "Hora: " + AllTrim( GetSysTime() ) +  Chr(13)+Chr(10) + "Adjuntos: " + AllTrim( ::cGetAdjunto )
   ( ::getIncidenciaWorkArea() )->lListo     := .T.
   ( ::getIncidenciaWorkArea() )->lAviso     := .F.
   ( ::getIncidenciaWorkArea() )->( dbUnlock() )

Return ( Self )



static FUNCTION TGenMailingDatabaseAlbaranesProveedor_getAdjunto( ) ; local Self AS CLASS TGenMailingDatabaseAlbaranesProveedor := QSelf() AS CLASS TGenMailingDatabaseAlbaranesProveedor

   if !Empty( ::cGetAdjunto )
      Return ( AllTrim( ::cGetAdjunto ) + ";" + AllTrim( mailReportAlbPrv( ::cFormatoDocumento ) ) )
   end

Return ( mailReportAlbPrv( ::cFormatoDocumento ) )
