#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\mail\TGenMailDatabaseFacturaRectificativaProveedor.prg"
_HB_CLASS TGenMailingDatabaseFacturaRectificativaProveedor ; function TGenMailingDatabaseFacturaRectificativaProveedor ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TGenMailingDatabaseFacturaRectificativaProveedor", iif( .T., { @TGenMailingDatabase() }, { @HBObject() } ), @TGenMailingDatabaseFacturaRectificativaProveedor() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TGenMailingDatabaseFacturaRectificativaProveedor_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getAdjunto(); oClass:AddMethod( "getAdjunto", @TGenMailingDatabaseFacturaRectificativaProveedor_getAdjunto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CreateIndicencia(); oClass:AddMethod( "CreateIndicencia", @TGenMailingDatabaseFacturaRectificativaProveedor_CreateIndicencia(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor ;



static FUNCTION TGenMailingDatabaseFacturaRectificativaProveedor_New( nView ) ; local Self AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor := QSelf() AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor

   ::Create()

   ::Super:New( nView )

   ::setItems( aItmRctPrv() )

   ::setWorkArea( D():FacturasRectificativasProveedores( nView ) )

   ::setIncidenciaWorkArea( D():FacturasRectificativasProveedoresIncidencias( nView ) )

   ::setTypeDocument( "nFacRec" )

   ::setTypeFormat( "TP" )

   ::setFormatoDocumento( cFirstDoc( "TP", D():Documentos( nView ) ) )

   ::setBmpDatabase( "gc_document_text_user2_48" )

   ::setAsunto( "Envio de nuestra factura {Serie de factura}/{Número de factura}" )

   ::setBlockRecipients( {|| alltrim( retFld( ( D():FacturasRectificativasProveedores( nView ) )->cCodPrv, D():Proveedores( nView ), "cMeiInt" ) ) } )

Return ( Self )



static FUNCTION TGenMailingDatabaseFacturaRectificativaProveedor_CreateIndicencia( ) ; local Self AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor := QSelf() AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor

   ( ::getIncidenciaWorkArea() )->( dbAppend() )
   ( ::getIncidenciaWorkArea() )->cSerFac    := ( ::getWorkArea() )->cSerFac
   ( ::getIncidenciaWorkArea() )->nNumFac    := ( ::getWorkArea() )->nNumFac
   ( ::getIncidenciaWorkArea() )->cSufFac    := ( ::getWorkArea() )->cSufFac
   ( ::getIncidenciaWorkArea() )->dFecInc    := GetSysDate()





   ( ::getIncidenciaWorkArea() )->mDesInc    := "Rectificativa " + ( ::getWorkArea() )->cSerFac + "/" + AllTrim( Str( ( ::getWorkArea() )->nNumFac ) ) + "/" + ( ::getWorkArea() )->cSufFac + " enviada por correo." + Chr(13)+Chr(10) + "Destinatario: " + AllTrim( ::cRecipients ) +  Chr(13)+Chr(10) + "Usuario: " + AllTrim( Auth():Codigo() ) + " - " + AllTrim( UsuariosModel():getNombre( Auth():Codigo() ) ) +  Chr(13)+Chr(10) + "Fecha: " + AllTrim( dToc( GetSysDate() ) ) +  Chr(13)+Chr(10) + "Hora: " + AllTrim( GetSysTime() ) +  Chr(13)+Chr(10) + "Adjuntos: " + AllTrim( ::cGetAdjunto )
   ( ::getIncidenciaWorkArea() )->lListo     := .T.
   ( ::getIncidenciaWorkArea() )->lAviso     := .F.
   ( ::getIncidenciaWorkArea() )->( dbUnlock() )

Return ( Self )



static FUNCTION TGenMailingDatabaseFacturaRectificativaProveedor_getAdjunto( ) ; local Self AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor := QSelf() AS CLASS TGenMailingDatabaseFacturaRectificativaProveedor

   if !Empty( ::cGetAdjunto )
      Return ( AllTrim( ::cGetAdjunto ) + ";" + AllTrim( mailReportRctPrv( ::cFormatoDocumento ) ) )
   end

Return ( mailReportRctPrv( ::cFormatoDocumento ) )
