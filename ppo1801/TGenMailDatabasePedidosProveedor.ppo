#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\mail\TGenMailDatabasePedidosProveedor.prg"
_HB_CLASS TGenMailingDatabasePedidosProveedor ; function TGenMailingDatabasePedidosProveedor ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TGenMailingDatabasePedidosProveedor", iif( .T., { @TGenMailingDatabase() }, { @HBObject() } ), @TGenMailingDatabasePedidosProveedor() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TGenMailingDatabasePedidosProveedor_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getAdjunto(); oClass:AddMethod( "getAdjunto", @TGenMailingDatabasePedidosProveedor_getAdjunto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CreateIndicencia(); oClass:AddMethod( "CreateIndicencia", @TGenMailingDatabasePedidosProveedor_CreateIndicencia(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TGenMailingDatabasePedidosProveedor ;



static FUNCTION TGenMailingDatabasePedidosProveedor_New( nView ) ; local Self AS CLASS TGenMailingDatabasePedidosProveedor := QSelf() AS CLASS TGenMailingDatabasePedidosProveedor

   ::Create()

   ::Super:New( nView )

   ::setItems( aItmPedPrv() )

   ::setWorkArea( D():PedidosProveedores( nView ) )

   ::setIncidenciaWorkArea( D():PedidosProveedoresIncidencias( nView ) )

   ::setTypeDocument( "nPedPrv" )

   ::setTypeFormat( "PP" )

   ::setFormatoDocumento( cFirstDoc( "PP", D():Documentos( nView ) ) )

   ::setBmpDatabase( "gc_businessman_48" )

   ::setAsunto( "Envio de nuestro pedido número {Serie del pedido}/{Número del pedido}" )

   ::setBlockRecipients( {|| alltrim( retFld( ( D():PedidosProveedores( nView ) )->cCodPrv, D():Proveedores( nView ), "cMeiInt" ) ) } )

Return ( Self )



static FUNCTION TGenMailingDatabasePedidosProveedor_CreateIndicencia( ) ; local Self AS CLASS TGenMailingDatabasePedidosProveedor := QSelf() AS CLASS TGenMailingDatabasePedidosProveedor

   ( ::getIncidenciaWorkArea() )->( dbAppend() )
   ( ::getIncidenciaWorkArea() )->cSerPed    := ( ::getWorkArea() )->cSerPed
   ( ::getIncidenciaWorkArea() )->nNumPed    := ( ::getWorkArea() )->nNumPed
   ( ::getIncidenciaWorkArea() )->cSufPed    := ( ::getWorkArea() )->cSufPed
   ( ::getIncidenciaWorkArea() )->dFecInc    := GetSysDate()





   ( ::getIncidenciaWorkArea() )->mDesInc    := "Pedido " + ( ::getWorkArea() )->cSerPed + "/" + AllTrim( Str( ( ::getWorkArea() )->nNumPed ) ) + "/" + ( ::getWorkArea() )->cSufPed + " enviado por correo." + Chr(13)+Chr(10) + "Destinatario: " + AllTrim( ::cRecipients ) +  Chr(13)+Chr(10) + "Usuario: " + AllTrim( Auth():Codigo() ) + " - " + AllTrim( UsuariosModel():getNombre( Auth():Codigo() ) ) +  Chr(13)+Chr(10) + "Fecha: " + AllTrim( dToc( GetSysDate() ) ) +  Chr(13)+Chr(10) + "Hora: " + AllTrim( GetSysTime() ) +  Chr(13)+Chr(10) + "Adjuntos: " + AllTrim( if( ( hb_ischar( ::cGetAdjunto ) .AND. !Empty( ::cGetAdjunto ) ), ::cGetAdjunto, "" ) )
   ( ::getIncidenciaWorkArea() )->lListo     := .T.
   ( ::getIncidenciaWorkArea() )->lAviso     := .F.
   ( ::getIncidenciaWorkArea() )->( dbUnlock() )

Return ( Self )



static FUNCTION TGenMailingDatabasePedidosProveedor_getAdjunto( ) ; local Self AS CLASS TGenMailingDatabasePedidosProveedor := QSelf() AS CLASS TGenMailingDatabasePedidosProveedor

   if !Empty( ::cGetAdjunto )
      Return ( AllTrim( ::cGetAdjunto ) + ";" + AllTrim( mailReportPedPrv( ::cFormatoDocumento ) ) )
   end

Return ( mailReportPedPrv( ::cFormatoDocumento ) )
