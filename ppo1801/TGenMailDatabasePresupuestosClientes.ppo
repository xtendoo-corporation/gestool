#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\mail\TGenMailDatabasePresupuestosClientes.prg"
_HB_CLASS TGenMailingDatabasePresupuestosClientes ; function TGenMailingDatabasePresupuestosClientes ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TGenMailingDatabasePresupuestosClientes", iif( .T., { @TGenMailingDatabase() }, { @HBObject() } ), @TGenMailingDatabasePresupuestosClientes() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TGenMailingDatabasePresupuestosClientes_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getAdjunto(); oClass:AddMethod( "getAdjunto", @TGenMailingDatabasePresupuestosClientes_getAdjunto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CreateIndicencia(); oClass:AddMethod( "CreateIndicencia", @TGenMailingDatabasePresupuestosClientes_CreateIndicencia(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TGenMailingDatabasePresupuestosClientes ;



static FUNCTION TGenMailingDatabasePresupuestosClientes_New( nView ) ; local Self AS CLASS TGenMailingDatabasePresupuestosClientes := QSelf() AS CLASS TGenMailingDatabasePresupuestosClientes

   ::Create()

   ::Super:New( nView )

   ::setItems( aItmPreCli() )

   ::setWorkArea( D():PresupuestosClientes( nView ) )

   ::setIncidenciaWorkArea( D():PresupuestosClientesIncidencias( nView ) )

   ::setTypeDocument( "nPreCli" )

   ::setTypeFormat( "RC" )

   ::setFormatoDocumento( cFirstDoc( "RC", D():Documentos( nView ) ) )

   ::setBmpDatabase( "gc_notebook_user_48" )

   ::setAsunto( "Envio de nuestro presupuesto número {Serie del presupuesto}/{Número del presupuesto}" )

   ::setBlockRecipients( {|| alltrim( retFld( ( D():PresupuestosClientes( ::nView ) )->cCodCli, D():Clientes( ::nView ), "cMeiInt" ) ) } )

Return ( Self )




static FUNCTION TGenMailingDatabasePresupuestosClientes_CreateIndicencia( ) ; local Self AS CLASS TGenMailingDatabasePresupuestosClientes := QSelf() AS CLASS TGenMailingDatabasePresupuestosClientes

   ( ::getIncidenciaWorkArea() )->( dbAppend() )
   ( ::getIncidenciaWorkArea() )->cSerPre    := ( ::getWorkArea() )->cSerPre
   ( ::getIncidenciaWorkArea() )->nNumPre    := ( ::getWorkArea() )->nNumPre
   ( ::getIncidenciaWorkArea() )->cSufPre    := ( ::getWorkArea() )->cSufPre
   ( ::getIncidenciaWorkArea() )->dFecInc    := GetSysDate()





   ( ::getIncidenciaWorkArea() )->mDesInc    := "Presupuesto " + ( ::getWorkArea() )->cSerPre + "/" + AllTrim( Str( ( ::getWorkArea() )->nNumPre ) ) + "/" + ( ::getWorkArea() )->cSufPre + " enviado por correo." +  Chr(13)+Chr(10) + "Destinatario: " + AllTrim( ::cRecipients ) +  Chr(13)+Chr(10) + "Usuario: " + AllTrim( Auth():Codigo() ) + " - " + AllTrim( UsuariosModel():getNombre( Auth():Codigo() ) ) +  Chr(13)+Chr(10) + "Fecha: " + AllTrim( dToc( GetSysDate() ) ) +  Chr(13)+Chr(10) + "Hora: " + AllTrim( GetSysTime() ) +  Chr(13)+Chr(10) + "Adjuntos: " + AllTrim( ::cGetAdjunto )
   ( ::getIncidenciaWorkArea() )->lListo     := .T.
   ( ::getIncidenciaWorkArea() )->lAviso     := .F.
   ( ::getIncidenciaWorkArea() )->( dbUnlock() )

Return ( Self )



static FUNCTION TGenMailingDatabasePresupuestosClientes_getAdjunto( ) ; local Self AS CLASS TGenMailingDatabasePresupuestosClientes := QSelf() AS CLASS TGenMailingDatabasePresupuestosClientes

   if !Empty( ::cGetAdjunto )
      Return ( AllTrim( ::cGetAdjunto ) + ";" + AllTrim( mailReportPreCli( ::cFormatoDocumento ) ) )
   end

Return ( mailReportPreCli( ::cFormatoDocumento ) )
