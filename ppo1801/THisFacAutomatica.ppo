#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 9 ".\.\Prg\THisFacAutomatica.prg"
_HB_CLASS THisFacAutomatica ; function THisFacAutomatica ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "THisFacAutomatica", iif( .T., { @TDet() }, { @HBObject() } ), @THisFacAutomatica() ) ) ;

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @THisFacAutomatica_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles( lExclusive); oClass:AddMethod( "OpenFiles", @THisFacAutomatica_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenService( lExclusive); oClass:AddMethod( "OpenService", @THisFacAutomatica_OpenService(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @THisFacAutomatica_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseService(); oClass:AddMethod( "CloseService", @THisFacAutomatica_CloseService(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS THisFacAutomatica ;



static FUNCTION THisFacAutomatica_DefineFiles( cPath, cVia, lUniqueName, cFileName ) ; local Self AS CLASS THisFacAutomatica := QSelf() AS CLASS THisFacAutomatica

   local oDbf

   If( cPath == nil, cPath := ::cPath, ) ;
   If( lUniqueName == nil, lUniqueName := .F., ) ;
   If( cFileName == nil, cFileName := "FacAutI", ) ;
   If( cVia == nil, cVia := cDriver(), ) ;

   if lUniqueName
      cFileName         := cGetNewFileName( cFileName, , , cPath )
   end

   oDbf := DbfServer( ( cFileName ), ( cFileName ) ):New( ( cFileName ), ( cFileName ), ( cVia ), "líneas de plantillas de ventas automáticas", ( cPath ) )

      oDbf:AddField( "cCodFac", "C", 03, 0,,,,, "Código", .F.,, .F., {} )
      oDbf:AddField( "dFecha", "D", 08, 0,,,,, "Fecha de creación", .F.,, .F., {} )
      oDbf:AddField( "cHora", "C", 05, 2,,,,, "Hora de creación", .F.,, .F., {} )
      oDbf:AddField( "cFichero", "C", 255, 0,,,,, "Fichero con el resultado", .F.,, .F., {} )

      oDbf:AddIndex( "cCodFac", ( cFileName ), "cCodFac",,, .F., .F.,,,, .T., .F. )



RETURN ( oDbf )



static FUNCTION THisFacAutomatica_OpenFiles( lExclusive, cPath ) ; local Self AS CLASS THisFacAutomatica := QSelf() AS CLASS THisFacAutomatica

   local lOpen             := .T.
   local oBlock            := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   If( lExclusive == nil, lExclusive := .F., ) ;

   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::oDbf            := ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !lExclusive )

   RECOVER

      lOpen                := .F.

      ::CloseFiles()

      msgStop( "Imposible abrir todas las bases de datos" )

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION THisFacAutomatica_OpenService( lExclusive, cPath ) ; local Self AS CLASS THisFacAutomatica := QSelf() AS CLASS THisFacAutomatica

   local lOpen          := .T.
   local oError
   local oBlock         := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   If( lExclusive == nil, lExclusive := .F., ) ;

   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::oDbf         := ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !lExclusive )

   RECOVER USING oError

      lOpen             := .F.

      ::CloseService()

      msgStop( "Imposible abrir todas las bases de datos" + Chr(13)+Chr(10) + ErrorMessage( oError ) )

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION THisFacAutomatica_CloseFiles( ) ; local Self AS CLASS THisFacAutomatica := QSelf() AS CLASS THisFacAutomatica

   if ::oDbf <> nil .AND. ::oDbf:Used()
      ::oDbf:End()
   end

   ::oDbf         := nil

RETURN ( .T. )



static FUNCTION THisFacAutomatica_CloseService( ) ; local Self AS CLASS THisFacAutomatica := QSelf() AS CLASS THisFacAutomatica

   if ::oDbf <> nil .AND. ::oDbf:Used()
      ::oDbf:End()
   end

   ::oDbf   := nil

RETURN ( .T. )
