#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\TInfseanum.prg"
_HB_CLASS TInfSeaNum ; function TInfSeaNum ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TInfSeaNum", iif( .T., { @TInfGen() }, { @HBObject() } ), @TInfSeaNum() ) ) ;

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TInfSeaNum_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @TInfSeaNum_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TInfSeaNum_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TInfSeaNum_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TInfSeaNum_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TInfSeaNum ;



static FUNCTION TInfSeaNum_OpenFiles( ) ; local Self AS CLASS TInfSeaNum := QSelf() AS CLASS TInfSeaNum

RETURN ( Self )



static FUNCTION TInfSeaNum_CloseFiles( ) ; local Self AS CLASS TInfSeaNum := QSelf() AS CLASS TInfSeaNum

RETURN ( Self )



static FUNCTION TInfSeaNum_Create( ) ; local Self AS CLASS TInfSeaNum := QSelf() AS CLASS TInfSeaNum

   ::AddField( "cTipDoc",  "C",27, 0, {|| "@!" },     "Tip. Doc.",    .T., "Tipo de documento",     25, .F.  )
   ::AddField( "cNumDoc",  "C",12, 0, {|| "@!" },     "Num. Doc.",    .T., "Número del documento",  15, .F.  )
   ::AddField( "cCodArt",  "C",18, 0, {|| "@!" },     "Código artículo",    .T., "Código del artículo",   18, .F.  )
   ::AddField( "dFecDoc",  "D", 8, 0, {|| "@!" },     "Fecha",        .T., "Fecha del documento",   12, .F.  )
   ::AddField( "cCodCli",  "C",12, 0, {|| "@!" },     "Cod. Cli/Prv", .T., "Código del Cli/Prv",    15, .F.  )
   ::AddField( "cCliPrv",  "C",50, 0, {|| "@!" },     "Nom. Cli/Prv", .T., "Nombre del Cli/Prv",    50, .F.  )
   ::AddField( "cCodObr",  "C",10, 0, {|| "@!" },     "Dirección",         .T., "Dirección",                  10, .F.  )

   ::AddTmpIndex ( "dFecDoc", "dFecDoc" )

   ::lDefSerInf := .F.

RETURN ( Self )



static FUNCTION TInfSeaNum_lResource( cFld ) ; local Self AS CLASS TInfSeaNum := QSelf() AS CLASS TInfSeaNum

   if !::StdResource( "INF_TRAZALOTE" )
      return .F.
   end

   ::oBtnFilter:Disable()

   ::oMtrInf:SetTotal( ::xOthers:Lastrec() )

RETURN .T.






static FUNCTION TInfSeaNum_lGenerate( ) ; local Self AS CLASS TInfSeaNum := QSelf() AS CLASS TInfSeaNum

   ::oDlg:Disable()
   ::oDbf:Zap()

   ::xOthers:GoTop()

   ::aHeader      := {  {|| "Fecha   : " + Dtoc( Date() ) } }

   while !::xOthers:Eof()


      if ::xOthers:dFecDoc >= ::dIniInf                                                               .AND. ::xOthers:dFecDoc <= ::dFinInf

         ::oDbf:Append()

         ::oDbf:cTipDoc     := AllTrim( ::xOthers:cTipDoc )
         ::oDbf:cNumDoc     := ::xOthers:cNumDoc
         ::oDbf:cCodArt     := ::xOthers:cCodArt
         ::oDbf:dFecDoc     := ::xOthers:dFecDoc
         ::oDbf:cCodCli     := ::xOthers:cCodCli
         ::oDbf:cCliPrv     := ::xOthers:cCliPrv
         ::oDbf:cCodObr     := ::xOthers:cCodObr

         ::oDbf:Save()

      end

      ::xOthers:Skip()

      ::oMtrInf:AutoInc( ::xOthers:OrdKeyNo() )

   end

   ::oMtrInf:AutoInc( ::xOthers:LastRec() )

   ::oDlg:Enable()

   ::oBtnFilter:Disable()

   ::xOthers:GoTop()

RETURN ( ::oDbf:LastRec() > 0 )
