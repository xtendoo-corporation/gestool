#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 5 ".\.\Prg\TItemGroup.prg"
_HB_CLASS TItemGroup ; function TItemGroup ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TItemGroup", iif( .F., { }, { @HBObject() } ), @TItemGroup() ) ) ;

   _HB_MEMBER { Nombre } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Nombre"}, .F. )

   _HB_MEMBER { Expresion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Expresion"}, .F. )

   _HB_MEMBER { Valor } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Valor"}, .F. )

   _HB_MEMBER { Todos } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Todos"}, .F. )
   _HB_MEMBER { Desde } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Desde"}, .F. )
   _HB_MEMBER { Hasta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Hasta"}, .F. )

   _HB_MEMBER { HelpDesde } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"HelpDesde"}, .F. )
   _HB_MEMBER { HelpHasta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"HelpHasta"}, .F. )

   _HB_MEMBER { ValidDesde } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"ValidDesde"}, .F. )
   _HB_MEMBER { ValidHasta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"ValidHasta"}, .F. )

   _HB_MEMBER { TextDesde } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"TextDesde"}, .F. )
   _HB_MEMBER { TextHasta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"TextHasta"}, .F. )

   _HB_MEMBER { Imagen } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Imagen"}, .F. )
   _HB_MEMBER { bCondition } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bCondition"}, .F. )
   _HB_MEMBER { lImprimir } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lImprimir"}, .F. )

   _HB_MEMBER { cPicDesde } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cPicDesde"}, .F. )
   _HB_MEMBER { cPicHasta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cPicHasta"}, .F. )

   _HB_MEMBER { cBitmap } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cBitmap"}, .F. )

   _HB_MEMBER { bValidMayorIgual } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bValidMayorIgual"}, .F. )
   _HB_MEMBER { bValidMenorIgual } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bValidMenorIgual"}, .F. )

   _HB_MEMBER ValidMayorIgual( uVal, uMayor); oClass:AddMethod( "ValidMayorIgual", @TItemGroup_ValidMayorIgual(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER ValidMenorIgual( uVal, uMenor); oClass:AddMethod( "ValidMenorIgual", @TItemGroup_ValidMenorIgual(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER GetDesde(); oClass:AddInline( "GetDesde", {|Self | ( ( Self ) ), ( if( Empty( ::Desde ), "", alltrim( ::Desde ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER GetHasta(); oClass:AddInline( "GetHasta", {|Self | ( ( Self ) ), ( if( Empty( ::Hasta ), "", alltrim( ::Hasta ) ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TItemGroup ;



static FUNCTION TItemGroup_ValidMayorIgual( uVal, uMayor ) ; local Self AS CLASS TItemGroup := QSelf() AS CLASS TItemGroup

   if IsBlock( ::bValidMayorIgual )
      Return ( Eval( ::bValidMayorIgual, uVal, uMayor ) )
   end

Return ( .T. )



static FUNCTION TItemGroup_ValidMenorIgual( uVal, uMenor ) ; local Self AS CLASS TItemGroup := QSelf() AS CLASS TItemGroup

   if IsBlock( ::bValidMenorIgual )
      Return ( Eval( ::bValidMenorIgual, uVal, uMenor ) )
   end

Return ( .T. )




_HB_CLASS TItemGroupArticulo ; function TItemGroupArticulo ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TItemGroupArticulo", iif( .T., { @TItemGroup() }, { @HBObject() } ), @TItemGroupArticulo() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TItemGroupArticulo_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TItemGroupArticulo ;



static FUNCTION TItemGroupArticulo_New( nView ) ; local Self AS CLASS TItemGroupArticulo := QSelf() AS CLASS TItemGroupArticulo

   ::Nombre       := "Artículo"
   ::Desde        := Space( 18 )
   ::Hasta        := Replicate( "Z", 18 )
   ::cPicDesde    := Replicate( "#", 18 )
   ::cPicHasta    := Replicate( "#", 18 )
   ::TextDesde    := {|| RetFld( ::Desde, D():Articulos( nView ), "Nombre", "Codigo" ) }
   ::TextHasta    := {|| RetFld( ::Hasta, D():Articulos( nView ), "Nombre", "Codigo" ) }
   ::HelpDesde    := {|oGet| BrwArticulo( oGet, , , .F. ) }
   ::HelpHasta    := {|oGet| BrwArticulo( oGet, , , .F. ) }
   ::ValidDesde   := {|oGet| cArticulo( oGet, D():Articulos( nView ) ) }
   ::ValidHasta   := {|oGet| cArticulo( oGet, D():Articulos( nView ) ) }
   ::cBitmap      := "gc_object_cube_16"

Return ( Self )




_HB_CLASS TItemGroupFamilia ; function TItemGroupFamilia ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TItemGroupFamilia", iif( .T., { @TItemGroup() }, { @HBObject() } ), @TItemGroupFamilia() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TItemGroupFamilia_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TItemGroupFamilia ;



static FUNCTION TItemGroupFamilia_New( nView ) ; local Self AS CLASS TItemGroupFamilia := QSelf() AS CLASS TItemGroupFamilia

   ::Nombre       := "Familia"
   ::Desde        := Space( 16 )
   ::Hasta        := Replicate( "Z", 16 )
   ::cPicDesde    := "@!"
   ::cPicHasta    := "@!"
   ::TextDesde    := {|| RetFld( ::Desde, D():Familias( nView ), "cNomFam", "cCodFam" ) }
   ::TextHasta    := {|| RetFld( ::Hasta, D():Familias( nView ), "cNomFam", "cCodFam" ) }
   ::HelpDesde    := {|oGet| BrwFamilia( oGet ) }
   ::HelpHasta    := {|oGet| BrwFamilia( oGet ) }
   ::ValidDesde   := {|oGet| cFamilia( oGet, D():Familias( nView ) ) }
   ::ValidHasta   := {|oGet| cFamilia( oGet, D():Familias( nView ) ) }
   ::cBitmap      := "gc_cubes_16"

Return ( Self )




_HB_CLASS TItemGroupTemporada ; function TItemGroupTemporada ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TItemGroupTemporada", iif( .T., { @TItemGroup() }, { @HBObject() } ), @TItemGroupTemporada() ) ) ;

   _HB_MEMBER New( nView); oClass:AddMethod( "New", @TItemGroupTemporada_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TItemGroupTemporada ;



static FUNCTION TItemGroupTemporada_New( nView ) ; local Self AS CLASS TItemGroupTemporada := QSelf() AS CLASS TItemGroupTemporada

   ::Nombre       := "Temporadas"
   ::Desde        := Space( 3 )
   ::Hasta        := Replicate( "Z", 3 )
   ::cPicDesde    := "@!"
   ::cPicHasta    := "@!"
   ::TextDesde    := {|| RetFld( ::Desde, D():Temporadas( nView ), "cNombre", "Codigo" ) }
   ::TextHasta    := {|| RetFld( ::Hasta, D():Temporadas( nView ), "cNombre", "Codigo" ) }
   ::HelpDesde    := {|oGet| BrwTemporada( oGet ) }
   ::HelpHasta    := {|oGet| BrwTemporada( oGet ) }
   ::ValidDesde   := {|oGet| cTemporada( oGet, D():Temporadas( nView ) ) }
   ::ValidHasta   := {|oGet| cTemporada( oGet, D():Temporadas( nView ) ) }
   ::cBitmap      := "gc_cloud_sun_16"

Return ( Self )




_HB_CLASS TItemGroupFabricante ; function TItemGroupFabricante ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TItemGroupFabricante", iif( .T., { @TItemGroup() }, { @HBObject() } ), @TItemGroupFabricante() ) ) ;

   _HB_MEMBER New( nView, oFabricante); oClass:AddMethod( "New", @TItemGroupFabricante_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TItemGroupFabricante ;



static FUNCTION TItemGroupFabricante_New( nView, oFabricante ) ; local Self AS CLASS TItemGroupFabricante := QSelf() AS CLASS TItemGroupFabricante

   ::Nombre       := "Fabricante"
   ::Desde        := Space( 3 )
   ::Hasta        := Replicate( "Z", 3 )
   ::cPicDesde    := "@!"
   ::cPicHasta    := "@!"
   ::TextDesde    := {|| oRetFld( ::Desde, oFabricante:oDbf, "cNomFab", "cCodFab" ) }
   ::TextHasta    := {|| oRetFld( ::Hasta, oFabricante:oDbf, "cNomFab", "cCodFab" ) }
   ::HelpDesde    := {|oGet| oFabricante:Buscar( oGet ) }
   ::HelpHasta    := {|oGet| oFabricante:Buscar( oGet ) }
   ::ValidDesde   := {|oGet| oFabricante:Existe( oGet, , "cNomFab", .T., .T., "0" ) }
   ::ValidHasta   := {|oGet| oFabricante:Existe( oGet, , "cNomFab", .T., .T., "0" ) }
   ::cBitmap      := "gc_bolt_16"

Return ( Self )




_HB_CLASS TItemGroupTipoArticulo ; function TItemGroupTipoArticulo ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TItemGroupTipoArticulo", iif( .T., { @TItemGroup() }, { @HBObject() } ), @TItemGroupTipoArticulo() ) ) ;

   _HB_MEMBER New( nView, oTipoArticulo); oClass:AddMethod( "New", @TItemGroupTipoArticulo_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TItemGroupTipoArticulo ;



static FUNCTION TItemGroupTipoArticulo_New( nView, oTipoArticulo ) ; local Self AS CLASS TItemGroupTipoArticulo := QSelf() AS CLASS TItemGroupTipoArticulo

   ::Nombre       := "Tipo artículo"
   ::Desde        := Space( 4 )
   ::Hasta        := Replicate( "Z", 4 )
   ::cPicDesde    := "@!"
   ::cPicHasta    := "@!"
   ::TextDesde    := {|| oRetFld( ::Desde, oTipoArticulo:oDbf, "cNomTip", "cCodTip" ) }
   ::TextHasta    := {|| oRetFld( ::Hasta, oTipoArticulo:oDbf, "cNomTip", "cCodTip" ) }
   ::HelpDesde    := {|oGet| oTipoArticulo:Buscar( oGet ) }
   ::HelpHasta    := {|oGet| oTipoArticulo:Buscar( oGet ) }
   ::ValidDesde   := {|oGet| oTipoArticulo:Existe( oGet, , "cNomTip", .T., .T., "0" ) }
   ::ValidHasta   := {|oGet| oTipoArticulo:Existe( oGet, , "cNomTip", .T., .T., "0" ) }
   ::cBitmap      := "gc_objects_16"

Return ( Self )
