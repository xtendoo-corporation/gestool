#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\TMasterDetailGuid.prg"
_HB_CLASS TMasterDetailGuid ; function TMasterDetailGuid ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TMasterDetailGuid", iif( .T., { @TMasDet() }, { @HBObject() } ), @TMasterDetailGuid() ) ) ;

   _HB_MEMBER { cGuid } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGuid"}, .F. )

   _HB_MEMBER newGuid(); oClass:AddInline( "newGuid", {|Self | ( ( Self ) ), ( ::setGuid( win_uuidcreatestring() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER setGuid(); oClass:AddInline( "setGuid", {|Self, cGuid | ( ( Self ) ), ( ::cGuid  := cGuid ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER getGuid(); oClass:AddInline( "getGuid", {|Self | ( ( Self ) ), ( ::cGuid ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Append( oBrw); oClass:AddMethod( "Append", @TMasterDetailGuid_Append(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER endAppend( lAppend); oClass:AddMethod( "endAppend", @TMasterDetailGuid_endAppend(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER LoadDetails(); oClass:AddMethod( "LoadDetails", @TMasterDetailGuid_LoadDetails(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TMasterDetailGuid ;



static FUNCTION TMasterDetailGuid_Append( oBrw ) ; local Self AS CLASS TMasterDetailGuid := QSelf() AS CLASS TMasterDetailGuid

   local lAppend
   local lTrigger

   if ::lMinimize .AND. !empty( ::oWndBrw )
      ::oWndBrw:Minimize()
   end

   if ::bOnPreAppend <> nil
      lTrigger := Eval( ::bOnPreAppend, Self )
      if Valtype( lTrigger ) == "L" .AND. !lTrigger
         return .F.
      end
   end

   ::nMode        := 1

   ::newGuid()

   ::oDbf:Blank()
   ::oDbf:SetDefault()

   ::oDbf:cGuid   := ::getGuid()

   ::LoadDetails( .F. )

   lAppend        := ::Resource( 1 )

   if ::lAutoActions
      ::EndAppend( lAppend )
   end

   if ::lMinimize .AND. !empty( ::oWndBrw )
      ::oWndBrw:Maximize()
      ::oWndBrw:Refresh()
   end

   if lAppend .AND. !empty( oBrw )
      oBrw:Refresh()
   end

   if ::bOnPostAppend <> nil
      Eval( ::bOnPostAppend, Self )
   end

return ( lAppend )



static FUNCTION TMasterDetailGuid_endAppend( lAppend ) ; local Self AS CLASS TMasterDetailGuid := QSelf() AS CLASS TMasterDetailGuid

   if lAppend

      ::getNewCount()

      ::oDbf:Insert()

      ::SaveDetails( 1 )

   else

      ::oDbf:Cancel()

   end

   if !empty( ::oWndBrw )
      ::oWndBrw:Refresh()
   end

   ::CancelDetails()

return ( lAppend )



static FUNCTION TMasterDetailGuid_LoadDetails( ) ; local Self AS CLASS TMasterDetailGuid := QSelf() AS CLASS TMasterDetailGuid

   if !hb_isarray( ::oDbfDet )
      RETURN ( Self )
   end

   msgalert( "LoadDetails" )

   aSend( ::oDbfDet, "Load()" )

RETURN ( Self )
