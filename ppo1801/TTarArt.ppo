#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\TTarArt.prg"
_HB_CLASS TarArt ; function TarArt ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TarArt", iif( .T., { @TInfGen() }, { @HBObject() } ), @TarArt() ) ) ;

   _HB_MEMBER { AS OBJECT oCliAtp } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCliAtp"}, .F. )
   _HB_MEMBER { AS OBJECT oDbfKit } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfKit"}, .F. )
   _HB_MEMBER { AS OBJECT oDbfFam } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfFam"}, .F. )

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TarArt_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TarArt_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TarArt_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @TarArt_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TarArt_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TarArt ;



static FUNCTION TarArt_Create( ) ; local Self AS CLASS TarArt := QSelf() AS CLASS TarArt

   ::AddField(  "cCodCli", "C",  12, 0, {|| "@!" },         "Cod. Cli.",                 .T., "Cod. cliente"        ,  12, .F.  )
   ::AddField(  "cNomCli", "C",  50, 0, {|| "@!" },         "Nom. Cli.",                 .T., "Nombre cliente"      ,  40, .F.  )
   ::AddField(  "cCodArt", "C",  18, 0, {|| "@!" },         "Cod.",                      .F., "Cod. artículo"       ,  18, .F.  )
   ::AddField(  "cNomArt", "C", 100, 0, {|| "@!" },         "Artículo-familia",          .F., "Artículo-familia"    ,  40, .F.  )
   ::AddField(  "nPrcCos", "N",  16, 6, {|| ::cPicCom },    "Costo",                     .T., "Costo"               ,  10, .F.  )
   ::AddField(  "nPrcArt1","N",  19, 6, {|| ::cPicImp },    "Precio 1",                  .T., "Precio 1"            ,  10, .F.  )
   ::AddField(  "nPrcArt2","N",  19, 6, {|| ::cPicImp },    "Precio 2",                  .F., "Precio 2"            ,  10, .F.  )
   ::AddField(  "nPrcArt3","N",  19, 6, {|| ::cPicImp },    "Precio 3",                  .F., "Precio 3"            ,  10, .F.  )
   ::AddField(  "nPrcArt4","N",  19, 6, {|| ::cPicImp },    "Precio 4",                  .F., "Precio 4"            ,  10, .F.  )
   ::AddField(  "nPrcArt5","N",  19, 6, {|| ::cPicImp },    "Precio 5",                  .F., "Precio 5"            ,  10, .F.  )
   ::AddField(  "nPrcArt6","N",  19, 6, {|| ::cPicImp },    "Precio 6",                  .F., "Precio 6"            ,  10, .F.  )
   ::AddField(  "nDtoArt", "N",   6, 2, {|| "@ 999.99" },   "%Dto",                      .T., "Dto% artículo"       ,   6, .F.  )
   ::AddField(  "nDtoPrm", "N",   6, 2, {|| "@ 999.99" },   "%Dto Prm",                  .F., "Dto% promoción"      ,   6, .F.  )
   ::AddField(  "nDtoDiv", "N",  19, 6, {|| ::cPicImp },    "Dto. lineal",               .F., "Dto. lineal"         ,  10, .F.  )
   ::AddField(  "nComAge", "N",   6, 2, {|| "@ 999.99" },   "Com. age.",                 .F., "Comisión agente"     ,   6, .F.  )
   ::AddField(  "dFecIni", "D",   8, 0, {|| "" },           "Inicio",                    .F., "Fecha inicio"        ,   8, .F.  )
   ::AddField(  "dFecFin", "D",   8, 0, {|| "" },           "Fin",                       .F., "Fecha fin"           ,   8, .F.  )

   ::AddTmpIndex( "CCODART", "CCODART + CCODCLI" )

   ::AddGroup( {|| ::oDbf:cCodArt }, {|| "Artículo : " + Rtrim( ::oDbf:cCodArt ) + " - " + ::oDbf:cNomArt }, {|| "" } )

RETURN ( Self )



static FUNCTION TarArt_OpenFiles( ) ; local Self AS CLASS TarArt := QSelf() AS CLASS TarArt

   local lOpen    := .T.
   local oBlock   := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   BEGIN SEQUENCE

   ::oCliAtp := DbfServer( "CLIATP.DBF", ):NewOpen( "CLIATP.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oCliAtp:AddBag( "CLIATP.CDX" ) ; ::oCliAtp:AddBag( ) ; ::oCliAtp:AutoIndex()

   ::oDbfFam := DbfServer( "FAMILIAS.DBF", ):NewOpen( "FAMILIAS.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oDbfFam:AddBag( "FAMILIAS.CDX" ) ; ::oDbfFam:AddBag( ) ; ::oDbfFam:AutoIndex()

   ::oDbfKit := DbfServer( "ARTKIT.DBF", ):NewOpen( "ARTKIT.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oDbfKit:AddBag( "ARTKIT.CDX" ) ; ::oDbfKit:AddBag( ) ; ::oDbfKit:AutoIndex()

   RECOVER

      msgStop( "Imposible abrir todas las bases de datos" )
      ::CloseFiles()
      lOpen          := .F.

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TarArt_CloseFiles( ) ; local Self AS CLASS TarArt := QSelf() AS CLASS TarArt

   if !Empty( ::oCliAtp ) .AND. ::oCliAtp:Used()
      ::oCliAtp:End()
   end

   if !Empty( ::oDbfFam ) .AND. ::oDbfFam:Used()
      ::oDbfFam:End()
   end

   if !Empty( ::oDbfKit ) .AND. ::oDbfKit:Used()
      ::oDbfKit:End()
   end

   ::oCliAtp   := nil
   ::oDbfFam   := nil
   ::oDbfKit   := nil

RETURN ( Self )



static FUNCTION TarArt_lResource( cFld ) ; local Self AS CLASS TarArt := QSelf() AS CLASS TarArt

   ::lDefSerInf   := .F.

   if !::StdResource( "INF_ARTATP" )
      return .F.
   end





   if !::lDefArtInf( 110, 111, 120, 121, 130 )
      return .F.
   end

   if !::oDefCliInf( 70, 80, 90, 100, , 600 )
      return .F.
   end





   ::oMtrInf:SetTotal( ::oCliAtp:Lastrec() )

   ::oBtnFilter:Disable()

RETURN .T.






static FUNCTION TarArt_lGenerate( ) ; local Self AS CLASS TarArt := QSelf() AS CLASS TarArt

   ::oDlg:Disable()
   ::oBtnCancel:Enable()
   ::oDbf:Zap()





   ::aHeader   := {  {|| "Fecha    : " + Dtoc( Date() ) }, {|| "Periodo  : " + Dtoc( ::dIniInf ) + " > " + Dtoc( ::dFinInf ) }, {|| "Artículos: " + if( ::lAllArt, "Todos", Rtrim( ::cArtOrg ) + " > " + Rtrim( ::cArtDes ) ) }, {|| "Clientes : " + if( ::lAllCli, "Todos", Rtrim( ::cCliOrg ) + " > " + Rtrim( ::cCliDes ) ) }, {|| "Divisa   : " + ::cDivInf + " - " + cNomDiv( ::cDivInf, ::oDbfDiv:cAlias ) }}

   ::oCliAtp:OrdSetFocus( "CCODART" )

   ::oCliAtp:GoTop()

   while !::lBreak .AND. !::oCliAtp:Eof()




      if ( ::oCliAtp:dFecIni >= ::dIniInf .OR. Empty( ::oCliAtp:dFecIni ) .OR. Empty( ::dIniInf ) ) .AND. ( ::oCliAtp:dFecFin <= ::dFinInf .OR. Empty( ::oCliAtp:dFecFin ) .OR. Empty( ::dFinInf ) ) .AND. ( ::lAllCli .OR. ( ::oCliAtp:cCodCli >= ::cCliOrg .AND. ::oCliAtp:cCodCli <= ::cCliDes ) ) .AND. ( ::lAllArt .OR. ( ::oCliAtp:cCodArt >= ::cArtOrg .AND. ::oCliAtp:cCodArt <= ::cArtDes ) )





         ::oDbf:Append()

         ::oDbf:cCodCli       := ::oCliAtp:cCodCli
         ::oDbf:cNomCli       := RetClient( ::oCliAtp:cCodCli, ::oDbfCli )

         if ::oCliAtp:nTipAtp <= 1
            ::oDbf:cCodArt    := ::oCliAtp:cCodArt
            if ::oDbfArt:Seek( ::oCliAtp:cCodArt )
               ::oDbf:nPrcCos := nCosto( nil, ::oDbfArt:cAlias, ::oDbfKit:cAlias, .F., ::cDivInf, ::oDbfDiv:cAlias )
            end
         else
            ::oDbf:cCodArt    := ::oCliAtp:cCodFam
         end

         if ::oCliAtp:nTipAtp <= 1
            ::oDbf:cNomArt    := RetArticulo( ::oCliAtp:cCodArt, ::oDbfArt )
         else
            ::oDbf:cNomArt    := RetFamilia( ::oCliAtp:cCodFam, ::oDbfFam )
         end

         ::oDbf:nPrcArt1      := nCnv2Div( ::oCliAtp:nPrcArt,  cDivEmp(), ::cDivInf )
         ::oDbf:nPrcArt2      := nCnv2Div( ::oCliAtp:nPrcArt2, cDivEmp(), ::cDivInf )
         ::oDbf:nPrcArt3      := nCnv2Div( ::oCliAtp:nPrcArt3, cDivEmp(), ::cDivInf )
         ::oDbf:nPrcArt4      := nCnv2Div( ::oCliAtp:nPrcArt4, cDivEmp(), ::cDivInf )
         ::oDbf:nPrcArt5      := nCnv2Div( ::oCliAtp:nPrcArt5, cDivEmp(), ::cDivInf )
         ::oDbf:nPrcArt6      := nCnv2Div( ::oCliAtp:nPrcArt6, cDivEmp(), ::cDivInf )
         ::oDbf:nDtoArt       := ::oCliAtp:nDtoArt
         ::oDbf:nDtoPrm       := ::oCliAtp:nDprArt
         ::oDbf:nDtoDiv       := ::oCliAtp:nDtoDiv
         ::oDbf:nComAge       := ::oCliAtp:nComAge
         ::oDbf:dFecIni       := ::oCliAtp:dFecIni
         ::oDbf:dFecFin       := ::oCliAtp:dFecFin

         ::oDbf:Save()

      end

      ::oCliAtp:Skip()

      ::oMtrInf:AutoInc( ::oCliAtp:OrdKeyNo() )

   end

   ::oMtrInf:AutoInc( ::oCliAtp:LastRec() )

   ::oDlg:Enable()

   ::oBtnFilter:Disable()

RETURN ( ::oDbf:LastRec() > 0 )
