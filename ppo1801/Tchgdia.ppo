#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Tchgdia.prg"
function ChgDiario( oWnd )

   local oChgDia





   if oWnd <> nil
      SysRefresh(); oWnd:CloseAll(); SysRefresh()
   end

   oChgDia  := TChgDiario():OpenFiles()
   if oChgDia:lOpenFiles

      oChgDia:lGenerate()
      oChgDia:CloseFiles()

   end

return ( nil )



_HB_CLASS TChgDiario ; function TChgDiario ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TChgDiario", iif( .F., { }, { @HBObject() } ), @TChgDiario() ) ) ;

   _HB_MEMBER { lOpenFiles } ; oClass:AddMultiData(, .T., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lOpenFiles"}, .F. )

   _HB_MEMBER { AS OBJECT oDiario } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDiario"}, .F. )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TChgDiario_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TChgDiario_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TChgDiario_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER IsDescuadrado( nAsiento); oClass:AddMethod( "IsDescuadrado", @TChgDiario_IsDescuadrado(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER AjustaAsiento( nAsiento); oClass:AddMethod( "AjustaAsiento", @TChgDiario_AjustaAsiento(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER IsFactura( nAsiento); oClass:AddMethod( "IsFactura", @TChgDiario_IsFactura(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CambiaIva( nAsiento, nDiferencia); oClass:AddMethod( "CambiaIva", @TChgDiario_CambiaIva(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TChgDiario ;



static FUNCTION TChgDiario_OpenFiles( ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   if File( "C:\GrupoSp\DIARIO.DBF" )

      ::oDiario := DbfServer( "DIARIO.DBF", ):NewOpen( "DIARIO.DBF",, ( cDriver() ),, ( "C:\GrupoSp" ), .F., .T., .F., .F. ) ; ::oDiario:AddBag( "DIARIO.CDX" ) ; ::oDiario:AddBag( ) ; ::oDiario:AutoIndex()
      ::oDiario:OrdSetFocus( "NuAsi" )

   else

      MsgStop( "No existe C:\GrupoSp\DIARIO.DBF" )
      ::lOpenFiles         := .F.

   end

RETURN ( Self )



static FUNCTION TChgDiario_CloseFiles( ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   ::oDiario:End()

RETURN ( Self )






static FUNCTION TChgDiario_lGenerate( ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   local n  := 1

   while n <= 26647

      Titulo( Str( n ) )

      if ::IsDescuadrado( n ) .AND. ::IsFactura( n )
         ::AjustaAsiento( n )
      end

      n++

   end

   MsgInfo( "Porceso finalizado con exito." )

RETURN ( Self )



static FUNCTION TChgDiario_IsDescuadrado( nAsiento ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   local nDebe    := 0
   local nHaber   := 0

   if ::oDiario:Seek( nAsiento )
      while nAsiento == ( ::oDiario:cAlias )->Asien

         nDebe    += ( ::oDiario:cAlias )->EuroDebe
         nHaber   += ( ::oDiario:cAlias )->EuroHaber

         ::oDiario:Skip()

      end
   end

RETURN ( Round( nDebe, 2 ) <> Round( nHaber, 2 ) )



static FUNCTION TChgDiario_IsFactura( nAsiento ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   local l430  := .F.
   local l700  := .F.
   local l477  := .F.

   if ::oDiario:Seek( nAsiento )
      while nAsiento == ::oDiario:Asien

         do case
            case SubStr( ::oDiario:SubCta, 1, 3 ) == "430"
               l430  := .T.
            case SubStr( ::oDiario:SubCta, 1, 3 ) == "700"
               l700  := .T.
            case SubStr( ::oDiario:SubCta, 1, 3 ) == "477"
               l477  := .T.
         end

         ::oDiario:Skip()

      end
   end

RETURN ( l430 .OR. l700 .OR. l477 )



static FUNCTION TChgDiario_AjustaAsiento( nAsiento ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   local nCliente := 0
   local nIva     := 0
   local nBase    := 0

   if ::oDiario:Seek( nAsiento )
      while nAsiento == ::oDiario:Asien

         do case
            case SubStr( ::oDiario:SubCta, 1, 3 ) == "430"
               nCliente += ::oDiario:EuroDebe
            case SubStr( ::oDiario:SubCta, 1, 3 ) == "700"
               nIva     += ::oDiario:EuroHaber
            case SubStr( ::oDiario:SubCta, 1, 3 ) == "477"
               nBase    += ::oDiario:EuroHaber
         end

      ::oDiario:Skip()

      end
   end

   ::CambiaIva( nAsiento, nCliente - nBase - nIva )

RETURN ( Self )



static FUNCTION TChgDiario_CambiaIva( nAsiento, nDiferencia ) ; local Self AS CLASS TChgDiario := QSelf() AS CLASS TChgDiario

   ::oDiario:Seek( nAsiento )
   while nAsiento == ::oDiario:Asien

      if SubStr( ::oDiario:SubCta, 1, 3 ) == "700"
         ::oDiario:Load()
         ::oDiario:EuroHaber  += nDiferencia
         ::oDiario:Save()
         exit
      end

      ::oDiario:Skip()

   end

   msgWait( "Proceso " + Str( nAsiento ) + " descuadrado " + Str( nDiferencia ), , 0.0001 )

RETURN ( Self )
