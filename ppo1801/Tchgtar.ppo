#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Tchgtar.prg"
function ChgTarifa( oMenuItem, oWnd )

   local nLevel

   nLevel   := Auth():Level( oMenuItem )

   if nAnd( nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      return nil
   end





   if oWnd <> nil
      SysRefresh(); oWnd:CloseAll(); SysRefresh()
   end

   with object TChgTarifa():New()
               if :OpenFiles()
                  :Resource()
                  :CloseFiles()
               end
   end

return ( nil )



_HB_CLASS TChgTarifa ; function TChgTarifa ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TChgTarifa", iif( .T., { @TInfGen() }, { @HBObject() } ), @TChgTarifa() ) ) ;

   _HB_MEMBER { AS OBJECT oEmp } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oEmp"}, .F. )
   _HB_MEMBER { AS OBJECT oFacCliT } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacCliT"}, .F. )
   _HB_MEMBER { AS OBJECT oFacCliL } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacCliL"}, .F. )
   _HB_MEMBER { AS OBJECT oCliAtp } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCliAtp"}, .F. )
   _HB_MEMBER { cCodEmp } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodEmp"}, .F. )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TChgTarifa_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TChgTarifa_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( cFld); oClass:AddMethod( "Resource", @TChgTarifa_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TChgTarifa_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER PutPrecio(); oClass:AddMethod( "PutPrecio", @TChgTarifa_PutPrecio(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TChgTarifa ;



static FUNCTION TChgTarifa_OpenFiles( cPatEmp ) ; local Self AS CLASS TChgTarifa := QSelf() AS CLASS TChgTarifa

   local lOpen       := .T.
   local oBlock      := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   If( cPatEmp == nil, cPatEmp := cPatEmp(), ) ;

   BEGIN SEQUENCE

      ::oFacCliT     := TDataCenter():oFacCliT()

      ::oFacCliL := DbfServer( "FACCLIL.DBF", ):NewOpen( "FACCLIL.DBF",, ( cDriver() ),, ( cPatEmp ), .F., .T., .F., .F. ) ; ::oFacCliL:AddBag( "FACCLIL.CDX" ) ; ::oFacCliL:AddBag( ) ; ::oFacCliL:AutoIndex()

      ::oCliAtp := DbfServer( "CLIATP.DBF", ):NewOpen( "CLIATP.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oCliAtp:AddBag( "CLIATP.CDX" ) ; ::oCliAtp:AddBag( ) ; ::oCliAtp:AutoIndex()
      ::oCliAtp:OrdSetFocus( "cCodArt" )

   RECOVER

      msgStop( "Imposible abrir todas las bases de datos" )
      ::CloseFiles()

      lOpen          := .F.

   end
   ErrorBlock( oBlock )

RETURN lOpen



static FUNCTION TChgTarifa_CloseFiles( ) ; local Self AS CLASS TChgTarifa := QSelf() AS CLASS TChgTarifa

   if ::oDbfCli <> nil .AND. ::oDbfCli:Used()
      ::oDbfCli:End()
   end

   if ::oDbfEmp <> nil .AND. ::oDbfEmp:Used()
      ::oDbfEmp:End()
   end

   if ::oCliAtp <> nil .AND. ::oCliAtp:Used()
      ::oCliAtp:End()
   end

   if ::oFacCliT <> nil .AND. ::oFacCliT:Used()
      ::oFacCliT:End()
   end

   if ::oFacCliL <> nil .AND. ::oFacCliL:Used()
      ::oFacCliL:End()
   end

RETURN ( Self )



static FUNCTION TChgTarifa_Resource( ) ; local Self AS CLASS TChgTarifa := QSelf() AS CLASS TChgTarifa

   ::oDlg = TDialog():New(,,,,, "GETIMPFAC",, .F.,,,,, oWnd(), .F.,,,,,, .F.,, "::oDlg", nil, )

   ::oDefEmpInf( 90, 91, ::oDlg )





   ::oDefIniInf( 100, ::oDlg )
   ::oDefFinInf( 110, ::oDlg )





   if !::oDefCliInf( 120, 121, 130, 131, ::oDlg )
      Return .F.
   end

   ::oDefMetInf( 140, ::oDlg )

   ::oDefSerInf( ::oDlg )




   TButton():ReDefine( 1, {||( ::lGenerate() )}, ::oDlg,,, .F.,,,, .F. )




   TButton():ReDefine( 2, {||( ::oDlg:end() )}, ::oDlg,,, .F.,,,, .F. )




    TButton():ReDefine( 599, {||( nil )}, ::oDlg,,, .F.,,,, .F. )

   ::oDlg:AddFastKey( 116, {|| ::lGenerate() } )

   ::oDlg:Activate( ::oDlg:bLClicked, ::oDlg:bMoved, ::oDlg:bPainted, .T.,,,, ::oDlg:bRClicked,,, )

RETURN ( Self )






static FUNCTION TChgTarifa_lGenerate( ) ; local Self AS CLASS TChgTarifa := QSelf() AS CLASS TChgTarifa

   ::oDlg:Disable()





   ::oMtrInf:SetTotal( ::oFacCliT:Lastrec() )





   ::oFacCliT:GoTop()
   while ! ::oFacCliT:Eof()





      if ::oFacCliT:dFecFac >= ::dIniInf                                                    .AND. ::oFacCliT:dFecFac <= ::dFinInf                                                    .AND. ::oFacCliT:cCodCli >= ::cCliOrg                                                    .AND. ::oFacCliT:cCodCli <= ::cCliDes                                                    .AND. lChkSer( ::oFacCliT:cSerie, ::aSer )





         if ::oFacCliL:Seek( ::oFacCliT:cSerie + Str( ::oFacCliT:nNumFac ) + ::oFacCliT:cSufFac )

            while ::oFacCliT:cSerie + Str( ::oFacCliT:nNumFac ) + ::oFacCliT:cSufFac == ::oFacCliL:cSerie + Str( ::oFacCliL:nNumFac ) + ::oFacCliL:cSufFac .AND. ! ::oFacCliL:eof()

               if !Empty( ::oFacCliL:cRef )

                  if ::oCliAtp:Seek( ::oFacCliT:cCodCli + ::oFacCliL:cRef )

                     ::oCliAtp:Load()
                     ::PutPrecio()
                     ::oCliAtp:Save()

                  else

                     ::oCliAtp:Append()
                     ::oCliAtp:cCodCli := ::oFacCliT:cCodCli
                     ::oCliAtp:cCodArt := ::oFacCliL:cRef
                     ::PutPrecio()
                     ::oCliAtp:Save()

                  end

               end

               ::oFacCliL:Skip()

            end

         end

      end

      ::oFacCliT:Skip()

      ::oMtrInf:AutoInc()

   end

   ::oMtrInf:AutoInc( ::oFacCliT:LastRec() )

   ::oDlg:Enable()

   MsgInfo( "Porceso finalizado con exito." )

RETURN ( Self )



static FUNCTION TChgTarifa_PutPrecio( ) ; local Self AS CLASS TChgTarifa := QSelf() AS CLASS TChgTarifa

   do case
      case ::oFacCliT:nTarifa == 1
         ::oCliAtp:nPrcArt    := ::oFacCliL:nPreUnit
      case ::oFacCliT:nTarifa == 2
         ::oCliAtp:nPrcArt2   := ::oFacCliL:nPreUnit
      case ::oFacCliT:nTarifa == 3
         ::oCliAtp:nPrcArt3   := ::oFacCliL:nPreUnit
      case ::oFacCliT:nTarifa == 4
         ::oCliAtp:nPrcArt4   := ::oFacCliL:nPreUnit
      case ::oFacCliT:nTarifa == 5
         ::oCliAtp:nPrcArt5   := ::oFacCliL:nPreUnit
      case ::oFacCliT:nTarifa == 6
         ::oCliAtp:nPrcArt6   := ::oFacCliL:nPreUnit
   end

   ::oCliAtp:lAplPre := .T.
   ::oCliAtp:lAplPed := .T.
   ::oCliAtp:lAplAlb := .T.
   ::oCliAtp:lAplFac := .T.

RETURN ( Self )
