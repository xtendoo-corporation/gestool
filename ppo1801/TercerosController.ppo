#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\TercerosController.prg"
_HB_CLASS TercerosController ; function TercerosController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TercerosController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @TercerosController() ) ) ;

   _HB_MEMBER { oDireccionesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDireccionesController"}, .F. )

   _HB_MEMBER { oPaisesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oPaisesController"}, .F. )

   _HB_MEMBER { oAgentesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAgentesController"}, .F. )

   _HB_MEMBER { oFormasPagoController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFormasPagoController"}, .F. )

   _HB_MEMBER { oCuentasRemesasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCuentasRemesasController"}, .F. )

   _HB_MEMBER { oRutasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oRutasController"}, .F. )

   _HB_MEMBER { oClientesGruposController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oClientesGruposController"}, .F. )

   _HB_MEMBER { oContactosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oContactosController"}, .F. )

   _HB_MEMBER { oIncidenciasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oIncidenciasController"}, .F. )

   _HB_MEMBER { oDocumentosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDocumentosController"}, .F. )

   _HB_MEMBER { oCuentasBancariasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCuentasBancariasController"}, .F. )

   _HB_MEMBER { oCamposExtraValoresController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraValoresController"}, .F. )

   _HB_MEMBER { oDescuentosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDescuentosController"}, .F. )

   _HB_MEMBER { oClientesEntidadesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oClientesEntidadesController"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TercerosController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @TercerosController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DireccionesControllerLoadCurrentBuffer(); oClass:AddMethod( "DireccionesControllerLoadCurrentBuffer", @TercerosController_DireccionesControllerLoadCurrentBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DireccionesControllerUpdateBuffer(); oClass:AddMethod( "DireccionesControllerUpdateBuffer", @TercerosController_DireccionesControllerUpdateBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DireccionesControllerDeleteBuffer(); oClass:AddMethod( "DireccionesControllerDeleteBuffer", @TercerosController_DireccionesControllerDeleteBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DireccionesControllerLoadedDuplicateCurrentBuffer(); oClass:AddMethod( "DireccionesControllerLoadedDuplicateCurrentBuffer", @TercerosController_DireccionesControllerLoadedDuplicateCurrentBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DireccionesControllerLoadedDuplicateBuffer(); oClass:AddMethod( "DireccionesControllerLoadedDuplicateBuffer", @TercerosController_DireccionesControllerLoadedDuplicateBuffer(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TercerosController ;



static FUNCTION TercerosController_New( oSenderController ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   ::Super:New( oSenderController)

   ::oBrowseView                 := TercerosBrowseView():New( self )

   ::oRepository                 := TercerosRepository():New( self )

   ::lTransactional              := .T.

   ::oGetSelector                := GetSelector():New( self )

RETURN ( Self )



static FUNCTION TercerosController_End( ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   ::Super:End()

RETURN ( Self )



static FUNCTION TercerosController_DireccionesControllerLoadCurrentBuffer( ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   local idDireccion
   local uuid        := hget( ::oModel:hBuffer, "uuid" )

   if empty( uuid )
      ::oDireccionesController:oModel:insertBuffer()
   end

   idDireccion          := ::oDireccionesController:oModel:getIdWhereParentUuid( uuid )

   if empty( idDireccion )
      ::oDireccionesController:oModel:loadBlankBuffer()
      idDireccion       := ::oDireccionesController:oModel:insertBuffer()
   end

   ::oDireccionesController:oModel:loadCurrentBuffer( idDireccion )

RETURN ( self )



static FUNCTION TercerosController_DireccionesControllerUpdateBuffer( ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   local idDireccion
   local uuid     := hget( ::oModel:hBuffer, "uuid" )

   idDireccion          := ::oDireccionesController:oModel:getIdWhereParentUuid( uuid )
   if empty( idDireccion )
      ::oDireccionesController:oModel:insertBuffer()
      RETURN ( self )
   end

   ::oDireccionesController:oModel:updateBuffer()

RETURN ( self )



static FUNCTION TercerosController_DireccionesControllerDeleteBuffer( ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   local aUuid    := ::getUuidFromRecno( ::oBrowseView:getBrowse():aSelected )

   if empty( aUuid )
      RETURN ( self )
   end

   ::oDireccionesController:oModel:deleteWhereParentUuid( aUuid )

   RETURN ( self )


static FUNCTION TercerosController_DireccionesControllerLoadedDuplicateCurrentBuffer( ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   local uuid
   local idDireccion

   uuid           := hget( ::oModel:hBuffer, "uuid" )

   idDireccion          := ::oDireccionesController:oModel:getIdWhereParentUuid( uuid )
   if empty( idDireccion )
      ::oDireccionesController:oModel:insertBuffer()
      RETURN ( self )
   end

   ::oDireccionesController:oModel:loadDuplicateBuffer( idDireccion )

RETURN ( self )



static FUNCTION TercerosController_DireccionesControllerLoadedDuplicateBuffer( ) ; local Self AS CLASS TercerosController := QSelf() AS CLASS TercerosController

   local uuid     := hget( ::oModel:hBuffer, "uuid" )

   hset( ::oDireccionesController:oModel:hBuffer, "parent_uuid", uuid )

RETURN ( self )








_HB_CLASS TercerosRepository ; function TercerosRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TercerosRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @TercerosRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLTercerosModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TercerosRepository ;