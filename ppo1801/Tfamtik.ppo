#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Tfamtik.prg"
_HB_CLASS TInfFamTik ; function TInfFamTik ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TInfFamTik", iif( .T., { @TInfFam() }, { @HBObject() } ), @TInfFamTik() ) ) ;

   _HB_MEMBER { AS LOGIC lExcMov } ; oClass:AddMultiData( "LOGIC", .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lExcMov"}, .F. )
   _HB_MEMBER { AS OBJECT oTikCliT } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTikCliT"}, .F. )
   _HB_MEMBER { AS OBJECT oTikCliL } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTikCliL"}, .F. )

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TInfFamTik_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TInfFamTik_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TInfFamTik_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( cFld); oClass:AddMethod( "Resource", @TInfFamTik_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TInfFamTik_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TInfFamTik ;



static FUNCTION TInfFamTik_Create( ) ; local Self AS CLASS TInfFamTik := QSelf() AS CLASS TInfFamTik

   ::DetCreateFields()

   ::AddTmpIndex( "CCODFAM", "cCodFam + CCODART" )
   ::AddGroup( {|| ::oDbf:cCodFam }, {|| "Familia  : " + Rtrim( ::oDbf:cCodFam ) + "-" + oRetFld( ::oDbf:cCodFam, ::oDbfFam ) }, {||"Total familia..."} )
   ::AddGroup( {|| ::oDbf:cCodFam + ::oDbf:cCodArt },    {|| "Artículo : " + Rtrim( ::oDbf:cCodArt ) + "-" + Rtrim( oRetFld( ::oDbf:cCodArt, ::oDbfArt ) ) }, {||""} )

RETURN ( self )



static FUNCTION TInfFamTik_OpenFiles( ) ; local Self AS CLASS TInfFamTik := QSelf() AS CLASS TInfFamTik

  local oBlock
  local oError
  local lOpen := .T.





   oBlock   := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

   ::oTikCliT := DbfServer( "TIKET.DBF", ):NewOpen( "TIKET.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oTikCliT:AddBag( "TIKET.CDX" ) ; ::oTikCliT:AddBag( ) ; ::oTikCliT:AutoIndex()

   ::oTikCliL := DbfServer( "TIKEL.DBF", ):NewOpen( "TIKEL.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oTikCliL:AddBag( "TIKEL.CDX" ) ; ::oTikCliL:AddBag( ) ; ::oTikCliL:AutoIndex()
   ::oTikCliL:SetOrder( "CCBATIL" )

   ::oDbfArt := DbfServer( "ARTICULO.DBF", ):NewOpen( "ARTICULO.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oDbfArt:AddBag( "ARTICULO.CDX" ) ; ::oDbfArt:AddBag( ) ; ::oDbfArt:AutoIndex()

   RECOVER USING oError

      lOpen := .F.

      msgStop( "Imposible abrir todas las bases de datos" )
      ::CloseFiles()

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TInfFamTik_CloseFiles( ) ; local Self AS CLASS TInfFamTik := QSelf() AS CLASS TInfFamTik

   if !Empty( ::oTikCliT ) .AND. ::oTikCliT:Used()
      ::oTikCliT:End()
   end

  if !Empty( ::oTikCliL ) .AND. ::oTikCliL:Used()
      ::oTikCliL:End()
   end

   if !Empty( ::oDbfArt ) .AND. ::oDbfArt:Used()
      ::oDbfArt:End()
   end

RETURN ( Self )



static FUNCTION TInfFamTik_Resource( cFld ) ; local Self AS CLASS TInfFamTik := QSelf() AS CLASS TInfFamTik

   if !::StdResource( "INF_GEN11D" )
      return .F.
   end



   ::lDefFamInf( 110, 120, 130, 140 )





   ::lDefArtInf( 70, 80, 90, 100 )



   ::oMtrInf:SetTotal( ::oDbfArt:Lastrec() )

   ::oDefExcInf(204)

   ::oDefSalInf(201)

   ::oDefResInf()



   TCheckBox():ReDefine( ( 203 ), { | u | If( PCount()==0, ::lExcMov, ::lExcMov:= u ) }, ::oFld:aDialogs[1],,,,,,, .F.,, .F. )


RETURN ( Self )






static FUNCTION TInfFamTik_lGenerate( ) ; local Self AS CLASS TInfFamTik := QSelf() AS CLASS TInfFamTik

   local cCodFam

   ::oDlg:Disable()

   ::oDbf:Zap()



   ::aHeader   := {  {|| "Fecha  : " + Dtoc( Date() ) }, {|| "Periodo: " + Dtoc( ::dIniInf ) + " > " + Dtoc( ::dFinInf ) }, {|| "Familia: " + AllTrim ( ::cFamOrg ) + " > " + AllTrim ( ::cFamDes ) } }

   ::oTikCliL:GoTop()

   WHILE !::oTikCliL:Eof()

      cCodFam := cCodFam( ::oTikCliL:cCbaTil, ::oDbfArt )






      if !Empty( ::oTikCliL:cCbaTil )                                      .AND. cCodFam    >= ::cFamOrg                                           .AND. cCodFam    <= ::cFamDes                                           .AND. ::oTikCliL:cCbaTil  >= ::cArtOrg                                  .AND. ::oTikCliL:cCbaTil  <= ::cArtDes                                  .AND. !( ::lExcCero .AND. ::oTikCliL:nPvpTil == 0 )

         if ::oTikCliT:Seek( ::oTikCliL:CSERTIL + ::oTikCliL:CNUMTIL + ::oTikCliL:CSUFTIL )



            if ( ::oTikCliT:cTipTik == "1" .OR. ::oTikCliT:cTipTik == "4" )      .AND. ::oTikCliT:dFecTik  >= ::dIniInf                                 .AND. ::oTikCliT:dFecTik  <= ::dFinInf





                ::AddTik ( cCodFam )

            end

         end

      end

      cCodFam := cCodFam( ::oTikCliL:cComTil, ::oDbfArt )






      if !Empty( ::oTikCliL:cComTil )                                      .AND. cCodFam    >= ::cFamOrg                                           .AND. cCodFam    <= ::cFamDes                                           .AND. ::oTikCliL:cComTil  >= ::cArtOrg                                  .AND. ::oTikCliL:cComTil  <= ::cArtDes                                  .AND. !( ::lExcCero .AND. ::oTikCliL:nPvpTil == 0 )

         if ::oTikCliT:Seek( ::oTikCliL:CSERTIL + ::oTikCliL:CNUMTIL + ::oTikCliL:CSUFTIL )



            if ( ::oTikCliT:cTipTik == "1" .OR. ::oTikCliT:cTipTik == "4" )      .AND. ::oTikCliT:dFecTik  >= ::dIniInf                                 .AND. ::oTikCliT:dFecTik  <= ::dFinInf





                ::AddTik ( cCodFam )

            end

         end

      end

      ::oTikCliL:Skip()

      ::oMtrInf:AutoInc( ::oTikCliL:OrdKeyNo() )

   end

   ::oMtrInf:AutoInc( ::oTikCliL:Lastrec() )

   ::oDlg:Enable()

RETURN ( ::oDbf:LastRec() > 0 )
