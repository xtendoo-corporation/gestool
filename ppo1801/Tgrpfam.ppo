#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 16 ".\.\Prg\Tgrpfam.prg"
_HB_CLASS TGrpFam ; function TGrpFam ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TGrpFam", iif( .T., { @TMant() }, { @HBObject() } ), @TGrpFam() ) ) ;

   _HB_MEMBER { cCodWebPreDel } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodWebPreDel"}, .F. )
   _HB_MEMBER { oBotonAceptarWeb } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBotonAceptarWeb"}, .F. )
   _HB_MEMBER { lActualizaWeb } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lActualizaWeb"}, .F. )

   _HB_MEMBER Create( cPath) AS CLASS TGrpFam; oClass:AddMethod( "Create", @TGrpFam_Create(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER New( cPath, oWndParent, oMenuItem) AS CLASS TGrpFam; oClass:AddMethod( "New", @TGrpFam_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles( lExclusive); oClass:AddMethod( "OpenFiles", @TGrpFam_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER OpenService( lExclusive); oClass:AddMethod( "OpenService", @TGrpFam_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TGrpFam_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( nMode); oClass:AddMethod( "Resource", @TGrpFam_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @TGrpFam_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Publicar(); oClass:AddMethod( "Publicar", @TGrpFam_Publicar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Enviar(); oClass:AddMethod( "Enviar", @TGrpFam_Enviar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lPreSave( oGet, oDlg); oClass:AddMethod( "lPreSave", @TGrpFam_lPreSave(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Actualizaweb(); oClass:AddMethod( "Actualizaweb", @TGrpFam_Actualizaweb(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lPubGrp(); oClass:AddMethod( "lPubGrp", @TGrpFam_lPubGrp(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER StartResource( oGet); oClass:AddMethod( "StartResource", @TGrpFam_StartResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TGrpFam ;



static FUNCTION TGrpFam_Create( cPath ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   If( cPath == nil, cPath := cPatEmp(), ) ;

   ::cPath           := cPath
   ::oDbf            := nil

RETURN ( Self )



static FUNCTION TGrpFam_New( cPath, oWndParent, oMenuItem ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   If( cPath == nil, cPath := cPatEmp(), ) ;
   If( oWndParent == nil, oWndParent := GetWndFrame(), ) ;

   if oMenuItem <> nil
      ::nLevel          := Auth():Level( oMenuItem )
   else
      ::nLevel          := Auth():Level( "01011" )
   end





   if oWndParent <> nil
      oWndParent:CloseAll()
   end

   ::cPath              := cPath
   ::oWndParent         := oWndParent
   ::oDbf               := nil

   ::lCreateShell       := .F.

   ::cMru               := "gc_folder_cubes_16"

   ::cBitmap            := ( 104 + ( 0 * 256 ) + ( 63 * 65536 ) )

   ::cHtmlHelp          := "Grupos de familias"

   ::bOnPostSave        := {|| ::Actualizaweb() }
   ::bOnPreDelete       := {|| ::cCodWebPreDel  := ::oDbf:cCodWeb  }
   ::bOnPostDelete      := {|| ::Actualizaweb( ::cCodWebPreDel, .T. )  }

RETURN ( Self )



static FUNCTION TGrpFam_OpenFiles( lExclusive, cPath ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   local lOpen          := .T.
   local oError
   local oBlock

   If( lExclusive == nil, lExclusive := .F., ) ;
   If( cPath == nil, cPath := ::cPath, ) ;

   oBlock               := ErrorBlock( {| oError | ApoloBreak( oError ) } )
   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::DefineFiles( cPath )
      end

      ::oDbf:Activate( .F., !( lExclusive ) )

   RECOVER

      lOpen             := .F.

      msgStop( "Imposible abrir las bases de datos de grupos de famílias" )

      ::CloseFiles()

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TGrpFam_DefineFiles( cPath, cDriver ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   If( cPath == nil, cPath := ::cPath, ) ;
   If( cDriver == nil, cDriver := cDriver(), ) ;

   ::oDbf := DbfServer( "GRPFAM.DBF", "GRPFAM" ):New( "GRPFAM.DBF", "GRPFAM", ( cDriver ), "Grupos de familias", ( cPath ) )

      ::oDbf:AddField( "bSndDoc", "B", 14, 0,,,, {|| ::oDbf:lSndDoc}, { "Enviar", "gc_mail2_16" , 3 }, .F., 20, .F., {"gc_mail2_12", "Nil16"} )
      ::oDbf:AddField( "bPubInt", "B", 14, 0,,,, {|| ::oDbf:lPubInt}, { "Publicar", "gc_earth_16" , 3 }, .F., 20, .F., {"gc_earth_12", "Nil16"} )
      ::oDbf:AddField( "cCodGrp", "C", 3, 0,,,,, "Código", .F., 80, .F., {} )
      ::oDbf:AddField( "cNomGrp", "C", 30, 0,,,,, "Nombre", .F., 200, .F., {} )
      ::oDbf:AddField( "lPubInt", "L", 1, 0,,,,,, .F.,, .T., {} )
      ::oDbf:AddField( "cCodWeb", "N", 11, 0,,,,,, .F.,, .T., {} )
      ::oDbf:AddField( "lSndDoc", "L", 1, 0,,,,,, .F.,, .T., {} )
      ::oDbf:AddField( "CIMGGRP", "C", 250, 0,,,,,, .F.,, .T., {} )

      ::oDbf:AddIndex( "CCODGRP", "GRPFAM.CDX", "CCODGRP",,, .F., .F., "Código",,, .T., .F. )
      ::oDbf:AddIndex( "CNOMGRP", "GRPFAM.CDX", "UPPER( CNOMGRP )",,, .F., .F., "Nombre",,, .T., .F. )
      ::oDbf:AddIndex( "cCodWeb", "GRPFAM.CDX", "Str( cCodWeb, 11 )",,, .F., .F., "CódigoWeb",,, .T., .F. )



RETURN ( ::oDbf )



static FUNCTION TGrpFam_Resource( nMode ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

    local oDlg
   local oGet, oGet2
   local oGetImage
   local bmpImage

   if nMode == 4
      ::oDbf:cCodGrp := NextKey( ::oDbf:cCodGrp, ::oDbf )
   end

   oDlg = TDialog():New(,,,, LblTitle( nMode ) + "grupos de familias", "GrpFam",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )





      oGet := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oDbf:cCodGrp, ::oDbf:cCodGrp:= u ) }, oDlg,, "@!",,,,,,, .T., {||     ( nMode == 1 )},, .F., .F.,,,,,, nil,,, )

      oGet:bHelp  := {|| oGet:cText( NextKey( ::oDbf:cCodGrp, ::oDbf ) ) }
      oGet:cBmp   := "BOT"
      oGet:bValid := {|| NotValid( oGet, ::oDbf:cAlias ) .AND. !Empty( oGet:VarGet() ) }





      oGet2 := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oDbf:cNomGrp, ::oDbf:cNomGrp:= u ) }, oDlg,, ::oDbf:FieldByName( "cNomGrp" ):cPict,,,,,,, .T., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )







      oGetImage := TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::oDbf:cImgGrp, ::oDbf:cImgGrp:= u ) }, oDlg,,,,,,,,, .F., {||     ( nMode <> 3 )}, {|nKey,nFlags,Self| ( ChgBmp( oGetImage, bmpImage ) ) }, .F., .F.,,,,, {|Self|( GetBmp( oGetImage, bmpImage ) )}, nil, "FOLDER",, )





      TCheckBox():ReDefine( 120, { | u | If( PCount()==0, ::oDbf:lPubInt, ::oDbf:lPubInt:= u ) }, oDlg,, {||( ::Publicar() )},,,,, .F., {||     ( nMode <> 3 )}, .F. )




      bmpImage := TImage():ReDefine( 600,, cFileBmpName( ::oDbf:cImgGrp ), oDlg,,, .F., .F.,,, .F.,,, .F. )

      bmpImage:SetColor( , GetSysColor( 15 ) )
      bmpImage:bLClicked   := {|| ShowImage( bmpImage ) }
      bmpImage:bRClicked   := {|| ShowImage( bmpImage ) }





      ::oBotonAceptarWeb := TButton():ReDefine( 500, {||( ::lPreSave( oGet, oGet2, oDlg, nMode ), ::lActualizaWeb := .T. )}, oDlg,,, .F., {||     ( nMode <> 3 )},,, .F. )





      TButton():ReDefine( 1, {||( ::lPreSave( oGet, oGet2, oDlg, nMode ) )}, oDlg,,, .F., {||         ( nMode <> 3 )},,, .F. )





        TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .T. )

   if nMode <> 3

      oDlg:AddFastKey( 116, {|| ::lPreSave( oGet, oGet2, oDlg, nMode ) } )

      if uFieldEmpresa( "lRealWeb" )
         oDlg:AddFastKey( 117, {|| ::lPreSave( oGet, oGet2, oDlg, nMode ), ::lActualizaWeb := .T. } )
      end

   end

   oDlg:AddFastKey ( 112, {|| ChmHelp( "Grupos_de_familias" ) } )

   oDlg:bStart := { || ::StartResource( oGet ) }



   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|( ChgBmp( oGetImage, bmpImage ) )}, oDlg:bRClicked,,, )

   if !Empty( bmpImage )
      bmpImage:End()
   end

RETURN ( oDlg:nResult == 1 )



static FUNCTION TGrpFam_StartResource( oGet ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   oGet:SetFocus()

   if uFieldEmpresa( "lRealWeb" )
      ::oBotonAceptarWeb:Show()
   else
      ::oBotonAceptarWeb:Hide()
   end

Return .T.



static FUNCTION TGrpFam_lPreSave( oGet, oGet2, oDlg, nMode ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   if nMode == 1 .OR. nMode == 4

      if Empty( ::oDbf:cCodGrp )
         MsgStop( "Código de grupo de família no puede estar vacío." )
         oGet:SetFocus()
         Return .F.
      end

      if ::oDbf:SeekInOrd( ::oDbf:cCodGrp, "CCODGRP" )
         MsgStop( "Código ya existe " + Rtrim( ::oDbf:cCodGrp ) )
         return nil
      end

   end

   if Empty( ::oDbf:cNomGrp )
      MsgStop( "Nombre de grupo de família no puede estar vacío." )
      oGet2:SetFocus()
      Return .F.
   end

   ::oDbf:lSndDoc    := .T.

RETURN ( oDlg:end( 1 ) )



static FUNCTION TGrpFam_Activate( ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   if nAnd( ::nLevel, 1 ) == 0
      msgStop( "Acceso no permitido." )
      Return ( Self )
   end

   ::CreateShell( ::nLevel )

   ::oWndBrw:GralButtons( Self )






   ::oWndBrw:NewAt( "Lbl",,, {||( ::Enviar( .T. ) )}, "En(v)iar", "V",,, 4,, .F. )






   ::oWndBrw:NewAt( "SNDINT",,, {||( ::Publicar( .T. ) )}, "(P)ublicar", "P",,, 4,, .F. )

   ::oWndBrw:EndButtons( Self )

   ::oWndBrw:cHtmlHelp  := "Grupos de familias"

   ::oWndBrw:Activate(  , , , , , , , , , , , , , , , , {|| ::CloseFiles() } )

RETURN ( Self )



static FUNCTION TGrpFam_Publicar( lLoad ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   If( lLoad == nil, lLoad := .F., ) ;

   if lLoad
      ::oDbf:Load()
      ::oDbf:lPubInt := !::oDbf:lPubInt
      ::oDbf:lSndDoc := ::oDbf:lPubInt
   end

   if lLoad
      ::oDbf:Save()
      ::oWndBrw:Refresh()
   end

RETURN ( Self )



static FUNCTION TGrpFam_Enviar( lLoad ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   If( lLoad == nil, lLoad := .F., ) ;

   if lLoad
      ::oDbf:Load()
      ::oDbf:lSndDoc := !::oDbf:lSndDoc
   end

   if lLoad
      ::oDbf:Save()
      ::oWndBrw:Refresh()
   end

RETURN ( Self )



static FUNCTION TGrpFam_Actualizaweb( cCodWeb, lDel ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam















Return .T.



static FUNCTION TGrpFam_lPubGrp( ) ; local Self AS CLASS TGrpFam := QSelf() AS CLASS TGrpFam

   local lPub  := .F.

   if ::oDbf:lPubInt

      lPub     := .T.

   else

      if ::oDbf:cCodWeb <> 0

         lPub  := .T.

      end

   end

Return lPub



FUNCTION retGruFam( cCodGrf, oDbfGrf )

   local cNombre  := ""

   if oDbfGrf:oDbf:Seek( cCodGrf )
      cNombre     := oDbfGrf:oDbf:cNomGrp
   end

RETURN ( cNombre )



FUNCTION cCodGruFam( cCodArt, oDbfArt, oDbfFam )

   local cCodGrf  := ""

   if oDbfArt:Seek( cCodArt )

      if oDbfFam:Seek( oDbfArt:Familia )
         cCodGrf  := oDbfFam:cCodGrp
      end

   end

RETURN ( cCodGrf )










FUNCTION cGruFam( cCodFam, oDbfFam )

   local cCodGrf  := ""

   if ValType( oDbfFam ) == "O"
      if oDbfFam:Seek( cCodFam )
         cCodGrf  := oDbfFam:cCodGrp
      end
   else
      if ( oDbfFam )->( dbSeek( cCodFam ) )
         cCodGrf  := ( oDbfFam )->cCodGrp
      end
   end

RETURN ( cCodGrf )
