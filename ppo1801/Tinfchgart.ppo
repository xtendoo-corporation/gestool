#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Tinfchgart.prg"
_HB_CLASS TInfChgArt ; function TInfChgArt ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TInfChgArt", iif( .T., { @TInfGen() }, { @HBObject() } ), @TInfChgArt() ) ) ;

   _HB_MEMBER { AS OBJECT oDbfArt } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfArt"}, .F. )
   _HB_MEMBER { AS OBJECT oDbfTIva } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfTIva"}, .F. )
   _HB_MEMBER { AS OBJECT oDbfKit } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfKit"}, .F. )
   _HB_MEMBER { AS OBJECT oDbfDiv } ; oClass:AddMultiData( "OBJECT",, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfDiv"}, .F. )

   _HB_MEMBER create(); oClass:AddMethod( "create", @TInfChgArt_create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TInfChgArt_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TInfChgArt_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @TInfChgArt_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TInfChgArt_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TInfChgArt ;



static FUNCTION TInfChgArt_create( ) ; local Self AS CLASS TInfChgArt := QSelf() AS CLASS TInfChgArt

   ::AddField( "cCodFam",  "C", 16, 0, {|| "@!" },        "Familia",        .F., "Familia"                ,  5, .F. )
   ::AddField( "cCodArt",  "C", 18, 0, {|| "@!" },        "Código artículo",      .T., "Cod. artículo"          , 15, .F. )
   ::AddField( "cNomArt",  "C",100, 0, {|| "@!" },        "Descripción",    .T., "Descripción"            , 50, .F. )
   ::AddField( "LastChg",  "D",  8, 0, {|| "@!" },        "Cambio",         .T., "Fecha de cambio"        , 10, .F. )
   ::AddField( "TipoIva",  "N",  5, 1, {|| "@!" },        "% impuestos",       .T., "% I.V.A"                ,  8, .F. )
   ::AddField( "pCosto",   "N", 15, 6, {|| ::cPicin },    "Pre. costo",     .F., "Precio de costo"        , 12, .F. )
   ::AddField( "pVenta1",  "N", 15, 6, {|| ::cPicOut },   "Precio 1",       .F., "Precio de venta 1"      , 12, .F. )
   ::AddField( "pVtaIva1", "N", 15, 6, {|| ::cPicOut },   "Precio 1 impuestos",   .T., "Precio de venta 1 impuestos"  , 12, .F. )
   ::AddField( "pVenta2",  "N", 15, 6, {|| ::cPicOut },   "Precio 2",       .F., "Precio de venta 2"      , 12, .F. )
   ::AddField( "pVtaIva2", "N", 15, 6, {|| ::cPicOut },   "Precio 2 impuestos",   .F., "Precio de venta 2 impuestos"  , 12, .F. )
   ::AddField( "pVenta3",  "N", 15, 6, {|| ::cPicOut },   "Precio 3",       .F., "Precio de venta 3"      , 12, .F. )
   ::AddField( "pVtaIva3", "N", 15, 6, {|| ::cPicOut },   "Precio 3 impuestos",   .F., "Precio de venta 3 impuestos"  , 12, .F. )
   ::AddField( "pVenta4",  "N", 15, 6, {|| ::cPicOut },   "Precio 4",       .F., "Precio de venta 4"      , 12, .F. )
   ::AddField( "pVtaIva4", "N", 15, 6, {|| ::cPicOut },   "Precio 4 impuestos",   .F., "Precio de venta 4 impuestos"  , 12, .F. )
   ::AddField( "pVenta5",  "N", 15, 6, {|| ::cPicOut },   "Precio 5",       .F., "Precio de venta 5"      , 12, .F. )
   ::AddField( "pVtaIva5", "N", 15, 6, {|| ::cPicOut },   "Precio 5 impuestos",   .F., "Precio de venta 5 impuestos"  , 12, .F. )
   ::AddField( "pVenta6",  "N", 15, 6, {|| ::cPicOut },   "Precio 6",       .F., "Precio de venta 6"      , 12, .F. )
   ::AddField( "pVtaIva6", "N", 15, 6, {|| ::cPicOut },   "Precio 6 impuestos",   .F., "Precio de venta 6 impuestos"  , 12, .F. )

   ::AddTmpIndex( "CCODFAM", "CCODFAM + CCODART" )

   ::AddGroup( {|| ::oDbf:cCodFam }, {|| "Familia  : " + Rtrim( ::oDbf:cCodFam ) + "-" + oRetFld( ::oDbf:cCodFam, ::oDbfFam ) }, {|| "Total familia..." } )

   ::lDefSerInf   := .F.
   ::lDefDivInf   := .F.

RETURN ( self )



static FUNCTION TInfChgArt_OpenFiles( ) ; local Self AS CLASS TInfChgArt := QSelf() AS CLASS TInfChgArt

   local lOpen    := .T.
   local oBlock   := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   BEGIN SEQUENCE

   ::oDbfArt := DbfServer( "ARTICULO.DBF", ):NewOpen( "ARTICULO.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oDbfArt:AddBag( "ARTICULO.CDX" ) ; ::oDbfArt:AddBag( ) ; ::oDbfArt:AutoIndex()

   ::oDbfTIva := DbfServer( "TIVA.DBF", ):NewOpen( "TIVA.DBF",, ( cDriver() ),, ( cPatDat() ), .F., .T., .F., .F. ) ; ::oDbfTIva:AddBag( "TIVA.CDX" ) ; ::oDbfTIva:AddBag( ) ; ::oDbfTIva:AutoIndex()

   ::oDbfKit := DbfServer( "ARTKIT.DBF", ):NewOpen( "ARTKIT.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .T., .F., .F. ) ; ::oDbfKit:AddBag( "ARTKIT.CDX" ) ; ::oDbfKit:AddBag( ) ; ::oDbfKit:AutoIndex()

   ::oDbfDiv := DbfServer( "DIVISAS.DBF", ):NewOpen( "DIVISAS.DBF",, ( cDriver() ),, ( cPatDat() ), .F., .T., .F., .F. ) ; ::oDbfDiv:AddBag( "DIVISAS.CDX" ) ; ::oDbfDiv:AddBag( ) ; ::oDbfDiv:AutoIndex()

   RECOVER

      msgStop( "Imposible abrir todas las bases de datos" )
      ::CloseFiles()
      lOpen          := .F.

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TInfChgArt_CloseFiles( ) ; local Self AS CLASS TInfChgArt := QSelf() AS CLASS TInfChgArt

   if !Empty( ::oDbfArt ) .AND. ::oDbfArt:Used()
      ::oDbfArt:End()
   end

   if !Empty( ::oDbfTIva ) .AND. ::oDbfTIva:Used()
      ::oDbfTIva:End()
   end
   if !Empty( ::oDbfKit ) .AND. ::oDbfKit:Used()
      ::oDbfKit:End()
   end
   if !Empty( ::oDbfDiv ) .AND. ::oDbfDiv:Used()
      ::oDbfDiv:End()
   end

   ::oDbfArt  := nil
   ::oDbfTIva := nil
   ::oDbfKit  := nil
   ::oDbfDiv  := nil

RETURN ( Self )



static FUNCTION TInfChgArt_lResource( cFld ) ; local Self AS CLASS TInfChgArt := QSelf() AS CLASS TInfChgArt

   if !::StdResource( "INFCHGART" )
      return .F.
   end

   if !::lDefFamInf( 110, 120, 130, 140, 600 )
      return .F.
   end

   ::CreateFilter( aItmArt(), ::oDbfArt:cAlias )





   ::oMtrInf:SetTotal( ::oDbfArt:Lastrec() )

RETURN .T.






static FUNCTION TInfChgArt_lGenerate( ) ; local Self AS CLASS TInfChgArt := QSelf() AS CLASS TInfChgArt

   local cExpHead := ""

   ::oDlg:Disable()
   ::oBtnCancel:Enable()
   ::oDbf:Zap()



   ::aHeader      := {  {|| "Fecha    : " + Dtoc( Date() ) }, {|| "Periodo  : " + Dtoc( ::dIniInf ) + " > " + Dtoc( ::dFinInf ) }, {|| "Familias : " + if( ::lAllFam, "Todas", AllTrim( ::cFamOrg ) + " > " + AllTrim( ::cFamDes ) ) } }

   ::oDbfArt:OrdSetFocus( "CODIGO" )

   cExpHead          := '( dFecChg >= Ctod( "' + Dtoc( ::dIniInf ) + '" ) .and. dFecChg <= Ctod( "' + Dtoc( ::dFinInf ) + '" ) )'

   if !::lAllFam
      cExpHead       += ' .and. familia >= "' + Rtrim( ::cFamOrg ) + '" .and. familia <= "' + Rtrim( ::cFamDes ) + '"'
   end

   if !Empty( ::oFilter:cExpresionFilter )
      cExpHead       += " .and. " + ::oFilter:cExpresionFilter
   end

   ::oDbfArt:AddTmpIndex( Auth():Codigo(), GetFileNoExt( ::oDbfArt:cFile ), ::oDbfArt:OrdKey(), ( cExpHead ), , , , , , , , .T. )

   ::oMtrInf:SetTotal( ::oDbfArt:OrdKeyCount() )

   ::oDbfArt:GoTop()

   while !::lBreak .AND. !::oDbfArt:Eof()

      ::oDbf:Append()

      ::oDbf:LastChg := ::oDbfArt:dFecChg

      ::oDbf:cCodArt    := ::oDbfArt:Codigo
      ::oDbf:cNomArt    := ::oDbfArt:Nombre
      ::oDbf:pCosto     := nCosto( nil, ::oDbfArt:cAlias, ::oDbfKit:cAlias, .F., nil, ::oDbfDiv )
      ::oDbf:TipoIva    := nIva( ::oDbfTIva ,::oDbfArt:TipoIva )
      ::oDbf:pVenta1    := ::oDbfArt:pVenta1
      ::oDbf:pVtaIva1   := ::oDbfArt:pVtaIva1
      ::oDbf:pVenta2    := ::oDbfArt:pVenta2
      ::oDbf:pVtaIva2   := ::oDbfArt:pVtaIva2
      ::oDbf:pVenta3    := ::oDbfArt:pVenta3
      ::oDbf:pVtaIva3   := ::oDbfArt:pVtaIva3
      ::oDbf:pVenta4    := ::oDbfArt:pVenta4
      ::oDbf:pVtaIva4   := ::oDbfArt:pVtaIva4
      ::oDbf:pVenta5    := ::oDbfArt:pVenta5
      ::oDbf:pVtaIva5   := ::oDbfArt:pVtaIva5
      ::oDbf:pVenta6    := ::oDbfArt:pVenta6
      ::oDbf:pVtaIva6   := ::oDbfArt:pVtaIva6
      ::oDbf:cCodFam    := ::oDbfArt:Familia

      ::oDbf:Save()

      ::oDbfArt:Skip()

      ::oMtrInf:AutoInc( ::oDbfArt:OrdKeyNo() )

   end

   ::oDbfArt:IdxDelete( Auth():Codigo(), GetFileNoExt( ::oDbfArt:cFile ) )

   ::oMtrInf:AutoInc( ::oDbfArt:Lastrec() )

   ::oDlg:Enable()

RETURN ( ::oDbf:LastRec() > 0 )
