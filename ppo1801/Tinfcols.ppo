#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\Tinfcols.prg"
_HB_CLASS TInfCols ; function TInfCols ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TInfCols", iif( .F., { }, { @HBObject() } ), @TInfCols() ) ) ;

   _HB_MEMBER { bFld } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bFld"}, .F. )
   _HB_MEMBER { cTitle } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTitle"}, .F. )
   _HB_MEMBER { nPad } ; oClass:AddMultiData(, 1, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nPad"}, .F. )
   _HB_MEMBER { lTotal } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lTotal"}, .F. )
   _HB_MEMBER { lSeparador } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lSeparador"}, .F. )
   _HB_MEMBER { lSombra } ; oClass:AddMultiData(, .F., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lSombra"}, .F. )
   _HB_MEMBER { bPict } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bPict"}, .F. )
   _HB_MEMBER { nSize } ; oClass:AddMultiData(, 0, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nSize"}, .F. )
   _HB_MEMBER { lSelect } ; oClass:AddMultiData(, .T., nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lSelect"}, .F. )
   _HB_MEMBER { nPos } ; oClass:AddMultiData(, 0, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nPos"}, .F. )
   _HB_MEMBER { cDescrip } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cDescrip"}, .F. )
   _HB_MEMBER { bFont } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bFont"}, .F. )
   _HB_MEMBER { Cargo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"Cargo"}, .F. )
   _HB_MEMBER { oParent } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oParent"}, .F. )
   _HB_MEMBER { bStartTotal } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"bStartTotal"}, .F. )


   _HB_MEMBER New( bFld, cTitle, bPict, lSelect, nPad, lTotal, lSeparador, lSombra, nPos, nSize, cDescrip, Cargo) AS CLASS TInfCols; oClass:AddMethod( "New", @TInfCols_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lEditCol(); oClass:AddMethod( "lEditCol", @TInfCols_lEditCol(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Select(); oClass:AddInline( "Select", {|Self | ( ( Self ) ), ( ::lSelect := .T., ::lSave2Exit() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER UnSelect(); oClass:AddInline( "UnSelect", {|Self | ( ( Self ) ), ( ::lSelect := .F., ::lSave2Exit() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Toogle(); oClass:AddInline( "Toogle", {|Self | ( ( Self ) ), ( ::lSelect := !::lSelect, ::lSave2Exit() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lSave2Exit(); oClass:AddInline( "lSave2Exit", {|Self | ( ( Self ) ), if( ::oParent <> nil, ::oParent:lSave2Exit := .T., ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TInfCols ;



static FUNCTION TInfCols_New( bFld, cTitle, bPict, lSelect, nPad, lTotal, lSeparador, lSombra, nPos, nSize, cDescrip, bFont, Cargo, oParent ) ; local Self AS CLASS TInfCols := QSelf() AS CLASS TInfCols

   If( bFld == nil, bFld := {|| "" }, ) ;
   If( cTitle == nil, cTitle := "", ) ;
   If( bPict == nil, bPict := {|| "" }, ) ;
   If( lSelect == nil, lSelect := .T., ) ;
   If( nPad == nil, nPad := 1, ) ;
   If( lTotal == nil, lTotal := .F., ) ;
   If( lSeparador == nil, lSeparador := .F., ) ;
   If( lSombra == nil, lSombra := .F., ) ;
   If( nPos == nil, nPos := 0, ) ;
   If( nSize == nil, nSize := 0, ) ;
   If( cDescrip == nil, cDescrip := cTitle, ) ;
   If( bFont == nil, bFont := {|| 2 }, ) ;

   ::bFld               := bFld
   ::cTitle             := cTitle
   ::bPict              := bPict
   ::lSelect            := lSelect
   ::nPad               := nPad
   ::lTotal             := lTotal
   ::lSeparador         := lSeparador
   ::lSombra            := lSombra
   ::nPos               := nPos
   ::nSize              := nSize
   ::cDescrip           := cDescrip
   ::bFont              := bFont
   ::Cargo              := Cargo
   ::oParent            := oParent

RETURN Self



static FUNCTION TInfCols_lEditCol( ) ; local Self AS CLASS TInfCols := QSelf() AS CLASS TInfCols

   local oDlg
   local oJustificado
   local aJustificado   := { "Izquierda", "Derecha" }
   local cJustificado   := aJustificado[ ::nPad ]
   local cTitle         := padr( ::cTitle, 50 )
   local lSelect        := ::lSelect
   local lTotal         := ::lTotal
   local lSeparador     := ::lSeparador
   local lSombra        := ::lSombra
   local nSize          := ::nSize

   oDlg = TDialog():New(,,,, ::cDescrip, "REP_COL",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )



   TGet():ReDefine( 100, { | u | If( PCount()==0, cTitle, cTitle:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,,, "cTitle",,,, )





   TGet():ReDefine( 110, { | u | If( PCount()==0, nSize, nSize:= u ) }, oDlg,, "@E 999",,,,,,, .F.,,, .F., .T.,,,,,,, "nSize",,,, )




   oJustificado := TComboBox():ReDefine( 120, { | u | If( PCount()==0, cJustificado, cJustificado:= u ) }, aJustificado, oDlg,,,,,,, .F.,,,,,,, "oJustificado",,,,,,, )



   TCheckBox():ReDefine( 130, { | u | If( PCount()==0, lTotal, lTotal:= u ) }, oDlg,,,,,,, .F.,, )



   TCheckBox():ReDefine( 140, { | u | If( PCount()==0, lSombra, lSombra:= u ) }, oDlg,,,,,,, .F.,, )



   TCheckBox():ReDefine( 150, { | u | If( PCount()==0, lSeparador, lSeparador:= u ) }, oDlg,,,,,,, .F.,, )




    TButton():ReDefine( 1, {||( oDlg:end( 1 ) )}, oDlg,,, .F.,,,, .F. )




    TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

   if oDlg:nResult == 1

      ::nPad            := oJustificado:nAt
      ::cTitle          := Rtrim( cTitle )
      ::lSelect         := lSelect
      ::lTotal          := lTotal
      ::lSeparador      := lSeparador
      ::lSombra         := lSombra
      ::nSize           := nSize

      ::lSave2Exit()

   end

RETURN ( oDlg:nResult == 1 )
