#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Models\TiposIvaModel.prg"
_HB_CLASS TiposIvaModel ; function TiposIvaModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TiposIvaModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @TiposIvaModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getDatosTableName( "TIva" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombre(); oClass:AddInline( "getNombre", {|Self, cCodigo | ( ( Self ) ), ( ::getField( "DescIva", "Tipo", cCodigo ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getIva(); oClass:AddInline( "getIva", {|Self, cCodigo | ( ( Self ) ), ( ::getField( "TpIva", "Tipo", cCodigo ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getRE(); oClass:AddInline( "getRE", {|Self, cCodigo | ( ( Self ) ), ( ::getField( "nRecEq", "Tipo", cCodigo ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTipoIgic(); oClass:AddInline( "getTipoIgic", {|Self, nIva | ( ( Self ) ), ( ::getField( "lIgic", "TpIva", nIva ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER exist( cCodigo); oClass:AddMethod( "exist", @TiposIvaModel_exist(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER InsertTiposIva( hTipo); oClass:AddMethod( "InsertTiposIva", @TiposIvaModel_InsertTiposIva(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TiposIvaModel ;



static FUNCTION TiposIvaModel_exist( cCodigo ) ; local Self AS CLASS TiposIvaModel := QSelf() AS CLASS TiposIvaModel

   local cStm


   local cSql  := "SELECT Tipo "                                  +  "FROM " + ::getTableName() + " "             +  "WHERE TpIva = " + quoted( cCodigo )

   if ::ExecuteSqlStatement( cSql, @cStm )
      RETURN ( ( cStm )->( lastrec() ) > 0 )
   end

RETURN ( .F. )



static FUNCTION TiposIvaModel_InsertTiposIva( hTipo ) ; local Self AS CLASS TiposIvaModel := QSelf() AS CLASS TiposIvaModel

   local cArea
   local cSql

   if !::exist( hGet( hTipo, "Porcentaje" ) )

      cSql         := "INSERT INTO " + ::getTableName()
      cSql         += " ( Tipo, DescIva, TpIva, nRecEq ) VALUES "
      cSql         += " ( " + quoted( hGet( hTipo, "Codigo" ) )
      cSql         += ", " + quoted( hGet( hTipo, "Descripcion" ) )
      cSql         += ", " + Str( hGet( hTipo, "Porcentaje" ) )
      cSql         += ", " + Str( hGet( hTipo, "Recargo" ) )
      cSql         += " )"

      ::ExecuteSqlStatement( cSql, @cArea )

   end

RETURN ( .F. )
