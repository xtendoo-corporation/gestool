#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Tiremage.prg"
FUNCTION InfRemAge( oRemAge, oFacCliP, oClientes, oAgentes, oDiv )

   local oInf
   local aCol  := {}
   local aIdx  := {}

   oRemAge:GetStatus()

   aAdd( aCol, { "NNUMCOB", "N",  9, 0, {|| "@!" },         "Número",         .F., "Número del cobro",       9 } )
   aAdd( aCol, { "CSUFCOB", "C",  2, 0, {|| "@!" },         "Suf.",           .F., "Sufijo del cobro",       2 } )
   aAdd( aCol, { "CCODAGE", "C",  3, 0, {|| "@!" },         "Age.",           .F., "Código agente",          6 } )
   aAdd( aCol, { "CNOMAGE", "C", 40, 0, {|| "@!" },         "Agente",         .F., "Nombre agente",         20 } )
   aAdd( aCol, { "CNUMREC", "C", 18, 0, {|| "@!" },         "Recibo",         .T., "Recibo",                18 } )
   aAdd( aCol, { "DFECREC", "D",  8, 0, {|| "" },           "Fecha",          .T., "Fecha",                 10 } )
   aAdd( aCol, { "CCODCLI", "C", 12, 0, {|| "" },           "Cod. Cli.",      .T., "Código de cliente",     10 } )
   aAdd( aCol, { "CNOMCLI", "C", 40, 0, {|| "" },           "Nom. Cli.",      .T., "Nombre de cliente",     36 } )
   aAdd( aCol, { "NIMPREC", "N", 19, 6, {|| oInf:cPicOut }, "Importe",        .T., "Importe",               12 } )

   aAdd( aIdx, { "NNUMCOB", "Str( NNUMCOB ) + CSUFCOB" } )

   oInf           := TInfRemAge():New( "Remesas de agentes", aCol, aIdx, "01044" )

   oInf:oRemAge   := oRemAge
   oInf:oFacCliP  := oFacCliP
   oInf:oClientes := oClientes
   oInf:oAgentes  := oAgentes
   oInf:oDiv      := oDiv

   oInf:AddGroup( {|| Str( oInf:oDbf:nNumCob ) + oInf:oDbf:cSufCob }, {|| "Remesas : " + Rtrim( Str( oInf:oDbf:nNumCob ) ) + "/" + oInf:oDbf:cSufCob + " Agente: " + oInf:oDbf:cNomAge }, {|| "Total cobro..." } )

   oInf:Resource()

   oInf:Activate()

   oInf:End()

   oRemAge:SetStatus()

RETURN NIL



_HB_CLASS TInfRemAge ; function TInfRemAge ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TInfRemAge", iif( .T., { @TInfGen() }, { @HBObject() } ), @TInfRemAge() ) ) ;

   _HB_MEMBER { nCobDes } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nCobDes"}, .F. )
   _HB_MEMBER { nCobHas } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nCobHas"}, .F. )
   _HB_MEMBER { cSufDes } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSufDes"}, .F. )
   _HB_MEMBER { cSufHas } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cSufHas"}, .F. )
   _HB_MEMBER { oRemAge } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oRemAge"}, .F. )
   _HB_MEMBER { oFacCliP } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacCliP"}, .F. )
   _HB_MEMBER { oClientes } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oClientes"}, .F. )
   _HB_MEMBER { oAgentes } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAgentes"}, .F. )
   _HB_MEMBER { oDiv } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDiv"}, .F. )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TInfRemAge_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( cFld); oClass:AddMethod( "Resource", @TInfRemAge_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TInfRemAge_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TInfRemAge ;



static FUNCTION TInfRemAge_OpenFiles( ) ; local Self AS CLASS TInfRemAge := QSelf() AS CLASS TInfRemAge

   ::oDbfDiv := DbfServer( "DIVISAS.DBF", ):NewOpen( "DIVISAS.DBF",, ( cDriver() ),, ( cPatDat() ), .F., .T., .F., .F. ) ; ::oDbfDiv:AddBag( "DIVISAS.CDX" ) ; ::oDbfDiv:AddBag( ) ; ::oDbfDiv:AutoIndex()

RETURN ( Self )



static FUNCTION TInfRemAge_Resource( cFld ) ; local Self AS CLASS TInfRemAge := QSelf() AS CLASS TInfRemAge

   ::nCobDes      := ::oRemAge:nNumCob
   ::nCobHas      := ::oRemAge:nNumCob
   ::cSufDes      := ::oRemAge:cSufCob
   ::cSufHas      := ::oRemAge:cSufCob

   ::lDefFecInf   := .F.
   ::lDefDivInf   := .F.
   ::lDefSerInf   := .F.

   if !::StdResource( "INF_GENORDCAR" )
      return .F.
   end

   ::lLoadDivisa()









   TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::nCobDes, ::nCobDes:= u ) }, ::oFld:aDialogs[1],, "999999999",,,,,,, .F.,,, .F., .T.,,,,,, nil,,, )



   TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::cSufDes, ::cSufDes:= u ) }, ::oFld:aDialogs[1],,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::nCobHas, ::nCobHas:= u ) }, ::oFld:aDialogs[1],, "999999999",,,,,,, .F.,,, .F., .T.,,,,,, nil,,, )



   TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::cSufHas, ::cSufHas:= u ) }, ::oFld:aDialogs[1],,,,,,,,, .F.,,, .F., .F.,,,,,, nil,,, )

RETURN ( Self )






static FUNCTION TInfRemAge_lGenerate( ) ; local Self AS CLASS TInfRemAge := QSelf() AS CLASS TInfRemAge

   ::oDlg:Disable()

   ::oDbf:Zap()


   ::aHeader   := {  {|| "Fecha : " + Dtoc( Date() ) }, {|| "Rango : " + Alltrim( Str( ::nCobDes ) + "/" + ::cSufDes ) + " > " + Alltrim( Str( ::nCobHas ) + "/" + ::cSufHas ) } }

   if ::oRemAge:Seek( Str( ::nCobDes ) + ::cSufDes )

      while Str( ::oRemAge:nNumCob ) + ::oRemAge:cSufCob <= Str( ::nCobHas ) + ::cSufHas .AND. !::oRemAge:eof()





         if ::oFacCliP:Seek( Str( ::oRemAge:nNumCob ) + ::oRemAge:cSufCob )

            while Str( ::oFacCliP:nNumCob ) + ::oFacCliP:cSufCob == Str( ::oRemAge:nNumCob ) + ::oRemAge:cSufCob .AND. !::oFacCliP:eof()

               ::oDbf:Append()
               ::oDbf:Blank()

               ::oDbf:nNumCob    := ::oFacCliP:nNumCob
               ::oDbf:cSufCob    := ::oFacCliP:cSufCob
               ::oDbf:cCodAge    := ::oRemAge:cCodAge
               ::oDbf:cNomAge    := ::oRemAge:cNomAge
               ::oDbf:cNumRec    := ::oFacCliP:cSerie + "/" + Str( ::oFacCliP:nNumFac ) + "/" + ::oFacCliP:cSufFac + "-" + Str( ::oFacCliP:nNumRec )
               ::oDbf:dFecRec    := ::oFacCliP:dPreCob
               ::oDbf:cCodCli    := ::oFacCliP:cCodCli
               ::oDbf:cNomCli    := RetClient( ::oFacCliP:cCodCli, ::oClientes )
               ::oDbf:nImpRec    := nTotRecCli( ::oFacCliP, ::oDiv:cAlias, cDivEmp() )

               ::oDbf:Save()

               ::oFacCliP:Skip()

            end

         end

         ::oRemAge:Skip()
         ::oMtrInf:AutoInc( ::oRemAge:OrdKeyNo() )

      end

   end

   ::oDlg:Enable()

RETURN ( ::oDbf:LastRec() > 0 )
