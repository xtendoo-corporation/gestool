#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 8 ".\.\Prg\Tlisage.prg"
_HB_CLASS TLisAgeInf ; function TLisAgeInf ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TLisAgeInf", iif( .T., { @TInfGen() }, { @HBObject() } ), @TLisAgeInf() ) ) ;

   _HB_MEMBER Create(); oClass:AddMethod( "Create", @TLisAgeInf_Create(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TLisAgeInf_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TLisAgeInf_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lResource( cFld); oClass:AddMethod( "lResource", @TLisAgeInf_lResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lGenerate(); oClass:AddMethod( "lGenerate", @TLisAgeInf_lGenerate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER oDefIniInf() ; oClass:AddVirtual( "oDefIniInf" )
   _HB_MEMBER oDefFinInf() ; oClass:AddVirtual( "oDefFinInf" )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TLisAgeInf ;



static FUNCTION TLisAgeInf_Create( ) ; local Self AS CLASS TLisAgeInf := QSelf() AS CLASS TLisAgeInf

   ::AddField ( "CCODAGE", "C",  3, 0, {|| "@!" },   "Age",                       .F., "Cod. Agente",                 3 )
   ::AddField ( "CNOMAGE", "C", 50, 0, {|| "@!" },   "Nom Age",                   .F., "Nom. Agente",                25 )
   ::AddField ( "CCODGRP", "C",  4, 0, {|| "@!" },   "Grp.",                      .F., "Código de grupo de cliente",  6 )
   ::AddField ( "CCODCLI", "C", 12, 0, {|| "@!" },   "Cliente",                   .T., "Cod. Cliente",                8 )
   ::AddField ( "CNOMCLI", "C", 50, 0, {|| "@!" },   "Nombre",                    .T., "Nom. Cliente",               50 )
   ::AddField ( "CNIFCLI", "C", 15, 0, {|| "@!" },   "Nif",                       .T., "Nif",                        15 )
   ::AddField ( "CDOMCLI", "C", 35, 0, {|| "@!" },   "Domicilio",                 .T., "Domicilio",                  25 )
   ::AddField ( "CPOBCLI", "C", 25, 0, {|| "@!" },   "Población",                 .F., "Población",                  25 )
   ::AddField ( "CPROCLI", "C", 20, 0, {|| "@!" },   "Provincia",                 .F., "Provincia",                  20 )
   ::AddField ( "CCDPCLI", "C",  7, 0, {|| "@!" },   "Código postal",             .F., "Cod. Postal",                 7 )
   ::AddField ( "CTLFCLI", "C", 12, 0, {|| "@!" },   "Teléfono",                  .F., "Teléfono",                   12 )

   ::AddTmpIndex( "CCODAGE", "CCODAGE + CCODGRP + CCODCLI" )
   ::AddGroup( {|| ::oDbf:cCodAge }, {|| "Agente  : " + Rtrim( ::oDbf:cCodAge ) + "-" + oRetFld( ::oDbf:cCodAge, ::oDbfAge ) } )
   ::AddGroup( {|| ::oDbf:cCodAge + ::oDbf:cCodGrp }, {|| "Grupo  : " + Rtrim( ::oDbf:cCodGrp ) + "-" + oRetFld( ::oDbf:cCodGrp, ::oGrpCli:oDbf ) } )

RETURN ( self )



static FUNCTION TLisAgeInf_OpenFiles( ) ; local Self AS CLASS TLisAgeInf := QSelf() AS CLASS TLisAgeInf

RETURN ( self )



static FUNCTION TLisAgeInf_CloseFiles( ) ; local Self AS CLASS TLisAgeInf := QSelf() AS CLASS TLisAgeInf

RETURN ( Self )



static FUNCTION TLisAgeInf_lResource( cFld ) ; local Self AS CLASS TLisAgeInf := QSelf() AS CLASS TLisAgeInf

   if !::StdResource( "INF_GEN23" )
      return .F.
   end





   if !::oDefAgeInf( 70, 80, 90, 100, 930 )
      return .F.
   end





   if !::oDefGrpCli( 170, 171, 180, 181, 888 )
      return .F.
   end





   if !::oDefCliInf( 110, 120, 130, 140, , 600 )
      return .F.
   end





   ::oMtrInf:SetTotal( ::oDbfCli:Lastrec() )

   ::CreateFilter( aItmCli(), ::oDbfCli:cAlias )

RETURN .T.






static FUNCTION TLisAgeInf_lGenerate( ) ; local Self AS CLASS TLisAgeInf := QSelf() AS CLASS TLisAgeInf

   local cExpHead := ""

   ::oDlg:Disable()
   ::oBtnCancel:Enable()
   ::oDbf:Zap()

   ::oDbfCli:GoTop()




   ::aHeader   := {{|| "Fecha         : "   + Dtoc( Date() ) }, {|| "Agentes       : "   + AllTrim( ::cAgeOrg ) + " > " + AllTrim( ::cAgeDes ) }, {|| "Grp. clientes : "   + AllTrim( ::cGrpOrg ) + " > " + AllTrim( ::cGrpDes ) }, {|| "Clientes      : "   + AllTrim( ::cCliOrg ) + " > " + AllTrim( ::cCliDes ) } }

   ::oDbfCli:OrdSetFocus( "COD" )

   if !Empty( ::oFilter:cExpresionFilter )
      cExpHead       := ::oFilter:cExpresionFilter
   else
      cExpHead       := ".t."
   end

   ::oDbfCli:AddTmpIndex( Auth():Codigo(), GetFileNoExt( ::oDbfCli:cFile ), ::oDbfCli:OrdKey(), ( cExpHead ), , , , , , , , .T. )

   ::oMtrInf:SetTotal( ::oDbfCli:OrdKeyCount() )





   while !::lBreak .AND. !::oDbfCli:Eof()



      if ( ::lAllCli .OR. ( ::oDbfCli:Cod >= ::cCliOrg .AND. ::oDbfCli:Cod <= ::cCliDes ))           .AND. ( ::lGrpAll .OR. ( ::oDbfCli:cCodGrp >= ::cGrpOrg .AND. ::oDbfCli:cCodGrp <= ::cGrpDes ))   .AND. ( ::lAgeAll .OR. ( ::oDbfCli:cAgente >= ::cAgeOrg .AND. ::oDbfCli:cAgente <= ::cAgeDes ) )

         ::oDbf:Append()

         ::oDbf:cCodAge := ::oDbfCli:cAgente
         ::oDbf:cNomAge := ::oDbfAge:cNbrAge
         ::oDbf:cCodGrp := ::oDbfCli:cCodGrp
         ::oDbf:cCodCli := ::oDbfCli:Cod
         ::oDbf:cNomCli := ::oDbfCli:Titulo
         ::oDbf:CNIFCLI := ::oDbfCli:Nif
         ::oDbf:CDOMCLI := ::oDbfCli:Domicilio
         ::oDbf:CPOBCLI := ::oDbfCli:Poblacion
         ::oDbf:CPROCLI := ::oDbfCli:Provincia
         ::oDbf:CCDPCLI := ::oDbfCli:CodPostal
         ::oDbf:CTLFCLI := ::oDbfCli:Telefono

         ::oDbf:Save()

      end

      ::oDbfCli:Skip()

      ::oMtrInf:AutoInc( ::oDbfCli:OrdKeyNo() )

   end

   ::oDbfCli:IdxDelete( Auth():Codigo(), GetFileNoExt( ::oDbfCli:cFile ) )

   ::oMtrInf:AutoInc( ::oDbfCli:LastRec() )

   ::oDlg:Enable()

RETURN ( ::oDbf:LastRec() > 0 )
