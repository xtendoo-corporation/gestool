#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\TotalDocument.prg"
_HB_CLASS TotalDocument ; function TotalDocument ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TotalDocument", iif( .F., { }, { @HBObject() } ), @TotalDocument() ) ) ;

   _HB_MEMBER { oIva } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oIva"}, .F. )
   _HB_MEMBER { oSender } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oSender"}, .F. )

   _HB_MEMBER New( oSender); oClass:AddMethod( "New", @TotalDocument_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Calculate(); oClass:AddMethod( "Calculate", @TotalDocument_Calculate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getBruto(); oClass:AddMethod( "getBruto", @TotalDocument_getBruto(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transBruto(); oClass:AddInline( "transBruto", {|Self | ( ( Self ) ), ( Trans( ::getBruto(), cPorDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getBase(); oClass:AddMethod( "getBase", @TotalDocument_getBase(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transBase(); oClass:AddInline( "transBase", {|Self | ( ( Self ) ), ( Trans( ::getBase(), cPorDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getDescuento(); oClass:AddMethod( "getDescuento", @TotalDocument_getDescuento(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transDescuento(); oClass:AddInline( "transDescuento", {|Self | ( ( Self ) ), ( Trans( ::getDescuento(), cPorDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getImporteIva(); oClass:AddMethod( "getImporteIva", @TotalDocument_getImporteIva(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transImporteIva(); oClass:AddInline( "transImporteIva", {|Self | ( ( Self ) ), ( Trans( ::getImporteIva(), cPorDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getImporteRecargo(); oClass:AddMethod( "getImporteRecargo", @TotalDocument_getImporteRecargo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transImporteRecargo(); oClass:AddInline( "transImporteRecargo", {|Self | ( ( Self ) ), ( Trans( ::getImporteRecargo(), cPorDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transPrice(); oClass:AddMethod( "transPrice", @TotalDocument_transPrice(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTotalDocument(); oClass:AddMethod( "getTotalDocument", @TotalDocument_getTotalDocument(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER transTotalDocument(); oClass:AddInline( "transTotalDocument", {|Self | ( ( Self ) ), ( Trans( ::getTotalDocument(), cPorDiv() ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Reset(); oClass:AddInline( "Reset", {|Self | ( ( Self ) ), ( ::oIva:Reset() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER showBrutoIVA(); oClass:AddInline( "showBrutoIVA", {|Self, nPosition | ( ( Self ) ), ( ::oIva:showBruto( nPosition ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER showBaseIVA(); oClass:AddInline( "showBaseIVA", {|Self, nPosition | ( ( Self ) ), ( ::oIva:showBase( nPosition ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER showPorcentajesIVA(); oClass:AddInline( "showPorcentajesIVA", {|Self, nPosition | ( ( Self ) ), ( ::oIva:showPorcentajes( nPosition ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER showImportesIVA(); oClass:AddInline( "showImportesIVA", {|Self, nPosition | ( ( Self ) ), ( ::oIva:showImportes( nPosition ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER showTotalIVA(); oClass:AddInline( "showTotalIVA", {|Self, nPosition | ( ( Self ) ), ( ::oIva:showTotal( nPosition ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TotalDocument ;



static FUNCTION TotalDocument_New( oSender ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   ::oSender      := oSender

   ::oIva         := Iva():New( oSender )

Return( Self )



static FUNCTION TotalDocument_Calculate( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   local oDocumentLine

   ::Reset()

   for each oDocumentLine in ::oSender:oDocumentLines:aLines
      ::oIva:add( oDocumentLine )
   next

Return ( Self )



static FUNCTION TotalDocument_getBase( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   Local Base           := 0

   aeval( ::oIva:aIva, {|hIva, nPosition| Base += ::oIva:Base( nPosition ) } )

Return( Base )



static FUNCTION TotalDocument_getBruto( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   Local Bruto          := 0

   aeval( ::oIva:aIva, {|hIva, nPosition| Bruto += ::oIva:Bruto( nPosition ) } )

Return( Bruto )




static FUNCTION TotalDocument_getImporteIva( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   local TotalImporteIVA   := 0

   aeval( ::oIva:aIva, {|hIva, nPosition| TotalImporteIVA += ::oIva:ImporteImpuesto( nPosition ) } )

Return ( TotalImporteIVA )



static FUNCTION TotalDocument_getImporteRecargo( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   local TotalImporteRecargo     := 0

   aeval( ::oIva:aIva, {|hIva, nPosition| TotalImporteRecargo += ::oIva:ImporteRecargo( nPosition ) } )

Return ( TotalImporteRecargo )



static FUNCTION TotalDocument_getTotalDocument( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   local TotalDocument

   TotalDocument        := ::getBase()
   TotalDocument        += ::getImporteIva()
   TotalDocument        += ::getImporteRecargo()

Return ( TotalDocument )



static FUNCTION TotalDocument_getDescuento( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   local Descuento      := 0

   if !empty( ::oSender:hGetMaster( "PorcentajeDescuento1" ) )
      Descuento         := ::getBruto() * ::oSender:hGetMaster( "PorcentajeDescuento1" ) / 100
   end

Return ( Descuento )



static FUNCTION TotalDocument_transPrice( ) ; local Self AS CLASS TotalDocument := QSelf() AS CLASS TotalDocument

   Local transImporte

   transImporte         := ::getImporteIva()

   if ::oIva:getValueMaster( "RecargoEquivalencia" )
      transImporte      += ::getImporteRecargo()
   endif

Return( Trans( transImporte, cPorDiv() ) )
