#line 91 "\fwh1801\include\FiveWin.ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 9 ".\.\Prg\Tpanel.prg"
_HB_CLASS TPanel ; function TPanel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TPanel", iif( .T., { @TControl() }, { @HBObject() } ), @TPanel() ) ) ;

   _HB_MEMBER { AS LOGICAL lRegistered } ; oClass:AddMultiClsData( "LOGICAL",, nScope + iif( .F., 16, 0 ) + iif( .T., 32, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"lRegistered"}, .F. )

   _HB_MEMBER { aProperties } ; oClass:AddMultiClsData(, { "aControls", "nAlign", "nClrPane", "Cargo" }, nScope + iif( .F., 16, 0 ) + iif( .T., 32, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"aProperties"}, .F. )

   _HB_MEMBER { AS NUMERIC nOpacity } ; oClass:AddMultiData( "NUMERIC", 255, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nOpacity"}, .F. )

   _HB_MEMBER New( nTop, nLeft, nBottom, nRight, oWnd, lDesign, cVarName) AS CLASS TPanel; oClass:AddMethod( "New", @TPanel_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER EraseBkGnd( hDC); oClass:AddMethod( "EraseBkGnd", @TPanel_EraseBkGnd(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Paint(); oClass:AddMethod( "Paint", @TPanel_Paint(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Display(); oClass:AddInline( "Display", {|Self | ( ( Self ) ), ::BeginPaint(), ::Paint(), ::EndPaint(), 0 }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Notify(); oClass:AddInline( "Notify", {|Self, nIdCtrl, nPtrNMHDR | ( ( Self ) ), ::oWnd:Notify( nIdCtrl, nPtrNMHDR ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TPanel ;



static FUNCTION TPanel_New( nTop, nLeft, nBottom, nRight, oWnd, lDesign, cVarName ) ; local Self AS CLASS TPanel := QSelf() AS CLASS TPanel


   If( nTop == nil, nTop := 0, ) ; If( nLeft == nil, nLeft := 0, ); If( nBottom == nil, nBottom := 100, ); If( nRight == nil, nRight := 100, ); If( oWnd == nil, oWnd := GetWndDefault(), ); If( lDesign == nil, lDesign := .F., );

   ::lUnicode  = FW_SetUnicode()
   ::nTop    = nTop
   ::nLeft   = nLeft
   ::nBottom = nBottom
   ::nRight  = nRight
   ::oWnd    = oWnd
   ::nStyle  = nOr( 1073741824, 268435456, 33554432 )

   ::lDrag   = lDesign
   ::nClrPane = GetSysColor( 15 )





   ::Register()

   if ! Empty( ::oWnd:hWnd )
      ::Create()
      ::oWnd:AddControl( Self )
      if ::oWnd:oBrush <> nil
         ::SetBrush( ::oWnd:oBrush )
      endif
      if ::oWnd:oFont <> nil
         ::SetFont( ::oWnd:oFont )
      endif
   else
      ::oWnd:DefControl( Self )
   endif
   If( cVarName == nil, cVarName := "oPnel" + ::GetCtrlIndex(), ) ;
   ::cVarName = cVarName
   if lDesign
      ::CheckDots()
   endif


return Self



static FUNCTION TPanel_Paint( ) ; local Self AS CLASS TPanel := QSelf() AS CLASS TPanel

   local nTop, nLeft, nHeight, nWidth, nBevel
   local aInfo := ::DispBegin()

   if ::lTransparent .OR. ::nOpacity < 255
      SetBrushOrgEx( ::hDC, -::nLeft, -::nTop )
      FillRect( ::hDC, GetClientRect( ::hWnd ), ::oWnd:oBrush:hBrush )
      if ! ::lTransparent
         FillRectEx( ::hDC, GetClientRect( ::hWnd ), nARGB( ::nOpacity, ::nClrPane ) )
      endif
   else
      ::PaintBack( ::hDC )

   endif

   if ::oClient <> nil .AND. ( nBevel := ::oClient:nClientBevel ) > 0
      nBevel  -= 1
      nTop    := nBevel
      nLeft   := nBevel
      nHeight := ::nHeight - nBevel - 1
      nWidth  := ::nWidth - nBevel - 1
      if ::oTop <> nil
         nTop += ::oTop:nHeight
      endif
      if ::oBottom <> nil
         nHeight -= ::oBottom:nHeight
      endif
      if ::oLeft <> nil
         nLeft += ::oLeft:nWidth
      endif
      if ::oRight <> nil
         nWidth -= ::oRight:nWidth
      endif
      WndBoxIn( ::hDC, nTop, nLeft, nHeight, nWidth )
   endif

   if ValType( ::bPainted ) == "B"
      Eval( ::bPainted, ::hDC, ::cPS, Self )
   endif

   ::DispEnd( aInfo )

return 0



static FUNCTION TPanel_EraseBkGnd( hDC ) ; local Self AS CLASS TPanel := QSelf() AS CLASS TPanel


   if ::oWnd <> nil .AND. IsAppThemed() .AND.  Upper( ::oWnd:ClassName() ) $ "TFOLDER,TFOLDEREX,TREBAR,TGROUP,TPANEL"
      DrawPBack( ::hWnd, hDC )
      return 1
   endif

return 1
