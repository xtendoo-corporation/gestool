#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\Tproyecto.prg"
_HB_CLASS TProyecto ; function TProyecto ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TProyecto", iif( .T., { @TMant() }, { @HBObject() } ), @TProyecto() ) ) ;

   _HB_MEMBER { oInstance } ; oClass:AddMultiClsData(,, nScope + iif( .F., 16, 0 ) + iif( .T., 32, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oInstance"}, .F. )

   _HB_MEMBER { cMru } ; oClass:AddMultiData(, "Led_Red_16", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cMru"}, .F. )

   _HB_MEMBER { oGetCodigo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetCodigo"}, .F. )
   _HB_MEMBER { oGetNombre } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetNombre"}, .F. )

   _HB_MEMBER New( cPath, oWndParent, oMenuItem) AS CLASS TProyecto; oClass:AddMethod( "New", @TProyecto_New(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER Create( cPath) AS CLASS TProyecto; oClass:AddMethod( "Create", @TProyecto_Create(), nScope + iif( .T., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TProyecto_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( nMode); oClass:AddMethod( "Resource", @TProyecto_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
   _HB_MEMBER StartResource() ; oClass:AddVirtual( "StartResource" )
   _HB_MEMBER lSaveResource(); oClass:AddMethod( "lSaveResource", @TProyecto_lSaveResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TProyecto ;



static FUNCTION TProyecto_New( cPath, oWndParent, nLevel ) ; local Self AS CLASS TProyecto := QSelf() AS CLASS TProyecto

   If( oWndParent == nil, oWndParent := GetWndFrame(), ) ;
   If( nLevel == nil, nLevel := "01104", ) ;

   ::Create( cPath )

   if Empty( ::nLevel )
      ::nLevel          := Auth():Level( nLevel )
   end





   if oWndParent <> nil
      oWndParent:CloseAll()
   end

   ::cPath              := cPath
   ::oWndParent         := oWndParent

   ::lAutoButtons       := .T.
   ::lCreateShell       := .F.

RETURN ( Self )



static FUNCTION TProyecto_Create( cPath ) ; local Self AS CLASS TProyecto := QSelf() AS CLASS TProyecto

   If( cPath == nil, cPath := cPatEmp(), ) ;

   ::cPath              := cPath
   ::oDbf               := nil

RETURN ( Self )



static FUNCTION TProyecto_DefineFiles( cPath, cDriver ) ; local Self AS CLASS TProyecto := QSelf() AS CLASS TProyecto

   If( cPath == nil, cPath := ::cPath, ) ;
   If( cDriver == nil, cDriver := cDriver(), ) ;

   ::oDbf := DbfServer( "Proyecto.Dbf", "Proyecto" ):New( "Proyecto.Dbf", "Proyecto", ( cDriver ), getConfigTraslation( "Proyectos" ), ( cPath ) )

      ::oDbf:AddField( "cCodPry", "C", 4, 0,,,,, "Código", .F., 80, .F., {} )
      ::oDbf:AddField( "cNomPry", "C", 30, 0,,,,, "Nombre", .F., 200, .F., {} )
      ::oDbf:AddField( "cCodPdr", "C", 4, 0,,,,, "Grupo padre", .F.,, .T., {} )
      ::oDbf:AddField( "cSerPry", "C", 30, 0,,,,, "Número serie", .F., 200, .F., {} )
      ::oDbf:AddField( "cSitPry", "C", 30, 0,,,,, "Situación", .F., 200, .F., {} )
      ::oDbf:AddField( "dFecPry", "D", 8, 0,,,,, "Fecha compra", .F., 80, .F., {} )
      ::oDbf:AddField( "nComPry", "N", 16, 6, cPorDiv(),,,, "Precio compra", .F.,, .T., {} )
      ::oDbf:AddField( "nCosPry", "N", 16, 6, cPorDiv(),,,, "Costo dia", .F.,, .T., {} )

      ::oDbf:AddIndex( "cCodPry", "Proyecto.Cdx", "cCodPry",,, .F., .F., "Código",,, .T., .F. )
      ::oDbf:AddIndex( "cNomPry", "Proyecto.Cdx", "cNomPry",,, .F., .F., "Nombre",,, .T., .F. )
      ::oDbf:AddIndex( "cCodPdr", "Proyecto.Cdx", "cCodPdr",,, .F., .F., "Grupo padre",,, .T., .F. )



RETURN ( ::oDbf )



static FUNCTION TProyecto_Resource( nMode ) ; local Self AS CLASS TProyecto := QSelf() AS CLASS TProyecto

    local oDlg

   oDlg = TDialog():New(,,,, LblTitle( nMode ) + getConfigTraslation( "Proyecto" ), "Proyecto",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )







      ::oGetCodigo := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oDbf:cCodPry, ::oDbf:cCodPry:= u ) }, oDlg,, "@!", {||    NotValid( ::oGetCodigo, ::oDbf:cAlias, .T., "0" )},,,,,, .F., {||     ( nMode == 1 .OR. nMode == 4 )},, .F., .F.,,,,,, nil,,, )





      ::oGetNombre := TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oDbf:cNomPry, ::oDbf:cNomPry:= u ) }, oDlg,,,,,,,,, .F., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )




      TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::oDbf:cSerPry, ::oDbf:cSerPry:= u ) }, oDlg,,,,,,,,, .F., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )





      TComboBox():ReDefine( 130, { | u | If( PCount()==0, ::oDbf:cSitPry, ::oDbf:cSitPry:= u ) }, ( SituacionesModel():getArrayNombres() ), oDlg,,,,,,, .F., {||     ( nMode <> 3 )},,,,,,,,,,,,, )





      TGetHlp():ReDefine( 140, { | u | If( PCount()==0, ::oDbf:dFecPry, ::oDbf:dFecPry:= u ) }, oDlg,,,,,,,,, .F., {||     ( nMode <> 3 )},, .F., .T.,,,,,, nil,,, )





      TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oDbf:nComPry, ::oDbf:nComPry:= u ) }, oDlg,, ( cPorDiv() ),,,,,,, .F., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )





      TGetHlp():ReDefine( 160, { | u | If( PCount()==0, ::oDbf:nCosPry, ::oDbf:nCosPry:= u ) }, oDlg,, ( cPorDiv() ),,,,,,, .F., {||     ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )









      TButton():ReDefine( 1, {||( ::lSaveResource( nMode, oDlg ) )}, oDlg,,, .F., {||         ( nMode <> 3 )},,, .F. )





        TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .T. )

   oDlg:AddFastKey( 116, {|| ::lSaveResource( nMode, oDlg ) } )

   oDlg:bStart          := {|| ::StartResource() }

    oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

RETURN ( oDlg:nResult == 1 )



static FUNCTION TProyecto_lSaveResource( nMode, oDlg ) ; local Self AS CLASS TProyecto := QSelf() AS CLASS TProyecto

   local aGrp

   ::oDbf:cCodPdr    := Space( 4 )

   if ( nMode == 1 .OR. nMode == 4 )

      if Empty( ::oDbf:cCodPry )
         MsgStop( "Código de " + getConfigTraslation( "Proyecto" ) + " no puede estar vacío" )
         ::oGetCodigo:SetFocus()
         Return nil
      end

      if ::oDbf:SeekInOrd( ::oDbf:cCodPry, "cCodPry" )
         msgStop( "Código existente" )
         ::oGetCodigo:SetFocus()
         Return nil
      end

   end

   if Empty( ::oDbf:cNomPry )
      MsgStop( "Nombre de "+ getConfigTraslation( "Proyecto" ) + " no puede estar vacío" )
      ::oGetNombre:SetFocus()
      Return nil
   end

Return oDlg:end( 1 )
