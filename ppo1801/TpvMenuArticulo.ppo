#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 7 ".\.\Prg\TpvMenuArticulo.prg"
_HB_CLASS TpvMenuArticulo ; function TpvMenuArticulo ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TpvMenuArticulo", iif( .T., { @TDet() }, { @HBObject() } ), @TpvMenuArticulo() ) ) ;

   _HB_MEMBER { oBmpImage } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBmpImage"}, .F. )

   _HB_MEMBER DefineFiles(); oClass:AddMethod( "DefineFiles", @TpvMenuArticulo_DefineFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles( lExclusive); oClass:AddMethod( "OpenFiles", @TpvMenuArticulo_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TpvMenuArticulo_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource( nMode, lLiteral); oClass:AddMethod( "Resource", @TpvMenuArticulo_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lPreSave(); oClass:AddMethod( "lPreSave", @TpvMenuArticulo_lPreSave(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER PreSaveDetails(); oClass:AddMethod( "PreSaveDetails", @TpvMenuArticulo_PreSaveDetails(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER ValidCodigoArticulo(); oClass:AddMethod( "ValidCodigoArticulo", @TpvMenuArticulo_ValidCodigoArticulo(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER aArticulos(); oClass:AddMethod( "aArticulos", @TpvMenuArticulo_aArticulos(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER IncrementoPrecio(); oClass:AddMethod( "IncrementoPrecio", @TpvMenuArticulo_IncrementoPrecio(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER StartResource(); oClass:AddMethod( "StartResource", @TpvMenuArticulo_StartResource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TpvMenuArticulo ;



static FUNCTION TpvMenuArticulo_DefineFiles( cPath, cVia, lUniqueName, cFileName ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   local oDbf

   If( cPath == nil, cPath := ::cPath, ) ;
   If( lUniqueName == nil, lUniqueName := .F., ) ;
   If( cFileName == nil, cFileName := "TpvMnuArt", ) ;
   If( cVia == nil, cVia := cDriver(), ) ;

   if lUniqueName
      cFileName         := cGetNewFileName( cFileName, , , cPath )
   end

   oDbf := DbfServer( ( cFileName ), ( cFileName ) ):New( ( cFileName ), ( cFileName ), ( cVia ), "Articulo Menú", ( cPath ) )

      oDbf:AddField( "cCodMnu", "C", 03, 0,,,,, "Código menu", .F.,, .F., {} )
      oDbf:AddField( "cCodOrd", "C", 02, 0,,,,, "Código orden", .F.,, .F., {} )
      oDbf:AddField( "cCodArt", "C", 18, 0,,,,, "Código artículo", .F.,, .F., {} )
      oDbf:AddField( "nIncPre", "N", 16, 6,,,,, "Incremento en el precio", .F.,, .F., {} )


      oDbf:AddIndex( "cCodMnu", ( cFileName ), "cCodMnu",,, .F., .F.,,,, .T., .F. )
      oDbf:AddIndex( "cCodOrd", ( cFileName ), "cCodOrd",,, .F., .F.,,,, .T., .F. )
      oDbf:AddIndex( "cCodArt", ( cFileName ), "cCodArt",,, .F., .F.,,,, .T., .F. )
      oDbf:AddIndex( "cOrdArt", ( cFileName ), "cCodOrd + cCodArt",,, .F., .F.,,,, .T., .F. )
      oDbf:AddIndex( "cMnuOrd", ( cFileName ), "cCodMnu + cCodOrd + cCodArt",,, .F., .F.,,,, .T., .F. )



RETURN ( oDbf )



static FUNCTION TpvMenuArticulo_OpenFiles( lExclusive ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   local lOpen             := .T.
   local oError
   local oBlock            := ErrorBlock( {| oError | ApoloBreak( oError ) } )

   If( lExclusive == nil, lExclusive := .F., ) ;

   BEGIN SEQUENCE

      if Empty( ::oDbf )
         ::oDbf            := ::DefineFiles()
      end

      ::oDbf:Activate( .F., !lExclusive )

      ::bOnPreSaveDetail   := {|| ::PreSaveDetails() }

   RECOVER USING oError

      msgStop( ErrorMessage( oError ), "Imposible abrir todas las bases de datos" )

      ::CloseFiles()

      lOpen                := .F.

   end

   ErrorBlock( oBlock )

RETURN ( lOpen )



static FUNCTION TpvMenuArticulo_CloseFiles( ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   if !empty( ::oDbf ) .AND. ::oDbf:Used()
      ::oDbf:End()
      ::oDbf            := nil
   end

RETURN .T.



static FUNCTION TpvMenuArticulo_ValidCodigoArticulo( oGetCodigoArticulo ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   local lValid      := .F.

   if cArticulo( oGetCodigoArticulo, ::oParent:oDbfArticulo:cAlias, oGetCodigoArticulo:oHelpText )

      if !::oParent:oDbfArticulo:lIncTcl
         MsgStop( "El artículo no está incluido en el táctil" )
         Return ( lValid )
      end

      if ::oBmpImage <> nil
         ::oBmpImage:LoadBMP( cFileBmpName( ::oParent:oDbfArticulo:cImagen, .T. ) )
         ::oBmpImage:Refresh()
      end

      lValid         := .T.

   end

RETURN (lValid)



static FUNCTION TpvMenuArticulo_Resource( nMode ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   local oDlg
   local oGetCodigoArticulo

   if ::nMode == 1
      ::oDbfVir:cCodOrd := ::oParent:oMenuOrdenes:cScopeValue
   end



   oDlg = TDialog():New(,,,, LblTitle( nMode ) + "artículo", "TpvMenuArticulo",, .F.,,,,,, .F.,,,,,, .F.,, "oDlg", nil, )






      oGetCodigoArticulo := TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oDbfVir:cCodArt, ::oDbfVir:cCodArt:= u ) }, oDlg,,,,,,,,, .F.,,, .F., .F.,,,,,, nil, "Lupa",, 101 )

      oGetCodigoArticulo:bWhen   := {|| nMode == 1 }
      oGetCodigoArticulo:bValid  := {|| ::ValidCodigoArticulo(oGetCodigoArticulo) }
      oGetCodigoArticulo:bHelp   := {|| BrwArticulo( oGetCodigoArticulo, oGetCodigoArticulo:oHelpText ) }





      ::oBmpImage := TImage():ReDefine( 102,,, oDlg,,, .F., .F.,,, .F.,,, .F. )

      ::oBmpImage:SetColor( , GetSysColor( 15 ) )

      ::oBmpImage:bLClicked  := {|| ShowImage( ::oBmpImage ) }
      ::oBmpImage:bRClicked  := {|| ShowImage( ::oBmpImage ) }







      TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::oDbfVir:nIncPre, ::oDbfVir:nIncPre:= u ) }, oDlg,, ( cPorDiv() ),,,,,,, .F., {||        ( nMode <> 3 )},, .F., .F.,,,,,, nil,,, )







      TButton():ReDefine( 1, {||( ::lPreSave( nMode, oDlg ) )}, oDlg,,, .F., {||        ( nMode <> 3 )},,, .F. )




        TButton():ReDefine( 2, {||( oDlg:end() )}, oDlg,,, .F.,,,, .F. )

      if nMode <> 3
         oDlg:AddFastKey( 116, {|| ::lPreSave( nMode, oDlg ) } )
      end

      oDlg:bStart    := {|| ::StartResource( nMode, oGetCodigoArticulo ) }

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,,, oDlg:bRClicked,,, )

   ::oBmpImage:End()

RETURN ( oDlg:nResult == 1 )



static FUNCTION TpvMenuArticulo_lPreSave( nMode, oDlg ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   if ( nMode == 1 .OR. nMode == 4 )

      if Empty( ::oDbfVir:cCodArt )
         MsgStop( "Código del artículo no puede estar vacio" )
         Return ( .F. )
      end

      if ::oDbfVir:SeekInOrd( ( ::oDbfVir:cCodOrd + ::oDbfVir:cCodArt ), "cOrdArt" )
         MsgStop( "El artículo ya esta añadido" )
         Return ( .F. )
      end

   end

RETURN ( oDlg:End( 1 ) )



static FUNCTION TpvMenuArticulo_PreSaveDetails( ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   ::oDbfVir:cCodMnu                               := ::oParent:oDbf:cCodMnu




RETURN ( Self )



static FUNCTION TpvMenuArticulo_aArticulos( cCodMnu, cCodOrd ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   local aArticulos     := {}

   ::oDbf:GetStatus()

   ::oDbf:OrdSetFocus( "cMnuOrd" )

   if ::oDbf:Seek( cCodMnu + cCodOrd )

      while ( cCodMnu + cCodOrd == ::oDbf:cCodMnu + ::oDbf:cCodOrd ) .AND. !::oDbf:eof()

         aAdd( aArticulos, ::oDbf:cCodArt )

         ::oDbf:skip()

      end

   end

   ::oDbf:SetStatus()

RETURN (aArticulos)



static FUNCTION TpvMenuArticulo_IncrementoPrecio( cCodigoArticulo, cCodigoMenu, cCodigoOrden ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   local nPrecio     := 0

   ::oDbf:GetStatus()

   ::oDbf:OrdSetFocus( "cMnuOrd" )

   if ::oDbf:Seek( cCodigoMenu + cCodigoOrden + cCodigoArticulo)

      nPrecio        := ::oDbf:nIncPre

   end

   ::oDbf:SetStatus()

RETURN ( nPrecio )



static FUNCTION TpvMenuArticulo_StartResource( nMode, oGetCodigoArticulo ) ; local Self AS CLASS TpvMenuArticulo := QSelf() AS CLASS TpvMenuArticulo

   if ( nMode <> 1 )
      cArticulo( oGetCodigoArticulo, ::oParent:oDbfArticulo:cAlias, oGetCodigoArticulo:oHelpText )
   end

RETURN (Self)
