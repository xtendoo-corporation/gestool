#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Controllers\TransportistasController.prg"
_HB_CLASS TransportistasController ; function TransportistasController ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TransportistasController", iif( .T., { @SQLNavigatorController() }, { @HBObject() } ), @TransportistasController() ) ) ;

   _HB_MEMBER { oIncidenciasController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oIncidenciasController"}, .F. )

   _HB_MEMBER { oDocumentosController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDocumentosController"}, .F. )

   _HB_MEMBER { oCamposExtraValoresController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCamposExtraValoresController"}, .F. )

   _HB_MEMBER { oDireccionesController } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDireccionesController"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TransportistasController_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER End(); oClass:AddMethod( "End", @TransportistasController_End(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TransportistasController ;



static FUNCTION TransportistasController_New( oSenderController ) ; local Self AS CLASS TransportistasController := QSelf() AS CLASS TransportistasController

   ::Super:New( oSenderController )

   ::cTitle                         := "Transportistas"

   ::cName                          := "transportistas"



   ::hImage                         := {  "16" => "gc_small_truck_16", "32" => "gc_small_truck_32", "48" => "gc_small_truck_48" }

   ::nLevel                         := Auth():Level( ::cName )

   ::oModel                         := SQLTransportistasModel():New( self )

   ::oBrowseView                    := TransportistasBrowseView():New( self )

   ::oDialogView                    := TransportistasView():New( self )

   ::oValidator                     := TransportistasValidator():New( self, ::oDialogView )

   ::oDireccionesController         := DireccionesController():New( self )
   ::oDireccionesController:setView( ::oDialogView )

   ::oRepository                    := TransportistasRepository():New( self )

   ::oCamposExtraValoresController  := CamposExtraValoresController():New( self, ::oModel:cTableName )

   ::oGetSelector                   := GetSelector():New( self )

   ::oFilterController:setTableToFilter( ::oModel:cTableName )

   ::oModel:setEvent( "loadedBlankBuffer",            {|| ::oDireccionesController:loadPrincipalBlankBuffer() } )
   ::oModel:setEvent( "insertedBuffer",               {|| ::oDireccionesController:insertBuffer() } )

   ::oModel:setEvent( "loadedCurrentBuffer",          {|| ::oDireccionesController:loadedCurrentBuffer( ::getUuid() ) } )
   ::oModel:setEvent( "updatedBuffer",                {|| ::oDireccionesController:updateBuffer( ::getUuid() ) } )

   ::oModel:setEvent( "loadedDuplicateCurrentBuffer", {|| ::oDireccionesController:loadedDuplicateCurrentBuffer( ::getUuid() ) } )
   ::oModel:setEvent( "loadedDuplicateBuffer",        {|| ::oDireccionesController:loadedDuplicateBuffer( ::getUuid() ) } )

   ::oModel:setEvent( "deletedSelection",             {|| ::oDireccionesController:deleteBuffer( ::getUuidFromRecno( ::oBrowseView:getBrowse():aSelected ) ) } )

   ::oIncidenciasController         := IncidenciasController():New( self )

   ::oDocumentosController          := DocumentosController():New( self )

RETURN ( Self )



static FUNCTION TransportistasController_End( ) ; local Self AS CLASS TransportistasController := QSelf() AS CLASS TransportistasController

   ::oModel:End()

   ::oBrowseView:End()

   ::oDialogView:End()

   ::oValidator:End()

   ::oDireccionesController:End()

   ::oRepository:End()

   ::oCamposExtraValoresController:End()

   ::oGetSelector:End()

   ::Super:End()

RETURN ( Self )











_HB_CLASS TransportistasBrowseView ; function TransportistasBrowseView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TransportistasBrowseView", iif( .T., { @SQLBrowseView() }, { @HBObject() } ), @TransportistasBrowseView() ) ) ;

   _HB_MEMBER addColumns(); oClass:AddMethod( "addColumns", @TransportistasBrowseView_addColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TransportistasBrowseView ;



static FUNCTION TransportistasBrowseView_addColumns( ) ; local Self AS CLASS TransportistasBrowseView := QSelf() AS CLASS TransportistasBrowseView

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "id"
      :cHeader             := "Id"
      :nWidth              := 80
      :bEditValue          := {|| ::getRowSet():fieldGet( "id" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cHeader             := "Uuid"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "uuid" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
      :lHide               := .T.
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "codigo"
      :cHeader             := "Código"
      :nWidth              := 100
      :bEditValue          := {|| ::getRowSet():fieldGet( "codigo" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "nombre"
      :cHeader             := "Nombre"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "nombre" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

   with object ( ::oBrowse:AddCol() )
      :cSortOrder          := "dni"
      :cHeader             := "DNI/CIF"
      :nWidth              := 300
      :bEditValue          := {|| ::getRowSet():fieldGet( "dni" ) }
      :bLClickHeader       := {| row, col, flags, oColumn | ::onClickHeader( oColumn ) }
   end

RETURN ( self )









_HB_CLASS TransportistasView ; function TransportistasView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TransportistasView", iif( .T., { @SQLBaseView() }, { @HBObject() } ), @TransportistasView() ) ) ;

   _HB_MEMBER Activate(); oClass:AddMethod( "Activate", @TransportistasView_Activate(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER StartDialog(); oClass:AddMethod( "StartDialog", @TransportistasView_StartDialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER addLinksToExplorerBar(); oClass:AddMethod( "addLinksToExplorerBar", @TransportistasView_addLinksToExplorerBar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TransportistasView ;



static FUNCTION TransportistasView_Activate( ) ; local Self AS CLASS TransportistasView := QSelf() AS CLASS TransportistasView

   local oSayCamposExtra
   local oSayT
   local oGetDni
   local oBtnEdit
   local oBtnAppend
   local oBtnDelete



   ::oDialog = TDialog():New(,,,, ::LblTitle() + "transportistas", "TRANSPORTISTA",, .F.,,,,,, .F.,,,,,, .F.,, "::oDialog", nil, )





   ::oBitmap := TBitmap():ReDefine( 900, ::oController:getImage( "48" ),, ::oDialog,,, .F., .F.,,, .F.,,, .T. )





   ::oMessage := TSay():ReDefine( 800, {||      "Transportista"}, ::oDialog,,,, .F., getBoldFont(), .F., .F., )






   TGetHlp():ReDefine( 100, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "codigo" ], ::oController:oModel:hBuffer[ "codigo" ]:= u ) }, ::oDialog,, "@! NNNNNNNNNNNNNNNNNNNN", {||       ( ::oController:validate( "codigo" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TGetHlp():ReDefine( 110, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "nombre" ], ::oController:oModel:hBuffer[ "nombre" ]:= u ) }, ::oDialog,,, {||       ( ::oController:validate( "nombre" ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )






   oGetDni := TGetHlp():ReDefine( 120, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "dni" ], ::oController:oModel:hBuffer[ "dni" ]:= u ) }, ::oDialog,,, {||       ( checkCif( oGetDni ) )},,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )

   ::oController:oDireccionesController:oDialogView:ExternalRedefine( ::oDialog )

   ::redefineExplorerBar( 700 )





   TGetHlp():ReDefine( 130, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "tara" ], ::oController:oModel:hBuffer[ "tara" ]:= u ) }, ::oDialog,, "@! 9999999.999999",,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TGetHlp():ReDefine( 140, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "matricula" ], ::oController:oModel:hBuffer[ "matricula" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )




   TGetHlp():ReDefine( 150, { | u | If( PCount()==0, ::oController:oModel:hBuffer[ "remolque" ], ::oController:oModel:hBuffer[ "remolque" ]:= u ) }, ::oDialog,,,,,,,,, .F., {||        ( ::oController:isNotZoomMode() )},, .F., .F.,,,,,, nil,,, )





   TButton():ReDefine( 1, {||( if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) )}, ::oDialog,,, .F., {||        ( ::oController:isNotZoomMode() )},,, .F. )





   TButton():ReDefine( 2, {||( ::oDialog:end() )}, ::oDialog,,, .F.,,,, .T. )

   if ::oController:isNotZoomMode()
      ::oDialog:AddFastKey( 113, {|| ::oController:oDireccionesController:Append() } )
      ::oDialog:AddFastKey( 114, {|| ::oController:oDireccionesController:Edit() } )
      ::oDialog:AddFastKey( 115, {|| ::oController:oDireccionesController:Delete() } )
      ::oDialog:AddFastKey( 116, {|| if( validateDialog( ::oDialog ), ::oDialog:end( 1 ), ) } )
   end

   ::oDialog:bStart  := {|| ::StartDialog() }

   ::oDialog:Activate( ::oDialog:bLClicked, ::oDialog:bMoved, ::oDialog:bPainted, .T.,,,, ::oDialog:bRClicked,,, )

   ::oBitmap:end()

RETURN ( ::oDialog:nResult )



static FUNCTION TransportistasView_StartDialog( ) ; local Self AS CLASS TransportistasView := QSelf() AS CLASS TransportistasView

   ::oController:oDireccionesController:externalStartDialog()

   ::addLinksToExplorerBar()

RETURN ( nil )



static FUNCTION TransportistasView_addLinksToExplorerBar( ) ; local Self AS CLASS TransportistasView := QSelf() AS CLASS TransportistasView

   local oPanel

   oPanel            := ::oExplorerBar:AddPanel( "Datos relacionados", nil, 1 )

   if ::oController:isNotZoomMode()
      oPanel:AddLink( "Incidencias...",         {|| ::oController:oIncidenciasController:activateDialogView() }, ::oController:oIncidenciasController:getImage( "16" ) )
      oPanel:AddLink( "Documentos...",          {|| ::oController:oDocumentosController:activateDialogView() }, ::oController:oDocumentosController:getImage( "16" ) )
   end

   oPanel            := ::oExplorerBar:AddPanel( "Otros datos", nil, 1 )

   if ::oController:isNotZoomMode()
      oPanel:AddLink( "Campos extra...",        {|| ::oController:oCamposExtraValoresController:Edit( ::oController:getUuid() ) }, ::oController:oCamposExtraValoresController:getImage( "16" ) )
   end

RETURN ( self )










_HB_CLASS TransportistasValidator ; function TransportistasValidator ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TransportistasValidator", iif( .T., { @SQLCompanyValidator() }, { @HBObject() } ), @TransportistasValidator() ) ) ;

   _HB_MEMBER getValidators(); oClass:AddMethod( "getValidators", @TransportistasValidator_getValidators(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TransportistasValidator ;



static FUNCTION TransportistasValidator_getValidators( ) ; local Self AS CLASS TransportistasValidator := QSelf() AS CLASS TransportistasValidator




   ::hValidators  := {  "codigo" =>          {  "required"     => "El código del transportista es un dato requerido", "unique"       => "El código del transportista introducido ya existe" } , "nombre" =>          {  "required"     => "El nombre del transportista es un dato requerido", "unique"       => "El nombre del transportista introducido ya existe" } }

RETURN ( ::hValidators )










_HB_CLASS SQLTransportistasModel ; function SQLTransportistasModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "SQLTransportistasModel", iif( .T., { @SQLCompanyModel() }, { @HBObject() } ), @SQLTransportistasModel() ) ) ;

   _HB_MEMBER { cTableName } ; oClass:AddMultiData(, "transportistas", nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTableName"}, .F. )

   _HB_MEMBER getNombre( uuid); oClass:AddInline( "getNombre", {|Self , uuid| ( ( Self ) ), ( ::getField( "nombre", "uuid", uuid ) )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombreWhereCodigo( codigo); oClass:AddInline( "getNombreWhereCodigo", {|Self , codigo| ( ( Self ) ), ( ::getField( "nombre", "codigo", codigo ) )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getDniWhereCodigo( codigo); oClass:AddInline( "getDniWhereCodigo", {|Self , codigo| ( ( Self ) ), ( ::getField( "dni", "codigo", codigo ) )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUuidWhereCodigo( codigo); oClass:AddInline( "getUuidWhereCodigo", {|Self , codigo| ( ( Self ) ), ( ::getField( "uuid", "codigo", codigo ) )}, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getColumns(); oClass:AddMethod( "getColumns", @SQLTransportistasModel_getColumns(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER SeederToADS(); oClass:AddMethod( "SeederToADS", @SQLTransportistasModel_SeederToADS(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS SQLTransportistasModel ;



static FUNCTION SQLTransportistasModel_getColumns( ) ; local Self AS CLASS SQLTransportistasModel := QSelf() AS CLASS SQLTransportistasModel


   hset( ::hColumns, "id",                {  "create"    => "INTEGER AUTO_INCREMENT UNIQUE"           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "uuid",              {  "create"    => "VARCHAR(40) NOT NULL UNIQUE"             , "default"   => {|| win_uuidcreatestring() } }            )

   ::getEmpresaColumns()


   hset( ::hColumns, "codigo",            {  "create"    => "VARCHAR( 20 ) NOT NULL"                  , "default"   => {|| space( 20 ) } }                       )


   hset( ::hColumns, "nombre",            {  "create"    => "VARCHAR( 140 )"                          , "default"   => {|| space( 140 ) } }                      )


   hset( ::hColumns, "dni",               {  "create"    => "VARCHAR( 20 )"                           , "default"   => {|| space( 20 ) } }                       )


   hset( ::hColumns, "tara",              {  "create"    => "DECIMAL(19,6)"                           , "default"   => {|| 0 } }                                 )


   hset( ::hColumns, "matricula",         {  "create"    => "VARCHAR( 150 )"                          , "default"   => {|| space( 150 ) } }                      )


   hset( ::hColumns, "remolque",          {  "create"    => "VARCHAR( 150 )"                          , "default"   => {|| space( 150 ) } }                      )

RETURN ( ::hColumns )



static FUNCTION SQLTransportistasModel_SeederToADS( ) ; local Self AS CLASS SQLTransportistasModel := QSelf() AS CLASS SQLTransportistasModel



   local cSql  := "SELECT * "                   +  "FROM " + ::getTableName() + Space(1) +  "WHERE empresa_codigo = " + quoted( cCodEmp() )

RETURN ( getSQLDataBase():selectFetchHash( cSql ) )











_HB_CLASS TransportistasRepository ; function TransportistasRepository ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TransportistasRepository", iif( .T., { @SQLBaseRepository() }, { @HBObject() } ), @TransportistasRepository() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ( SQLTransportistasModel():getTableName() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombres(); oClass:AddMethod( "getNombres", @TransportistasRepository_getNombres(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getNombreWhereUuid(); oClass:AddInline( "getNombreWhereUuid", {|Self, Uuid | ( ( Self ) ), ( ::getColumnWhereUuid( Uuid, "nombre" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUuidWhereNombre(); oClass:AddInline( "getUuidWhereNombre", {|Self, cNombre | ( ( Self ) ), ( ::getUuidWhereColumn( cNombre, "nombre", "" ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TransportistasRepository ;



static FUNCTION TransportistasRepository_getNombres( ) ; local Self AS CLASS TransportistasRepository := QSelf() AS CLASS TransportistasRepository

   local cSentence     := "SELECT nombre FROM " + ::getTableName() + " ORDER BY nombre ASC"
   local aNombres      := ::getDatabase():selectFetchArrayOneColumn( cSentence )

   hb_AIns(aNombres,1,"", .T.)

RETURN ( aNombres )
