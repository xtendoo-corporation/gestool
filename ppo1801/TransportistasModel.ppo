#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 6 ".\Prg\Models\TransportistasModel.prg"
_HB_CLASS TransportistasModel ; function TransportistasModel ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TransportistasModel", iif( .T., { @ADSBaseModel() }, { @HBObject() } ), @TransportistasModel() ) ) ;

   _HB_MEMBER getTableName(); oClass:AddInline( "getTableName", {|Self | ( ( Self ) ), ::getEmpresaTableName( "transpor" ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getUuid(); oClass:AddInline( "getUuid", {|Self, cCodigo | ( ( Self ) ), ( ::getField( "uuid", "cCodTrn", cCodigo ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER InsertFromHashSql( hHashHead, hHashDir); oClass:AddMethod( "InsertFromHashSql", @TransportistasModel_InsertFromHashSql(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER lExisteUuid( uuid); oClass:AddMethod( "lExisteUuid", @TransportistasModel_lExisteUuid(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TransportistasModel ;



static FUNCTION TransportistasModel_InsertFromHashSql( hHashHead, hHashDir ) ; local Self AS CLASS TransportistasModel := QSelf() AS CLASS TransportistasModel

    local cStm     := "InsertFromHashSql"
       local cSql     := ""

       if !Empty( hHashHead ) .AND. !::lExisteUuid( hGet( hHashHead, "uuid" ) )

          cSql         := "INSERT INTO " + ::getTableName()
          cSql         += " ( cCodTrn, cNomTrn, cDirTrn, cLocTrn, cCdpTrn, cPrvTrn, cTlfTrn, cMovTrn, nKgsTrn, cMatTrn, cDniTrn, uuid ) VALUES "
          cSql         += " ( " + quoted( Padr( hGet( hHashHead, "codigo" ), 9 ) )
          cSql         += ", " + quoted( hGet( hHashHead, "nombre" ) )
         cSql         += ", " + if( Empty( hHashDir ), "''", quoted( hGet( hHashDir[1], "direccion" ) ) )
          cSql         += ", " + if( Empty( hHashDir ), "''", quoted( hGet( hHashDir[1], "poblacion" ) ) )
          cSql         += ", " + if( Empty( hHashDir ), "''", quoted( Padr( hGet( hHashDir[1], "codigo_postal" ), 5 ) ) )
          cSql         += ", " + if( Empty( hHashDir ), "''", quoted( hGet( hHashDir[1], "provincia" ) ) )
           cSql         += ", " + if( Empty( hHashDir ), "''", quoted( hGet( hHashDir[1], "telefono" ) ) )
          cSql         += ", " + if( Empty( hHashDir ), "''", quoted( hGet( hHashDir[1], "movil" ) ) )
          cSql         += ", " + AllTrim( Str( hGet( hHashHead, "tara" ) ) )
          cSql         += ", " + quoted( hGet( hHashHead, "matricula" ) )
          cSql         += ", " + quoted( hGet( hHashHead, "dni" ) )
          cSql         += ", " + quoted( hGet( hHashHead, "uuid" ) ) + " )"

          ::ExecuteSqlStatement( cSql, @cStm )

       end

Return ( nil )



static FUNCTION TransportistasModel_lExisteUuid( uuid ) ; local Self AS CLASS TransportistasModel := QSelf() AS CLASS TransportistasModel

   local cStm     := "lExisteUuid"
   local cSql     := ""

   cSql     := "SELECT * FROM " + ::getTableName() + " WHERE uuid = " + quoted( uuid )

      if ::ExecuteSqlStatement( cSql, @cStm )

         if ( cStm )->( RecCount() ) > 0
            Return ( .T. )
         end

      end

Return ( .F. )
