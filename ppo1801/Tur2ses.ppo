#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 10 ".\.\Prg\Tur2ses.prg"
_HB_CLASS TTur2Ses ; function TTur2Ses ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "TTur2Ses", iif( .F., { }, { @HBObject() } ), @TTur2Ses() ) ) ;

   _HB_MEMBER { oArt } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oArt"}, .F. )
   _HB_MEMBER { oArtNew } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oArtNew"}, .F. )

   _HB_MEMBER { oDbfTikT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfTikT"}, .F. )
   _HB_MEMBER { oDbfTikL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfTikL"}, .F. )
   _HB_MEMBER { oDbfTikP } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfTikP"}, .F. )
   _HB_MEMBER { oDbfTurT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfTurT"}, .F. )
   _HB_MEMBER { oDbfTurL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oDbfTurL"}, .F. )
   _HB_MEMBER { oAlbCliT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAlbCliT"}, .F. )
   _HB_MEMBER { oAlbCliL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAlbCliL"}, .F. )
   _HB_MEMBER { oFacCliT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacCliT"}, .F. )
   _HB_MEMBER { oFacCliL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacCliL"}, .F. )
   _HB_MEMBER { oFacCliP } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacCliP"}, .F. )
   _HB_MEMBER { oPedPrvT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oPedPrvT"}, .F. )
   _HB_MEMBER { oPedPrvL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oPedPrvL"}, .F. )
   _HB_MEMBER { oAlbPrvT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAlbPrvT"}, .F. )
   _HB_MEMBER { oAlbPrvL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oAlbPrvL"}, .F. )
   _HB_MEMBER { oFacPrvT } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacPrvT"}, .F. )
   _HB_MEMBER { oFacPrvL } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacPrvL"}, .F. )
   _HB_MEMBER { oFacPrvP } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oFacPrvP"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @TTur2Ses_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER DefNew(); oClass:AddMethod( "DefNew", @TTur2Ses_DefNew(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER OpenFiles(); oClass:AddMethod( "OpenFiles", @TTur2Ses_OpenFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CloseFiles(); oClass:AddMethod( "CloseFiles", @TTur2Ses_CloseFiles(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER App(); oClass:AddMethod( "App", @TTur2Ses_App(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS TTur2Ses ;







static FUNCTION TTur2Ses_OpenFiles( cSufDes ) ; local Self AS CLASS TTur2Ses := QSelf() AS CLASS TTur2Ses

   ::oFacCliT := TDataCenter():oFacCliT()

   ::oDbfTikT := DbfServer( "TIKET.DBF", ):NewOpen( "TIKET.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oDbfTikT:AddBag( "TIKET.CDX" ) ; ::oDbfTikT:AddBag( ) ; ::oDbfTikT:AutoIndex()
   ::oDbfTikL := DbfServer( "TIKEL.DBF", ):NewOpen( "TIKEL.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oDbfTikL:AddBag( "TIKEL.CDX" ) ; ::oDbfTikL:AddBag( ) ; ::oDbfTikL:AutoIndex()
   ::oAlbCliT := TDataCenter():oAlbCliT()
   ::oAlbCliL := DbfServer( "ALBCLIL.DBF", ):NewOpen( "ALBCLIL.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oAlbCliL:AddBag( "ALBCLIL.CDX" ) ; ::oAlbCliL:AddBag( ) ; ::oAlbCliL:AutoIndex()
   ::oFacCliL := DbfServer( "FACCLIL.DBF", ):NewOpen( "FACCLIL.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oFacCliL:AddBag( "FACCLIL.CDX" ) ; ::oFacCliL:AddBag( ) ; ::oFacCliL:AutoIndex()
   ::oFacCliP := TDataCenter():oFacCliP()
   ::oAlbPrvT := DbfServer( "AlbProvT.DBF", ):NewOpen( "AlbProvT.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oAlbPrvT:AddBag( "AlbProvT.CDX" ) ; ::oAlbPrvT:AddBag( ) ; ::oAlbPrvT:AutoIndex()
   ::oAlbPrvL := DbfServer( "AlbProvL.DBF", ):NewOpen( "AlbProvL.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oAlbPrvL:AddBag( "AlbProvL.CDX" ) ; ::oAlbPrvL:AddBag( ) ; ::oAlbPrvL:AutoIndex()
   ::oFacPrvT := DbfServer( "FacPrvT.DBF", ):NewOpen( "FacPrvT.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oFacPrvT:AddBag( "FacPrvT.CDX" ) ; ::oFacPrvT:AddBag( ) ; ::oFacPrvT:AutoIndex()
   ::oFacPrvL := DbfServer( "FacPrvL.DBF", ):NewOpen( "FacPrvL.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oFacPrvL:AddBag( "FACPrvL.CDX" ) ; ::oFacPrvL:AddBag( ) ; ::oFacPrvL:AutoIndex()
   ::oFacPrvP := DbfServer( "FacPrvP.DBF", ):NewOpen( "FacPrvP.DBF",, ( cDriver() ),, ( cPatEmp() ), .F., .F., .F., .F. ) ; ::oFacPrvP:AddBag( "FACPrvP.CDX" ) ; ::oFacPrvP:AddBag( ) ; ::oFacPrvP:AutoIndex()

RETURN .T.







static FUNCTION TTur2Ses_CloseFiles( ) ; local Self AS CLASS TTur2Ses := QSelf() AS CLASS TTur2Ses

   ::oArt:End()
   ::oArtNew:End()

   ::oDbfTikT:End()
   ::oDbfTikL:End()
   ::oAlbCliT:End()
   ::oAlbCliL:End()
   ::oFacCliT:End()
   ::oFacCliL:End()
   ::oFacCliP:End()
   ::oAlbPrvT:End()
   ::oAlbPrvL:End()
   ::oFacPrvT:End()
   ::oFacPrvL:End()
   ::oFacPrvP:End()

RETURN .T.



static FUNCTION TTur2Ses_DefNew( ) ; local Self AS CLASS TTur2Ses := QSelf() AS CLASS TTur2Ses

   local n
   local aSufDes     := { "31", "32", "33", "34", "35", "36", "38", "39" }





   for n := 1 to len( aSufDes )

   if !::OpenFiles( aSufDes[ n ] )
      Return Nil
   end

   ::oDbfTikT:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "TIKET.DBF"    )
   ::oDbfTikL:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "TIKEL.DBF"    )
   ::oAlbCliT:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "ALBCLIT.DBF"  )
   ::oAlbCliL:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "ALBCLIL.DBF"  )
   ::oFacCliT:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "FACCLIT.DBF"  )
   ::oFacCliL:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "FACCLIL.DBF"  )
   ::oFacCliP:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "FACCLIP.DBF"  )
   ::oAlbPrvT:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "AlbProvT.DBF" )
   ::oAlbPrvL:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "AlbProvL.DBF" )
   ::oFacPrvT:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "FacPrvT.DBF"  )
   ::oFacPrvL:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "FacPrvL.DBF"  )
   ::oFacPrvP:AppendFrom( FullCurDir() + "EMP" + aSufDes[ n ] + "\" + "FacPrvP.DBF"  )

   ::CloseFiles()

   next

RETURN Self



static FUNCTION TTur2Ses_App( cTitle, oOrigen, oDestino ) ; local Self AS CLASS TTur2Ses := QSelf() AS CLASS TTur2Ses

   while !( oDestino:cAlias )->( Eof() )
      dbPass( oOrigen:cAlias, oDestino:cAlias, .T. )
      Titulo( cTitle + Str( ( oDestino:cAlias )->( Recno() ) ) )
      ( oDestino:cAlias )->( dbSkip() )
   end

RETURN Self



static FUNCTION TTur2Ses_New( ) ; local Self AS CLASS TTur2Ses := QSelf() AS CLASS TTur2Ses

   local n
   local aSufDes     := { "31", "32", "33", "34", "35", "36", "38", "39" }





   for n := 1 to len( aSufDes )

   if !::OpenFiles( aSufDes[ n ] )
      Return Nil
   end

   while !::oArtNew:Eof()

      if !::oArt:Seek( ::oArtNew:Cod )
         dbPass( ::oArtNew:cAlias, ::oArt:cAlias, .T. )
      end

      ::oArtNew:Skip()

   end

   ::CloseFiles()

   next

RETURN Self
