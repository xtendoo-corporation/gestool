#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 10 ".\.\Prg\VerificaProduct.prg"
_HB_CLASS VerificaProduct ; function VerificaProduct ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "VerificaProduct", iif( .F., { }, { @HBObject() } ), @VerificaProduct() ) ) ;

   _HB_MEMBER { oCodeBar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCodeBar"}, .F. )
   _HB_MEMBER { cCodeBar } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodeBar"}, .F. )
   _HB_MEMBER { oCodeBar2 } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCodeBar2"}, .F. )
   _HB_MEMBER { cCodeBar2 } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodeBar2"}, .F. )

   _HB_MEMBER { oTextoArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTextoArticulo"}, .F. )
   _HB_MEMBER { cTextoArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTextoArticulo"}, .F. )

   _HB_MEMBER { oTextoPrecio } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oTextoPrecio"}, .F. )
   _HB_MEMBER { cTextoPrecio } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cTextoPrecio"}, .F. )

   _HB_MEMBER { cCodigoArticulo } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cCodigoArticulo"}, .F. )

   _HB_MEMBER { nView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nView"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @VerificaProduct_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER Resource(); oClass:AddMethod( "Resource", @VerificaProduct_Resource(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER validAndSeek(); oClass:AddMethod( "validAndSeek", @VerificaProduct_validAndSeek(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS VerificaProduct ;



static FUNCTION VerificaProduct_New( ) ; local Self AS CLASS VerificaProduct := QSelf() AS CLASS VerificaProduct

   ::cCodeBar                 := Space( 18 )
   ::cCodeBar2                := Space( 18 )
   ::cTextoArticulo           := "Pase el código de barras"
   ::cTextoPrecio             := ""
   ::cCodigoArticulo          := ""

   ::nView    := D():CreateView()

   ::Resource()

   D():DeleteView( ::nView )

Return( Self )



static FUNCTION VerificaProduct_Resource( ) ; local Self AS CLASS VerificaProduct := QSelf() AS CLASS VerificaProduct

   local oDlg
   local nRow           := 0
   local cTitle         := "gestool Verifica Producto : " + uFieldEmpresa( "CodEmp" ) + "-" + uFieldEmpresa( "cNombre" )
   local oGridTree

   oDlg                 := TDialog():New( 1, 5, 40, 100, cTitle,,, .F., nOR( 128, 2147483648, 12582912, 524288, 131072, 65536 ),, ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ),,, .F.,, oGridFont(),,,, .F.,, "oDlg" )








   ::oCodeBar           := TGridGet():Build(    {  "nRow"      => 45, "nCol"      => {|| GridWidth( 0.5, oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, ::cCodeBar, ::cCodeBar := u ) }, "oWnd"      => oDlg, "nWidth"    => {|| GridWidth( 9, oDlg ) }, "nHeight"   => 25, "lPixels"   => .T., "bValid"    => {|| ::validAndSeek() } } )








   ::oCodeBar2          := TGridGet():Build(    {  "nRow"      => 45, "nCol"      => {|| GridWidth( 0.5, oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, ::cCodeBar2, ::cCodeBar2 := u ) }, "oWnd"      => oDlg, "nWidth"    => {|| GridWidth( 9, oDlg ) }, "nHeight"   => 0, "lPixels"   => .T., "bValid"    => {|| .T. } } )











   ::oTextoArticulo     := TGridSay():Build(    {  "nRow"      => 75, "nCol"      => {|| GridWidth( 0.5, oDlg ) }, "bText"     => {|| ::cTextoArticulo }, "oWnd"      => oDlg, "oFont"     => oGridFontBold(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 8, oDlg ) }, "nHeight"   => 32, "lDesign"   => .F. } )











   ::oTextoPrecio       := TGridSay():Build(    {  "nRow"      => 105, "nCol"      => {|| GridWidth( 0.5, oDlg ) }, "bText"     => {|| ::cTextoPrecio }, "oWnd"      => oDlg, "oFont"     => oGridFontBold(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 8, oDlg ) }, "nHeight"   => 32, "lDesign"   => .F. } )









   TGridImage():Build(  {  "nTop"      => {|| GridRow( 3 ) }, "nLeft"     => {|| GridWidth( 11.5, oDlg ) - 64 }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "", "bLClicked" => {|| oDlg:End() }, "oWnd"      => oDlg } )





   oDlg:bResized        := {|| GridResize( oDlg ) }

   oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|( GridMaximize( oDlg ) )}, oDlg:bRClicked,,, )

Return( .T. )



static FUNCTION VerificaProduct_validAndSeek( ) ; local Self AS CLASS VerificaProduct := QSelf() AS CLASS VerificaProduct

   ::cCodigoArticulo    := cSeekCodebar( ::cCodeBar, D():ArticulosCodigosBarras( ::nView ), D():Articulos( ::nView ) )

   ::oTextoArticulo:setText( ArticulosModel():getField( "Nombre", "Codigo", ::cCodigoArticulo ) )
   ::oTextoPrecio:setText( "PVP: " + Trans( ArticulosModel():getField( "pVtaIva1", "Codigo", ::cCodigoArticulo ), cPorDiv() ) + "€" )

   ::oCodeBar:cText( Space( 18 ) )
   ::oCodeBar:SetFocus()

   WaitSeconds( 5 )

   ::oTextoArticulo:setText( "Pase el código de barras" )
   ::oTextoPrecio:setText( "" )

Return( .T. )
