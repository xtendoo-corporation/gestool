#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 5 ".\Prg\tablet\view\ViewEdit.prg"
_HB_CLASS ViewEdit ; function ViewEdit ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "ViewEdit", iif( .T., { @ViewBase() }, { @HBObject() } ), @ViewEdit() ) ) ;

   _HB_MEMBER { nMode } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMode"}, .F. )

   _HB_MEMBER { getCodigoCliente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"getCodigoCliente"}, .F. )
   _HB_MEMBER { oNombreCliente } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oNombreCliente"}, .F. )

   _HB_MEMBER { getCodigoDireccion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"getCodigoDireccion"}, .F. )
   _HB_MEMBER { getNombreDireccion } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"getNombreDireccion"}, .F. )
   _HB_MEMBER { textNombreDireccion } ; oClass:AddMultiData(, Space( 200 ), nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"textNombreDireccion"}, .F. )

   _HB_MEMBER { oGetEstablecimiento } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetEstablecimiento"}, .F. )
   _HB_MEMBER { cGetEstablecimiento } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetEstablecimiento"}, .F. )

   _HB_MEMBER { oCbxRuta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oCbxRuta"}, .F. )
   _HB_MEMBER { getRuta } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"getRuta"}, .F. )

   _HB_MEMBER { getSerie } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"getSerie"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @ViewEdit_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER startDialog(); oClass:AddMethod( "startDialog", @ViewEdit_startDialog(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineAceptarCancelar(); oClass:AddMethod( "defineAceptarCancelar", @ViewEdit_defineAceptarCancelar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineSerie(); oClass:AddMethod( "defineSerie", @ViewEdit_defineSerie(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER refreshSerie(); oClass:AddInline( "refreshSerie", {|Self | ( ( Self ) ), ( ::getSerie:Refresh() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineRuta(); oClass:AddMethod( "defineRuta", @ViewEdit_defineRuta(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineCliente(); oClass:AddMethod( "defineCliente", @ViewEdit_defineCliente(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )
      _HB_MEMBER refreshCliente(); oClass:AddInline( "refreshCliente", {|Self | ( ( Self ) ), ( ::getCodigoCliente:Refresh(), ::oNombreCliente:Refresh() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineEstablecimiento(); oClass:AddMethod( "defineEstablecimiento", @ViewEdit_defineEstablecimiento(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineDireccion(); oClass:AddMethod( "defineDireccion", @ViewEdit_defineDireccion(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineBotonesAcciones(); oClass:AddMethod( "defineBotonesAcciones", @ViewEdit_defineBotonesAcciones(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineBrowseLineas(); oClass:AddMethod( "defineBrowseLineas", @ViewEdit_defineBrowseLineas(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER gotopBrowseLineas(); oClass:AddInline( "gotopBrowseLineas", {|Self | ( ( Self ) ), ( ::oBrowse:goTop(), ::oBrowse:select(0), ::oBrowse:select(1) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineBotonesMovimiento(); oClass:AddMethod( "defineBotonesMovimiento", @ViewEdit_defineBotonesMovimiento(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER refreshBrowse(); oClass:AddInline( "refreshBrowse", {|Self | ( ( Self ) ), ( if(!Empty( ::oBrowse ), ( ::oBrowse:MakeTotals(), ::oBrowse:Refresh() ), ) ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTitleTipoDocumento(); oClass:AddInline( "getTitleTipoDocumento", {|Self | ( ( Self ) ), ( lblTitle( ::getMode() ) + ::getTextoTipoDocumento() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onclickClientEdit() ; oClass:AddVirtual( "onclickClientEdit" )
   _HB_MEMBER onclickClientSales() ; oClass:AddVirtual( "onclickClientSales" )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS ViewEdit ;



static FUNCTION ViewEdit_New( oSender ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit

   ::oSender               := oSender
   ::cGetEstablecimiento   := ""

Return ( self )



static FUNCTION ViewEdit_startDialog( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit



   if ::oSender:nMode == 1
      ::oSender:ChangeRuta()
      ::oSender:loadNextClient( ::nMode )
   else
      ::gotopBrowseLineas()
   end

   ::refreshBrowse()

Return Self



static FUNCTION ViewEdit_defineAceptarCancelar( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit







   TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 9.0, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_error_64", "bLClicked" => {|| ::oSender:onViewCancel() }, "oWnd"      => ::oDlg } )







   TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 10.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_ok_64", "bLClicked" => {|| ::oSender:onViewSave() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ViewEdit_defineSerie( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit










   TGridUrllink():Build(            {  "nTop"      => 40, "nLeft"     => {|| GridWidth( 0.5, ::oDlg ) }, "cURL"      => "Serie", "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixel"    => .T., "nClrInit"  => nGridColor(), "nClrOver"  => nGridColor(), "nClrVisit" => nGridColor(), "bAction"   => {|| ::oSender:isChangeSerieTablet() } } )









   ::getSerie  := TGridGet():Build( {  "nRow"      => 40, "nCol"      => {|| GridWidth( 2.5, ::oDlg ) }, "bSetGet"   => {|u| ::SetGetValue( u, "Serie" ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 2, ::oDlg ) }, "nHeight"   => 23, "cPict"     => "@!", "bWhen"     => {|| ( GetPvProfString( "Tablet", "BloqueoSerie", ".F.", cIniAplication() ) == ".F." ) .AND. ::oSender:lNotZoomMode() }, "lPixels"   => .T. } )

Return ( self )



static FUNCTION ViewEdit_defineRuta( nRow ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit

   local aCbxRuta       := { "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Todos" }
   local cCbxRuta       := aCbxRuta[ Dow( GetSysDate() ) ]
   local cSayTextRuta

   If( nRow == nil, nRow := 67, ) ;











   TGridSay():Build(    {  "nRow"      => nRow, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Ruta" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 1, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )









   ::oCbxRuta     := TGridComboBox():Build(  {  "nRow"      => nRow, "nCol"      => {|| GridWidth( 2.5, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, cCbxRuta, cCbxRuta := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 2, ::oDlg ) }, "nHeight"   => 25, "aItems"    => aCbxRuta, "bWhen"     => {|| ::oSender:lNotZoomMode() }, "bChange"   => {|| ::oSender:ChangeRuta() } } )








   ::getRuta      := TGridGet():Build(    {  "nRow"      => nRow, "nCol"      => {|| GridWidth( 4.6, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, cSayTextRuta, cSayTextRuta := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 5, ::oDlg ) }, "nHeight"   => 23, "bWhen"     => {|| .F. }, "lPixels"   => .T. } )








   TGridImage():Build(  {  "nTop"      => ( nRow - 5 ), "nLeft"     => {|| GridWidth( 10, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_navigate_left_56", "bLClicked" => {|| ::oSender:priorClient() }, "bWhen"     => {|| ::oSender:lNotZoomMode() }, "oWnd"      => ::oDlg } )








   TGridImage():Build(  {  "nTop"      => ( nRow - 5 ), "nLeft"     => {|| GridWidth( 11, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_navigate_right_56", "bLClicked" => {|| ::oSender:nextClient() }, "bWhen"     => {|| ::oSender:lNotZoomMode() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ViewEdit_defineCliente( nRow ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit

   If( nRow == nil, nRow := 95, ) ;










   TGridUrllink():Build({  "nTop"      => nRow, "nLeft"     => {|| GridWidth( 0.5, ::oDlg ) }, "cURL"      => "Cliente", "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixel"    => .T., "nClrInit"  => nGridColor(), "nClrOver"  => nGridColor(), "nClrVisit" => nGridColor(), "bAction"   => {|| ::oSender:runGridCustomer() } } )










   ::getCodigoCliente   := TGridGet():Build( {  "nRow"      => nRow, "nCol"      => {|| GridWidth( 2.5, ::oDlg ) }, "bSetGet"   => {|u| ::SetGetValue( u, "Cliente" ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 2, ::oDlg ) }, "nHeight"   => 23, "lPixels"   => .T., "cPict"     => Replicate( "X", RetNumCodCliEmp() ), "bWhen"     => {|| ::oSender:lNotZoomMode() }, "bValid"    => {|| ::oSender:lValidCliente() } } )








   ::oNombreCliente     := TGridGet():Build( {  "nRow"      => nRow, "nCol"      => {|| GridWidth( 4.6, ::oDlg ) }, "bSetGet"   => {|u| ::SetGetValue( u, "NombreCliente" ) }, "oWnd"      => ::oDlg, "lPixels"   => .T., "nWidth"    => {|| GridWidth( 5, ::oDlg ) }, "nHeight"   => 23, "bWhen"     => {|| ::oSender:lNotZoomMode() } } )








   TGridImage():Build(  {  "nTop"      => nRow, "nLeft"     => {|| GridWidth( 10, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_edit_48", "bLClicked" => {|| ::oSender:onClickClientEdit() }, "bWhen"     => {|| ::oSender:lNotZoomMode() }, "oWnd"      => ::oDlg } )








   TGridImage():Build(  {  "nTop"      => nRow, "nLeft"     => {|| GridWidth( 11, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_document_text_user_48", "bLClicked" => {|| ::oSender:onClickClientSales() }, "bWhen"     => {|| ::oSender:lNotZoomMode() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ViewEdit_defineEstablecimiento( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit











   TGridSay():Build(    {  "nRow"      => 120, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Establecimiento" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 1.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )









   ::oGetEstablecimiento := TGridGet():Build( {  "nRow"      => 120, "nCol"      => {|| GridWidth( 2.5, ::oDlg ) }, "bSetGet"   => {|u| ::SetGetValue( u, "Direccion" ) }, "bSetGet"   => {|u| if( PCount() == 0, ::cGetEstablecimiento, ::cGetEstablecimiento := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 7.1, ::oDlg ) }, "nHeight"   => 23, "lPixels"   => .T., "bWhen"     => {|| .F. } } )

Return ( self )



static FUNCTION ViewEdit_defineDireccion( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit











   TGridUrllink():Build(                     {  "nTop"      => 120, "nLeft"     => {|| GridWidth( 0.5, ::oDlg ) }, "cURL"      => "Dirección", "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixel"    => .T., "nClrInit"  => nGridColor(), "nClrOver"  => nGridColor(), "nClrVisit" => nGridColor(), "bWhen"     => {|| ::oSender:lNotZoomMode() }, "bAction"   => {|| ::oSender:runGridDirections() } } )









   ::getCodigoDireccion := TGridGet():Build( {  "nRow"      => 120, "nCol"      => {|| GridWidth( 2.5, ::oDlg ) }, "bSetGet"   => {|u| ::SetGetValue( u, "Direccion" ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 2, ::oDlg ) }, "nHeight"   => 23, "lPixels"   => .T., "bWhen"     => {|| ::oSender:lNotZoomMode() }, "bValid"    => {|| ::oSender:lValidDireccion() } } )








   ::getNombreDireccion := TGridGet():Build( {  "nRow"      => 120, "nCol"      => {|| GridWidth( 4.6, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, ::textNombreDireccion, ::textNombreDireccion := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 7, ::oDlg ) }, "lPixels"   => .T., "bWhen"     => {|| ::oSender:lNotZoomMode() }, "nHeight"   => 23 } )

Return ( self )



static FUNCTION ViewEdit_defineBotonesAcciones( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit









   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 0.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_plus_64", "bLClicked" => {|| ::oSender:appendDetail(), ::RefreshBrowse() }, "bWhen"     => {|| ::oSender:appendButtonMode() }, "oWnd"      => ::oDlg } )








   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 2, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_pencil_64", "bWhen"     => {|| ::oSender:editButtonMode() }, "bLClicked" => {|| ::oSender:EditDetail( ::oBrowse:nArrayAt ), ::RefreshBrowse() }, "oWnd"      => ::oDlg } )








   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 3.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_delete_64", "bWhen"     => {|| ::oSender:deleteButtonMode() }, "bLClicked" => {|| ::oSender:DeleteDetail( ::oBrowse:nArrayAt ), ::RefreshBrowse()}, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ViewEdit_defineBotonesMovimiento( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit







   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 7.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_navigate_up2_64", "bLClicked" => {|| ::oBrowse:PageUp(), ::oBrowse:Select( 0 ), ::oBrowse:Select( 1 ), ::oBrowse:Refresh()  }, "oWnd"      => ::oDlg } )







   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 8.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_navigate_up_64", "bLClicked" => {|| ::oBrowse:GoUp(), ::oBrowse:Select( 0 ), ::oBrowse:Select( 1 ), ::oBrowse:Refresh()  }, "oWnd"      => ::oDlg } )







   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 9.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_navigate_down_64", "bLClicked" => {|| ::oBrowse:GoDown(), ::oBrowse:Select( 0 ), ::oBrowse:Select( 1 ), ::oBrowse:Refresh() }, "oWnd"      => ::oDlg } )







   TGridImage():Build(  {  "nTop"      => 145, "nLeft"     => {|| GridWidth( 10.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_navigate_down2_64", "bLClicked" => {|| ::oBrowse:PageDown(), ::oBrowse:Select( 0 ), ::oBrowse:Select( 1 ), ::oBrowse:Refresh() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION ViewEdit_defineBrowseLineas( ) ; local Self AS CLASS ViewEdit := QSelf() AS CLASS ViewEdit

   ::defineBotonesAcciones()

   ::defineBotonesMovimiento()

   ::oBrowse                  := TGridIXBrowse():New( ::oDlg )

   ::oBrowse:nTop             := ::oBrowse:EvalRow( 180 )
   ::oBrowse:nLeft            := ::oBrowse:EvalCol( {|| GridWidth( 0.5, ::oDlg ) } )
   ::oBrowse:nWidth           := ::oBrowse:EvalWidth( {|| GridWidth( 11, ::oDlg ) } )
   ::oBrowse:nHeight          := ::oBrowse:EvalHeight( {|| GridHeigth( ::oDlg ) - ::oBrowse:nTop - 10 } )

   ::oBrowse:lFooter          := .T.
   ::oBrowse:nMarqueeStyle    := 6

   ::oBrowse:nHeaderHeight    := 48
   ::oBrowse:nFooterHeight    := 48
   ::oBrowse:nRowHeight       := 48
   ::oBrowse:nDataLines       := 2

   ::oBrowse:SetArray( ::oSender:getLines(), , , .F. )

   if ::oSender:lNotZoomMode()
      ::oBrowse:bLDblClick    := {|| ::oSender:EditDetail( ::oBrowse:nArrayAt ), ::refreshBrowse() }
   end

   ::oBrowse:CreateFromCode()

Return ( self )
