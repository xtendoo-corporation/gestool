#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 4 ".\Prg\tablet\presenter\backupPresenter.prg"
_HB_CLASS BackupPresenter ; function BackupPresenter ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "BackupPresenter", iif( .T., { @DocumentsSales() }, { @HBObject() } ), @BackupPresenter() ) ) ;

   _HB_MEMBER { oBackupView } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oBackupView"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @BackupPresenter_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runNavigator(); oClass:AddMethod( "runNavigator", @BackupPresenter_runNavigator(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER onPreRunNavigator(); oClass:AddInline( "onPreRunNavigator", {|Self | ( ( Self ) ), ( .T. ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER play(); oClass:AddMethod( "play", @BackupPresenter_play(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER runBackup(); oClass:AddMethod( "runBackup", @BackupPresenter_runBackup(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS BackupPresenter ;



static FUNCTION BackupPresenter_New( ) ; local Self AS CLASS BackupPresenter := QSelf() AS CLASS BackupPresenter

   ::oBackupView    := backupView():New( self )
   ::oBackupView:setTitleDocumento( "Copia de seguridad" )

Return( self )



static FUNCTION BackupPresenter_runNavigator( ) ; local Self AS CLASS BackupPresenter := QSelf() AS CLASS BackupPresenter

   if !empty( ::oBackupView )
      ::oBackupView:Resource()
   end

Return( self )



static FUNCTION BackupPresenter_play( ) ; local Self AS CLASS BackupPresenter := QSelf() AS CLASS BackupPresenter

   if ::onPreRunNavigator()
      ::runNavigator()
   end

return ( self )



static FUNCTION BackupPresenter_runBackup( ) ; local Self AS CLASS BackupPresenter := QSelf() AS CLASS BackupPresenter

   local oClassBackup

   oClassBackup            := TBackup():Create()

   if !Empty( oClassBackup )

      if oClassBackup:OpenFiles()

         oClassBackup:aEmp                := { { .T., uFieldEmpresa( "CodEmp" ), uFieldEmpresa( "cNombre" ) } }
         oClassBackup:lDir                := .T.
         oClassBackup:lInternet           := .F.
         oClassBackup:cDir                := ::oBackupView:cGetFolder
         oClassBackup:cFile               := "C:\InfomeCopia.Txt"
         oClassBackup:oProgreso           := ::oBackupView:oMeter
         oClassBackup:oProgresoTarget     := ::oBackupView:oMeterTarget

         if oClassBackup:ZipFiles()
            ApoloMsgStop( "Proceso finalizado con éxito." )
         end

      end

      oClassBackup:CloseFiles()

   end

Return ( self )
