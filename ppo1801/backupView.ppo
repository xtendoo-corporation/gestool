#line 91 "\fwh1801\include\FiveWin.Ch"
         EXTERNAL FW_GT
















extern errorsys









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 5 ".\Prg\tablet\view\backupView.prg"
_HB_CLASS backupView ; function backupView ( ... ) ; STATIC s_oClass ; LOCAL nScope, oClass, oInstance ; IF s_oClass == NIL .AND. __clsLockDef( @s_oClass ) ; BEGIN SEQUENCE ; nScope := 1 ; ( ( nScope ) ) ; oClass := iif( .F.,, HBClass():new( "backupView", iif( .T., { @ViewBase() }, { @HBObject() } ), @backupView() ) ) ;

   _HB_MEMBER { oGetFolder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oGetFolder"}, .F. )
   _HB_MEMBER { cGetFolder } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cGetFolder"}, .F. )
   _HB_MEMBER { cFileLog } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"cFileLog"}, .F. )
   _HB_MEMBER { oMeter } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMeter"}, .F. )
   _HB_MEMBER { nMeter } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMeter"}, .F. )
   _HB_MEMBER { oMeterTarget } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"oMeterTarget"}, .F. )
   _HB_MEMBER { nMeterTarget } ; oClass:AddMultiData(,, nScope + iif( .F., 16, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ), {"nMeterTarget"}, .F. )

   _HB_MEMBER New(); oClass:AddMethod( "New", @backupView_New(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER insertControls(); oClass:AddMethod( "insertControls", @backupView_insertControls(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineAceptarCancelar(); oClass:AddMethod( "defineAceptarCancelar", @backupView_defineAceptarCancelar(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineFolder(); oClass:AddMethod( "defineFolder", @backupView_defineFolder(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER defineMeter(); oClass:AddMethod( "defineMeter", @backupView_defineMeter(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER getTitleTipoDocumento(); oClass:AddInline( "getTitleTipoDocumento", {|Self | ( ( Self ) ), ( ::getTextoTipoDocumento() ) }, nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER CargarPreferencias(); oClass:AddMethod( "CargarPreferencias", @backupView_CargarPreferencias(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

   _HB_MEMBER GuardarPreferencias(); oClass:AddMethod( "GuardarPreferencias", @backupView_GuardarPreferencias(), nScope + iif( .F., 8, 0 ) + iif( .F., 256, 0 ) + iif( .F., 2048, 0 ) )

oClass:Create() ; ; ALWAYS ; __clsUnlockDef( @s_oClass, oClass ) ; end ; oInstance := oClass:Instance() ; IF __objHasMsg( oInstance, "InitClass" ) ; oInstance:InitClass( ... ) ; END ; RETURN oInstance ; END ; RETURN s_oClass:Instance() AS CLASS backupView ;



static FUNCTION backupView_New( oSender ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView

   ::oSender         := oSender

   ::nMeter          := 0
   ::nMeterTarget    := 0

   ::CargarPreferencias()

Return ( self )



static FUNCTION backupView_insertControls( ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView

   ::defineFolder()

   ::defineMeter()

Return ( Self )



static FUNCTION backupView_defineFolder( ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView











   TGridSay():Build(    {  "nRow"      => 55, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Destino" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 1.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )







   ::oGetFolder      := TGridGet():Build( {  "nRow"      => 55, "nCol"      => {|| GridWidth( 2.5, ::oDlg ) }, "bSetGet"   => {|u| if( PCount() == 0, ::cGetFolder, ::cGetFolder := u ) }, "oWnd"      => ::oDlg, "nWidth"    => {|| GridWidth( 7.1, ::oDlg ) }, "nHeight"   => 23, "lPixels"   => .T. } )

Return ( Self )



static FUNCTION backupView_defineMeter( ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView












   TGridSay():Build(    {  "nRow"      => 90, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Proceso" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 1.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )











   ::oMeter          := TGridMeter():Build( {   "nRow"            => 90, "nCol"            => {|| GridWidth( 3.2, ::oDlg ) }, "bSetGet"         => {|u| if( PCount() == 0, ::nMeter, ::nMeter := u ) }, "oWnd"            => ::oDlg, "nWidth"          => {|| GridWidth( 7.1, ::oDlg ) }, "nHeight"         => 20, "lPixel"          => .T., "lUpdate"         => .T., "lNoPercentage"   => .T., "nClrPane"        => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nClrBar"         => ( 128 + ( 255 * 256 ) + ( 0 * 65536 ) ) } )











   TGridSay():Build(    {  "nRow"      => 125, "nCol"      => {|| GridWidth( 0.5, ::oDlg ) }, "bText"     => {|| "Guardando" }, "oWnd"      => ::oDlg, "oFont"     => oGridFont(), "lPixels"   => .T., "nClrText"  => ( 0 + ( 0 * 256 ) + ( 0 * 65536 ) ), "nClrBack"  => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nWidth"    => {|| GridWidth( 1.5, ::oDlg ) }, "nHeight"   => 23, "lDesign"   => .F. } )











   ::oMeterTarget    := TGridMeter():Build( {   "nRow"            => 125, "nCol"            => {|| GridWidth( 3.2, ::oDlg ) }, "bSetGet"         => {|u| if( PCount() == 0, ::nMeterTarget, ::nMeterTarget := u ) }, "oWnd"            => ::oDlg, "nWidth"          => {|| GridWidth( 7.1, ::oDlg ) }, "nHeight"         => 20, "lPixel"          => .T., "lUpdate"         => .T., "lNoPercentage"   => .T., "nClrPane"        => ( 255 + ( 255 * 256 ) + ( 255 * 65536 ) ), "nClrBar"         => ( 128 + ( 255 * 256 ) + ( 0 * 65536 ) ) } )

Return ( Self )



static FUNCTION backupView_defineAceptarCancelar( ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView







   TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 9.0, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_error_64", "bLClicked" => {|| ::oDlg:End() }, "oWnd"      => ::oDlg } )







   TGridImage():Build(  {  "nTop"      => 5, "nLeft"     => {|| GridWidth( 10.5, ::oDlg ) }, "nWidth"    => 64, "nHeight"   => 64, "cResName"  => "gc_ok_64", "bLClicked" => {|| ::oSender:runBackup(), ::GuardarPreferencias(), ::oDlg:End() }, "oWnd"      => ::oDlg } )

Return ( self )



static FUNCTION backupView_CargarPreferencias( ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView

   local oIniApp                 := TIni():New( cIniAplication() )

   ::cGetFolder                  := PadR( oIniApp:Get( "Backup", "Destino",            "C:\",                  ::cGetFolder ),         200 )
   ::cFileLog                    := PadR( oIniApp:Get( "Backup", "Informe",            "C:\InfomeCopia.Txt",   ::cFileLog ),           200 )

return ( Self )



static FUNCTION backupView_GuardarPreferencias( ) ; local Self AS CLASS backupView := QSelf() AS CLASS backupView

   local oIniApp                 := TIni():New( cIniAplication() )

   oIniApp:Set( "Backup",  "Destino",           ::cGetFolder )

return ( Self )
